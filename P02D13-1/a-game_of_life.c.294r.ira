
;; Function main (main, funcdef_no=6, decl_uid=4967, cgraph_uid=7, symbol_order=6)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 19 n_edges 26 count 19 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 1
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15 13 14 11 12
;; 2 succs { 9 3 }
;; 3 succs { 8 4 5 6 7 }
;; 4 succs { 10 }
;; 5 succs { 10 }
;; 6 succs { 10 }
;; 7 succs { 10 }
;; 8 succs { 10 }
;; 9 succs { 18 }
;; 10 succs { 16 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 11 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 114.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 148.
verify found no changes in insn with uid = 151.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 179.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 193.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r141: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r141,l0) best DIREG, allocno GENERAL_REGS
    r140: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r140,l0) best SIREG, allocno GENERAL_REGS
    r139: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r139,l0) best DIREG, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r133,l0) best DIREG, allocno GENERAL_REGS
    r132: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r132,l0) best SIREG, allocno GENERAL_REGS
    r131: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r131,l0) best DREG, allocno GENERAL_REGS
    r130: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r130,l0) best DIREG, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a18 (r129,l0) best SIREG, allocno GENERAL_REGS
    r128: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a19 (r128,l0) best DREG, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r127,l0) best DIREG, allocno GENERAL_REGS
    r126: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r126,l0) best SIREG, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a22 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a23 (r124,l0) best AREG, allocno GENERAL_REGS
    r123: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a24 (r123,l0) best DIREG, allocno GENERAL_REGS
    r122: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a25 (r122,l0) best SIREG, allocno GENERAL_REGS
    r121: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a26 (r121,l0) best DREG, allocno GENERAL_REGS
    r120: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r120,l0) best AREG, allocno GENERAL_REGS
    r119: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r119,l0) best DIREG, allocno GENERAL_REGS
    r118: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r118,l0) best AREG, allocno GENERAL_REGS
    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r116,l0) best SIREG, allocno GENERAL_REGS
    r115: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r115,l0) best DREG, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r114,l0) best AREG, allocno GENERAL_REGS
    r113: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r113,l0) best DIREG, allocno GENERAL_REGS
    r112: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r112,l0) best SIREG, allocno GENERAL_REGS
    r111: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r111,l0) best DREG, allocno GENERAL_REGS
    r110: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r110,l0) best AREG, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r108,l0) best SIREG, allocno GENERAL_REGS
    r107: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a40 (r107,l0) best DREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a51 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a52 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a53 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a54 (r95,l0) best SIREG, allocno GENERAL_REGS
    r94: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a55 (r94,l0) best DREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a56 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a57 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a58 (r91,l0) best SIREG, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a11 (r86,l0) best AREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a50 (r82,l0) best AREG, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:18000 SSE_REGS:18000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:412000 MEM:7000
  a2(r141,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r140,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r139,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a5(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a8(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a9(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a10(r136,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a11(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a12(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a13(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a14(r133,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a15(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a16(r131,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a17(r130,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r129,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a19(r128,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a20(r127,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a21(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a22(r125,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a23(r124,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a24(r123,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a25(r122,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a26(r121,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a27(r120,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a28(r119,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a29(r118,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a30(r117,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a31(r116,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a32(r115,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a33(r114,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a34(r113,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a35(r112,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a36(r111,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a37(r110,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a38(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a39(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a40(r107,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a41(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a42(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:16000 INT_SSE_REGS:16000 ALL_REGS:204000 MEM:6000
  a43(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a44(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a45(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a46(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a47(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a48(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:32000 INT_SSE_REGS:32000 ALL_REGS:524000 MEM:11000
  a49(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a50(r82,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 MEM:12000
  a51(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a52(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a53(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a54(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a55(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a56(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a57(r92,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a58(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 202(l0): point = 0
   Insn 201(l0): point = 2
   Insn 197(l0): point = 4
   Insn 194(l0): point = 7
   Insn 193(l0): point = 9
   Insn 192(l0): point = 11
   Insn 191(l0): point = 13
   Insn 190(l0): point = 15
   Insn 189(l0): point = 17
   Insn 155(l0): point = 20
   Insn 154(l0): point = 22
   Insn 153(l0): point = 24
   Insn 152(l0): point = 26
   Insn 151(l0): point = 28
   Insn 150(l0): point = 30
   Insn 149(l0): point = 32
   Insn 148(l0): point = 34
   Insn 147(l0): point = 36
   Insn 146(l0): point = 38
   Insn 145(l0): point = 40
   Insn 144(l0): point = 42
   Insn 143(l0): point = 44
   Insn 142(l0): point = 46
   Insn 141(l0): point = 48
   Insn 140(l0): point = 50
   Insn 139(l0): point = 52
   Insn 138(l0): point = 54
   Insn 137(l0): point = 56
   Insn 136(l0): point = 58
   Insn 135(l0): point = 60
   Insn 134(l0): point = 62
   Insn 133(l0): point = 64
   Insn 132(l0): point = 66
   Insn 131(l0): point = 68
   Insn 130(l0): point = 70
   Insn 129(l0): point = 72
   Insn 128(l0): point = 74
   Insn 127(l0): point = 76
   Insn 126(l0): point = 78
   Insn 125(l0): point = 80
   Insn 124(l0): point = 82
   Insn 123(l0): point = 84
   Insn 187(l0): point = 87
   Insn 186(l0): point = 89
   Insn 182(l0): point = 92
   Insn 181(l0): point = 94
   Insn 180(l0): point = 96
   Insn 179(l0): point = 98
   Insn 178(l0): point = 100
   Insn 177(l0): point = 102
   Insn 176(l0): point = 104
   Insn 175(l0): point = 106
   Insn 174(l0): point = 108
   Insn 173(l0): point = 110
   Insn 172(l0): point = 112
   Insn 161(l0): point = 115
   Insn 160(l0): point = 117
   Insn 157(l0): point = 120
   Insn 169(l0): point = 123
   Insn 168(l0): point = 125
   Insn 167(l0): point = 127
   Insn 166(l0): point = 129
   Insn 163(l0): point = 131
   Insn 217(l0): point = 134
   Insn 215(l0): point = 137
   Insn 115(l0): point = 139
   Insn 114(l0): point = 141
   Insn 113(l0): point = 143
   Insn 112(l0): point = 145
   Insn 111(l0): point = 147
   Insn 213(l0): point = 150
   Insn 106(l0): point = 152
   Insn 105(l0): point = 154
   Insn 104(l0): point = 156
   Insn 103(l0): point = 158
   Insn 102(l0): point = 160
   Insn 101(l0): point = 162
   Insn 100(l0): point = 164
   Insn 99(l0): point = 166
   Insn 98(l0): point = 168
   Insn 211(l0): point = 171
   Insn 93(l0): point = 173
   Insn 92(l0): point = 175
   Insn 91(l0): point = 177
   Insn 90(l0): point = 179
   Insn 89(l0): point = 181
   Insn 209(l0): point = 184
   Insn 84(l0): point = 186
   Insn 83(l0): point = 188
   Insn 82(l0): point = 190
   Insn 81(l0): point = 192
   Insn 80(l0): point = 194
   Insn 79(l0): point = 196
   Insn 78(l0): point = 198
   Insn 77(l0): point = 200
   Insn 76(l0): point = 202
   Insn 207(l0): point = 205
   Insn 71(l0): point = 207
   Insn 70(l0): point = 209
   Insn 69(l0): point = 211
   Insn 68(l0): point = 213
   Insn 67(l0): point = 215
   Insn 66(l0): point = 217
   Insn 65(l0): point = 219
   Insn 64(l0): point = 221
   Insn 63(l0): point = 223
   Insn 205(l0): point = 226
   Insn 58(l0): point = 228
   Insn 57(l0): point = 230
   Insn 56(l0): point = 232
   Insn 55(l0): point = 234
   Insn 54(l0): point = 236
   Insn 53(l0): point = 238
   Insn 52(l0): point = 240
   Insn 51(l0): point = 242
   Insn 50(l0): point = 244
   Insn 44(l0): point = 247
   Insn 43(l0): point = 249
   Insn 42(l0): point = 251
   Insn 41(l0): point = 253
   Insn 40(l0): point = 255
   Insn 39(l0): point = 257
   Insn 38(l0): point = 259
   Insn 37(l0): point = 261
   Insn 36(l0): point = 264
   Insn 35(l0): point = 266
   Insn 32(l0): point = 268
   Insn 31(l0): point = 270
   Insn 30(l0): point = 272
   Insn 29(l0): point = 274
   Insn 28(l0): point = 276
   Insn 27(l0): point = 278
   Insn 26(l0): point = 280
   Insn 25(l0): point = 282
   Insn 24(l0): point = 284
   Insn 23(l0): point = 286
   Insn 22(l0): point = 288
   Insn 21(l0): point = 290
   Insn 20(l0): point = 292
   Insn 19(l0): point = 294
   Insn 18(l0): point = 296
   Insn 17(l0): point = 298
   Insn 16(l0): point = 300
   Insn 15(l0): point = 302
   Insn 14(l0): point = 304
   Insn 13(l0): point = 306
   Insn 12(l0): point = 308
   Insn 11(l0): point = 310
   Insn 10(l0): point = 312
   Insn 9(l0): point = 314
   Insn 8(l0): point = 316
   Insn 7(l0): point = 318
   Insn 6(l0): point = 320
   Insn 5(l0): point = 322
 a0(r90): [3..4]
 a1(r89): [137..139] [5..7]
 a2(r141): [12..15]
 a3(r140): [14..17]
 a4(r139): [95..96]
 a5(r88): [103..106]
 a6(r87): [111..112]
 a7(r138): [124..125]
 a8(r137): [126..127]
 a9(r135): [128..131]
 a10(r136): [128..129]
 a11(r86): [25..26]
 a12(r85): [31..32]
 a13(r84): [39..42]
 a14(r133): [49..54]
 a15(r132): [51..56]
 a16(r131): [53..58]
 a17(r130): [63..68]
 a18(r129): [65..70]
 a19(r128): [67..72]
 a20(r127): [79..80]
 a21(r126): [83..84]
 a22(r125): [146..147]
 a23(r124): [153..154]
 a24(r123): [159..164]
 a25(r122): [161..166]
 a26(r121): [163..168]
 a27(r120): [174..175]
 a28(r119): [180..181]
 a29(r118): [187..188]
 a30(r117): [193..198]
 a31(r116): [195..200]
 a32(r115): [197..202]
 a33(r114): [208..209]
 a34(r113): [214..219]
 a35(r112): [216..221]
 a36(r111): [218..223]
 a37(r110): [229..230]
 a38(r109): [235..240]
 a39(r108): [237..242]
 a40(r107): [239..244]
 a41(r105): [248..249]
 a42(r106): [250..251]
 a43(r104): [250..253]
 a44(r103): [254..255]
 a45(r102): [256..257]
 a46(r101): [256..259]
 a47(r100): [260..261]
 a48(r99): [262..268]
 a49(r83): [269..270]
 a50(r82): [273..274]
 a51(r98): [281..282]
 a52(r97): [287..288]
 a53(r96): [293..298]
 a54(r95): [295..300]
 a55(r94): [297..302]
 a56(r93): [305..306]
 a57(r92): [311..314]
 a58(r91): [313..316]
Compressing live ranges: from 325 to 82 - 25%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [32..33] [2..3]
 a2(r141): [4..5]
 a3(r140): [4..5]
 a4(r139): [20..21]
 a5(r88): [22..23]
 a6(r87): [24..25]
 a7(r138): [26..27]
 a8(r137): [28..29]
 a9(r135): [30..31]
 a10(r136): [30..31]
 a11(r86): [6..7]
 a12(r85): [8..9]
 a13(r84): [10..11]
 a14(r133): [12..13]
 a15(r132): [12..13]
 a16(r131): [12..13]
 a17(r130): [14..15]
 a18(r129): [14..15]
 a19(r128): [14..15]
 a20(r127): [16..17]
 a21(r126): [18..19]
 a22(r125): [34..35]
 a23(r124): [36..37]
 a24(r123): [38..39]
 a25(r122): [38..39]
 a26(r121): [38..39]
 a27(r120): [40..41]
 a28(r119): [42..43]
 a29(r118): [44..45]
 a30(r117): [46..47]
 a31(r116): [46..47]
 a32(r115): [46..47]
 a33(r114): [48..49]
 a34(r113): [50..51]
 a35(r112): [50..51]
 a36(r111): [50..51]
 a37(r110): [52..53]
 a38(r109): [54..55]
 a39(r108): [54..55]
 a40(r107): [54..55]
 a41(r105): [56..57]
 a42(r106): [58..59]
 a43(r104): [58..59]
 a44(r103): [60..61]
 a45(r102): [62..63]
 a46(r101): [62..63]
 a47(r100): [64..65]
 a48(r99): [66..67]
 a49(r83): [68..69]
 a50(r82): [70..71]
 a51(r98): [72..73]
 a52(r97): [74..75]
 a53(r96): [76..77]
 a54(r95): [76..77]
 a55(r94): [76..77]
 a56(r93): [78..79]
 a57(r92): [80..81]
 a58(r91): [80..81]
  pref0:a2(r141)<-hr5@1500
  pref1:a3(r140)<-hr4@1500
  pref2:a4(r139)<-hr5@1500
  pref3:a14(r133)<-hr5@1500
  pref4:a15(r132)<-hr4@1500
  pref5:a16(r131)<-hr1@1500
  pref6:a17(r130)<-hr5@1500
  pref7:a18(r129)<-hr4@1500
  pref8:a19(r128)<-hr1@1500
  pref9:a20(r127)<-hr5@1500
  pref10:a21(r126)<-hr4@1500
  pref11:a22(r125)<-hr5@1500
  pref12:a23(r124)<-hr0@1500
  pref13:a24(r123)<-hr5@1500
  pref14:a25(r122)<-hr4@1500
  pref15:a26(r121)<-hr1@1500
  pref16:a27(r120)<-hr0@1500
  pref17:a28(r119)<-hr5@1500
  pref18:a29(r118)<-hr0@1500
  pref19:a30(r117)<-hr5@1500
  pref20:a31(r116)<-hr4@1500
  pref21:a32(r115)<-hr1@1500
  pref22:a33(r114)<-hr0@1500
  pref23:a34(r113)<-hr5@1500
  pref24:a35(r112)<-hr4@1500
  pref25:a36(r111)<-hr1@1500
  pref26:a37(r110)<-hr0@1500
  pref27:a38(r109)<-hr5@1500
  pref28:a39(r108)<-hr4@1500
  pref29:a40(r107)<-hr1@1500
  pref30:a51(r98)<-hr5@1500
  pref31:a52(r97)<-hr0@1500
  pref32:a53(r96)<-hr5@1500
  pref33:a54(r95)<-hr4@1500
  pref34:a55(r94)<-hr1@1500
  pref35:a56(r93)<-hr0@1500
  pref36:a57(r92)<-hr5@1500
  pref37:a58(r91)<-hr4@1500
  pref38:a0(r90)<-hr0@1500
  pref39:a5(r88)<-hr5@1500
  pref40:a6(r87)<-hr5@1500
  pref41:a11(r86)<-hr0@1500
  pref42:a12(r85)<-hr5@1500
  pref43:a13(r84)<-hr5@1500
  pref44:a50(r82)<-hr0@1500
  regions=1, blocks=19, points=82
    allocnos=59 (big 0), copies=0, conflicts=0, ranges=60
Disposition:
   50:r82  l0     0   49:r83  l0     0   13:r84  l0     0   12:r85  l0     0
   11:r86  l0     0    6:r87  l0     0    5:r88  l0     0    1:r89  l0     0
    0:r90  l0     0   58:r91  l0     1   57:r92  l0     0   56:r93  l0     0
   55:r94  l0     1   54:r95  l0     2   53:r96  l0     0   52:r97  l0     0
   51:r98  l0     0   48:r99  l0     0   47:r100 l0     0   46:r101 l0     1
   45:r102 l0     0   44:r103 l0     0   43:r104 l0     0   41:r105 l0     0
   42:r106 l0     1   40:r107 l0     1   39:r108 l0     2   38:r109 l0     0
   37:r110 l0     0   36:r111 l0     1   35:r112 l0     2   34:r113 l0     0
   33:r114 l0     0   32:r115 l0     1   31:r116 l0     2   30:r117 l0     0
   29:r118 l0     0   28:r119 l0     0   27:r120 l0     0   26:r121 l0     1
   25:r122 l0     2   24:r123 l0     0   23:r124 l0     0   22:r125 l0     0
   21:r126 l0     0   20:r127 l0     0   19:r128 l0     1   18:r129 l0     2
   17:r130 l0     0   16:r131 l0     1   15:r132 l0     2   14:r133 l0     0
    9:r135 l0     0   10:r136 l0     1    8:r137 l0     0    7:r138 l0     0
    4:r139 l0     0    3:r140 l0     1    2:r141 l0     0
+++Costs: overall -41000, reg -41000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={26d,13u} r1={30d,7u} r2={23d} r4={35d,12u} r5={41d,18u} r6={1d,18u} r7={1d,40u} r8={22d} r9={22d} r10={22d} r11={22d} r12={22d} r13={22d} r14={22d} r15={22d} r16={1d,17u} r17={33d,4u} r18={22d} r19={1d,67u} r20={23d} r21={23d} r22={23d} r23={23d} r24={23d} r25={23d} r26={23d} r27={23d} r28={22d} r29={22d} r30={22d} r31={22d} r32={22d} r33={22d} r34={22d} r35={22d} r36={23d} r37={23d} r38={22d} r39={22d} r44={22d} r45={22d} r46={22d} r47={22d} r48={22d} r49={22d} r50={22d} r51={22d} r52={22d} r53={22d} r54={22d} r55={22d} r56={22d} r57={22d} r58={22d} r59={22d} r60={22d} r61={22d} r62={22d} r63={22d} r64={22d} r65={22d} r66={22d} r67={22d} r68={22d} r69={22d} r70={22d} r71={22d} r72={22d} r73={22d} r74={22d} r75={22d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={2d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,2u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 1861{1604d,257u,0e} in 154{132 regular + 22 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 91 92 93 94 95 96 97 98 99
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])
        (const_int 25 [0x19])) "game_of_life.c":23:9 75 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])
        (const_int 80 [0x50])) "game_of_life.c":24:9 75 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -22 [0xffffffffffffffea])) [0 key+0 S1 A16])
        (const_int -1 [0xffffffffffffffff])) "game_of_life.c":25:10 77 {*movqi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])) "game_of_life.c":26:15 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":26:15 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 91)) "game_of_life.c":26:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 92)) "game_of_life.c":26:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_alloc") [flags 0x3]  <function_decl 0x7fd3e8e07d00 dynamic_array_alloc>) [0 dynamic_array_alloc S1 A8])
            (const_int 0 [0]))) "game_of_life.c":26:15 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 93)
        (reg:DI 0 ax)) "game_of_life.c":26:15 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 93)) "game_of_life.c":26:15 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(insn 15 14 16 2 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])) "game_of_life.c":27:9 75 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":27:9 75 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":27:9 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 1 dx)
        (reg:SI 94)) "game_of_life.c":27:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 19 18 20 2 (set (reg:SI 4 si)
        (reg:SI 95)) "game_of_life.c":27:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg:DI 96)) "game_of_life.c":27:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 21 20 22 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_init") [flags 0x3]  <function_decl 0x7fd3e8e07f00 dynamic_array_init>) [0 dynamic_array_init S1 A8])
            (const_int 0 [0]))) "game_of_life.c":27:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 22 21 23 2 (set (reg:DI 97)
        (reg:DI 0 ax)) "game_of_life.c":27:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 22 24 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 97)) "game_of_life.c":27:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 24 23 25 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 speed+0 S4 A32])
        (const_int 131072 [0x20000])) "game_of_life.c":28:9 75 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 98)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fd3e8e731b0 *.LC0>)) "game_of_life.c":30:5 74 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg:DI 98)) "game_of_life.c":30:5 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fd3e8e731b0 *.LC0>)
            (nil))))
(call_insn 27 26 28 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fd3e900f800 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "game_of_life.c":30:5 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 28 27 29 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getchar") [flags 0x41]  <function_decl 0x7fd3e90eef00 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) "game_of_life.c":31:14 824 {*call_value}
     (nil)
    (nil))
(insn 29 28 30 2 (set (reg:SI 82 [ _1 ])
        (reg:SI 0 ax)) "game_of_life.c":31:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 30 29 31 2 (set (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -21 [0xffffffffffffffeb])) [0 h+0 S1 A8])
        (subreg:QI (reg:SI 82 [ _1 ]) 0)) "game_of_life.c":31:10 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 31 30 32 2 (set (reg:SI 83 [ _2 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                    (const_int -21 [0xffffffffffffffeb])) [0 h+0 S1 A8]))) "game_of_life.c":32:5 153 {extendqisi2}
     (nil))
(insn 32 31 35 2 (parallel [
            (set (reg:SI 99)
                (plus:SI (reg:SI 83 [ _2 ])
                    (const_int -49 [0xffffffffffffffcf])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":32:5 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 32 36 2 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 99)
            (const_int 4 [0x4]))) "game_of_life.c":32:5 11 {*cmpsi_1}
     (nil))
(jump_insn 36 35 204 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "game_of_life.c":32:5 806 {*jcc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 109)
;;  succ:       9
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 99

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 99
;; lr  def 	 17 [flags] 100 101 102 103 104 105 106
(note 204 36 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 37 204 38 3 (set (reg:DI 100)
        (zero_extend:DI (reg:SI 99))) "game_of_life.c":32:5 138 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 99)
        (nil)))
(insn 38 37 39 3 (parallel [
            (set (reg:DI 101)
                (ashift:DI (reg:DI 100)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":32:5 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 3 (set (reg:DI 102)
        (label_ref:DI 45)) "game_of_life.c":32:5 74 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 45 (nil)))
(insn 40 39 41 3 (set (reg:SI 103)
        (mem/u/c:SI (plus:DI (reg:DI 101)
                (reg:DI 102)) [0  S4 A8])) "game_of_life.c":32:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_DEAD (reg:DI 101)
            (nil))))
(insn 41 40 42 3 (set (reg:DI 104)
        (sign_extend:DI (reg:SI 103))) "game_of_life.c":32:5 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103)
        (nil)))
(insn 42 41 43 3 (set (reg:DI 106)
        (label_ref:DI 45)) "game_of_life.c":32:5 74 {*movdi_internal}
     (insn_list:REG_LABEL_OPERAND 45 (nil)))
(insn 43 42 44 3 (parallel [
            (set (reg:DI 105)
                (plus:DI (reg:DI 104)
                    (reg:DI 106)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":32:5 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 106)
        (expr_list:REG_DEAD (reg:DI 104)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(jump_insn 44 43 45 3 (parallel [
            (set (pc)
                (reg:DI 105))
            (use (label_ref 45))
        ]) "game_of_life.c":32:5 811 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil))
 -> 45)
;;  succ:       8 [20.0% (adjusted)] 
;;              4 [20.0% (adjusted)] 
;;              5 [20.0% (adjusted)] 
;;              6 [20.0% (adjusted)] 
;;              7 [20.0% (adjusted)] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; Insn is not within a basic block
(code_label 45 44 46 4 (nil) [3 uses])
;; Insn is not within a basic block
(jump_table_data 46 45 47 (addr_diff_vec:SI (label_ref:DI 45)
         [
            (label_ref:DI 48)
            (label_ref:DI 61)
            (label_ref:DI 74)
            (label_ref:DI 87)
            (label_ref:DI 96)
        ]
        (const_int 0 [0])
        (const_int 0 [0])))
(barrier 47 46 48)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [20.0% (adjusted)] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 107 108 109 110
(code_label 48 47 49 4 8 (nil) [1 uses])
(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 4 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])) "game_of_life.c":34:17 75 {*movsi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":34:17 75 {*movsi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":34:17 74 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:SI 1 dx)
        (reg:SI 107)) "game_of_life.c":34:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 107)
        (nil)))
(insn 54 53 55 4 (set (reg:SI 4 si)
        (reg:SI 108)) "game_of_life.c":34:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(insn 55 54 56 4 (set (reg:DI 5 di)
        (reg:DI 109)) "game_of_life.c":34:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn 56 55 57 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_init_life") [flags 0x3]  <function_decl 0x7fd3e8e0d000 dynamic_array_init_life>) [0 dynamic_array_init_life S1 A8])
            (const_int 0 [0]))) "game_of_life.c":34:17 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 57 56 58 4 (set (reg:DI 110)
        (reg:DI 0 ax)) "game_of_life.c":34:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 58 57 205 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 110)) "game_of_life.c":34:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
(jump_insn 205 58 206 4 (set (pc)
        (label_ref 118)) "game_of_life.c":35:13 807 {jump}
     (nil)
 -> 118)
;;  succ:       10 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 206 205 61)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [20.0% (adjusted)] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 111 112 113 114
(code_label 61 206 62 5 7 (nil) [1 uses])
(note 62 61 63 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 5 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])) "game_of_life.c":37:17 75 {*movsi_internal}
     (nil))
(insn 64 63 65 5 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":37:17 75 {*movsi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":37:17 74 {*movdi_internal}
     (nil))
(insn 66 65 67 5 (set (reg:SI 1 dx)
        (reg:SI 111)) "game_of_life.c":37:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 67 66 68 5 (set (reg:SI 4 si)
        (reg:SI 112)) "game_of_life.c":37:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112)
        (nil)))
(insn 68 67 69 5 (set (reg:DI 5 di)
        (reg:DI 113)) "game_of_life.c":37:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(call_insn 69 68 70 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_init_life2") [flags 0x3]  <function_decl 0x7fd3e8e0d100 dynamic_array_init_life2>) [0 dynamic_array_init_life2 S1 A8])
            (const_int 0 [0]))) "game_of_life.c":37:17 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 70 69 71 5 (set (reg:DI 114)
        (reg:DI 0 ax)) "game_of_life.c":37:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 71 70 207 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 114)) "game_of_life.c":37:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 114)
        (nil)))
(jump_insn 207 71 208 5 (set (pc)
        (label_ref 118)) "game_of_life.c":38:13 807 {jump}
     (nil)
 -> 118)
;;  succ:       10 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 208 207 74)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       3 [20.0% (adjusted)] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 115 116 117 118
(code_label 74 208 75 6 6 (nil) [1 uses])
(note 75 74 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 6 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])) "game_of_life.c":40:17 75 {*movsi_internal}
     (nil))
(insn 77 76 78 6 (set (reg:SI 116)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":40:17 75 {*movsi_internal}
     (nil))
(insn 78 77 79 6 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":40:17 74 {*movdi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:SI 1 dx)
        (reg:SI 115)) "game_of_life.c":40:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 115)
        (nil)))
(insn 80 79 81 6 (set (reg:SI 4 si)
        (reg:SI 116)) "game_of_life.c":40:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 116)
        (nil)))
(insn 81 80 82 6 (set (reg:DI 5 di)
        (reg:DI 117)) "game_of_life.c":40:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn 82 81 83 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_init_life3") [flags 0x3]  <function_decl 0x7fd3e8e0d200 dynamic_array_init_life3>) [0 dynamic_array_init_life3 S1 A8])
            (const_int 0 [0]))) "game_of_life.c":40:17 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 83 82 84 6 (set (reg:DI 118)
        (reg:DI 0 ax)) "game_of_life.c":40:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 84 83 209 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 118)) "game_of_life.c":40:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 118)
        (nil)))
(jump_insn 209 84 210 6 (set (pc)
        (label_ref 118)) "game_of_life.c":41:13 807 {jump}
     (nil)
 -> 118)
;;  succ:       10 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 210 209 87)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       3 [20.0% (adjusted)] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 119 120
(code_label 87 210 88 7 5 (nil) [1 uses])
(note 88 87 89 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 7 (set (reg:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":43:17 74 {*movdi_internal}
     (nil))
(insn 90 89 91 7 (set (reg:DI 5 di)
        (reg:DI 119)) "game_of_life.c":43:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119)
        (nil)))
(call_insn 91 90 92 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_init_life4") [flags 0x3]  <function_decl 0x7fd3e8e0d300 dynamic_array_init_life4>) [0 dynamic_array_init_life4 S1 A8])
            (const_int 0 [0]))) "game_of_life.c":43:17 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 92 91 93 7 (set (reg:DI 120)
        (reg:DI 0 ax)) "game_of_life.c":43:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 93 92 211 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 120)) "game_of_life.c":43:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 120)
        (nil)))
(jump_insn 211 93 212 7 (set (pc)
        (label_ref 118)) "game_of_life.c":44:13 807 {jump}
     (nil)
 -> 118)
;;  succ:       10 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 212 211 96)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       3 [20.0% (adjusted)] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 121 122 123 124
(code_label 96 212 97 8 3 (nil) [1 uses])
(note 97 96 98 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 8 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])) "game_of_life.c":46:17 75 {*movsi_internal}
     (nil))
(insn 99 98 100 8 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":46:17 75 {*movsi_internal}
     (nil))
(insn 100 99 101 8 (set (reg:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":46:17 74 {*movdi_internal}
     (nil))
(insn 101 100 102 8 (set (reg:SI 1 dx)
        (reg:SI 121)) "game_of_life.c":46:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121)
        (nil)))
(insn 102 101 103 8 (set (reg:SI 4 si)
        (reg:SI 122)) "game_of_life.c":46:17 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 122)
        (nil)))
(insn 103 102 104 8 (set (reg:DI 5 di)
        (reg:DI 123)) "game_of_life.c":46:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 123)
        (nil)))
(call_insn 104 103 105 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_init_life5") [flags 0x3]  <function_decl 0x7fd3e8e0d400 dynamic_array_init_life5>) [0 dynamic_array_init_life5 S1 A8])
            (const_int 0 [0]))) "game_of_life.c":46:17 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 105 104 106 8 (set (reg:DI 124)
        (reg:DI 0 ax)) "game_of_life.c":46:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 106 105 213 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 124)) "game_of_life.c":46:17 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(jump_insn 213 106 214 8 (set (pc)
        (label_ref 118)) "game_of_life.c":47:13 807 {jump}
     (nil)
 -> 118)
;;  succ:       10 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 214 213 109)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       2
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89 125
(code_label 109 214 110 9 2 (nil) [1 uses])
(note 110 109 111 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 9 (set (reg:DI 125)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fd3e8e73240 *.LC1>)) "game_of_life.c":49:13 74 {*movdi_internal}
     (nil))
(insn 112 111 113 9 (set (reg:DI 5 di)
        (reg:DI 125)) "game_of_life.c":49:13 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fd3e8e73240 *.LC1>)
            (nil))))
(insn 113 112 114 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "game_of_life.c":49:13 77 {*movqi_internal}
     (nil))
(call_insn 114 113 115 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd3e900f100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "game_of_life.c":49:13 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 115 114 215 9 (set (reg:SI 89 [ _13 ])
        (const_int 1 [0x1])) "game_of_life.c":50:20 75 {*movsi_internal}
     (nil))
(jump_insn 215 115 216 9 (set (pc)
        (label_ref 195)) "game_of_life.c":50:20 807 {jump}
     (nil)
 -> 195)
;;  succ:       18 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89

(barrier 216 215 118)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       7 [always] 
;;              4 [always] 
;;              5 [always] 
;;              6 [always] 
;;              8 [always] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 118 216 119 10 9 (nil) [5 uses])
(note 119 118 217 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 217 119 218 10 (set (pc)
        (label_ref 183)) "game_of_life.c":53:11 807 {jump}
     (nil)
 -> 183)
;;  succ:       16 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 218 217 185)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       16
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 84 85 86 126 127 128 129 130 131 132 133
(code_label 185 218 122 11 14 (nil) [1 uses])
(note 122 185 123 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 11 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 speed+0 S4 A32])) "game_of_life.c":54:9 75 {*movsi_internal}
     (nil))
(insn 124 123 125 11 (set (reg:SI 4 si)
        (reg:SI 126)) "game_of_life.c":54:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 126)
        (nil)))
(insn 125 124 126 11 (set (reg:DI 127)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd3e8e732d0 *.LC2>)) "game_of_life.c":54:9 74 {*movdi_internal}
     (nil))
(insn 126 125 127 11 (set (reg:DI 5 di)
        (reg:DI 127)) "game_of_life.c":54:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 127)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fd3e8e732d0 *.LC2>)
            (nil))))
(insn 127 126 128 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "game_of_life.c":54:9 77 {*movqi_internal}
     (nil))
(call_insn 128 127 129 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fd3e900f100 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "game_of_life.c":54:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 129 128 130 11 (set (reg:SI 128)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])) "game_of_life.c":55:9 75 {*movsi_internal}
     (nil))
(insn 130 129 131 11 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":55:9 75 {*movsi_internal}
     (nil))
(insn 131 130 132 11 (set (reg:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":55:9 74 {*movdi_internal}
     (nil))
(insn 132 131 133 11 (set (reg:SI 1 dx)
        (reg:SI 128)) "game_of_life.c":55:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 128)
        (nil)))
(insn 133 132 134 11 (set (reg:SI 4 si)
        (reg:SI 129)) "game_of_life.c":55:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 129)
        (nil)))
(insn 134 133 135 11 (set (reg:DI 5 di)
        (reg:DI 130)) "game_of_life.c":55:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 130)
        (nil)))
(call_insn 135 134 136 11 (call (mem:QI (symbol_ref:DI ("dynamic_array_print") [flags 0x3]  <function_decl 0x7fd3e8e07c00 dynamic_array_print>) [0 dynamic_array_print S1 A8])
        (const_int 0 [0])) "game_of_life.c":55:9 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 136 135 137 11 (set (reg:SI 131)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 matrix_width+0 S4 A32])) "game_of_life.c":56:9 75 {*movsi_internal}
     (nil))
(insn 137 136 138 11 (set (reg:SI 132)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":56:9 75 {*movsi_internal}
     (nil))
(insn 138 137 139 11 (set (reg:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":56:9 74 {*movdi_internal}
     (nil))
(insn 139 138 140 11 (set (reg:SI 1 dx)
        (reg:SI 131)) "game_of_life.c":56:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131)
        (nil)))
(insn 140 139 141 11 (set (reg:SI 4 si)
        (reg:SI 132)) "game_of_life.c":56:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 132)
        (nil)))
(insn 141 140 142 11 (set (reg:DI 5 di)
        (reg:DI 133)) "game_of_life.c":56:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(call_insn 142 141 143 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_move_life") [flags 0x3]  <function_decl 0x7fd3e8e0d500 dynamic_array_move_life>) [0 dynamic_array_move_life S1 A8])
            (const_int 0 [0]))) "game_of_life.c":56:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(call_insn 143 142 144 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("initscr") [flags 0x41]  <function_decl 0x7fd3e9116c00 initscr>) [0 initscr S1 A8])
            (const_int 0 [0]))) "game_of_life.c":58:9 824 {*call_value}
     (expr_list:REG_UNUSED (reg:DI 0 ax)
        (nil))
    (nil))
(insn 144 143 145 11 (set (reg/f:DI 84 [ stdscr.0_3 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7fd3e91306c0 stdscr>) [3 stdscr+0 S8 A64])) "game_of_life.c":59:9 74 {*movdi_internal}
     (nil))
(insn 145 144 146 11 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "game_of_life.c":59:9 75 {*movsi_internal}
     (nil))
(insn 146 145 147 11 (set (reg:DI 5 di)
        (reg/f:DI 84 [ stdscr.0_3 ])) "game_of_life.c":59:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ stdscr.0_3 ])
        (nil)))
(call_insn 147 146 148 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodelay") [flags 0x41]  <function_decl 0x7fd3e9131600 nodelay>) [0 nodelay S1 A8])
            (const_int 0 [0]))) "game_of_life.c":59:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(call_insn 148 147 149 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbreak") [flags 0x41]  <function_decl 0x7fd3e910cf00 cbreak>) [0 cbreak S1 A8])
            (const_int 0 [0]))) "game_of_life.c":60:9 824 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (nil))
(insn 149 148 150 11 (set (reg/f:DI 85 [ stdscr.1_4 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7fd3e91306c0 stdscr>) [3 stdscr+0 S8 A64])) "game_of_life.c":61:15 74 {*movdi_internal}
     (nil))
(insn 150 149 151 11 (set (reg:DI 5 di)
        (reg/f:DI 85 [ stdscr.1_4 ])) "game_of_life.c":61:15 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ stdscr.1_4 ])
        (nil)))
(call_insn 151 150 152 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wgetch") [flags 0x41]  <function_decl 0x7fd3e914a800 wgetch>) [0 wgetch S1 A8])
            (const_int 0 [0]))) "game_of_life.c":61:15 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 152 151 153 11 (set (reg:SI 86 [ _5 ])
        (reg:SI 0 ax)) "game_of_life.c":61:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 153 152 154 11 (set (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                (const_int -22 [0xffffffffffffffea])) [0 key+0 S1 A16])
        (subreg:QI (reg:SI 86 [ _5 ]) 0)) "game_of_life.c":61:13 77 {*movqi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ _5 ])
        (nil)))
(insn 154 153 155 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                    (const_int -22 [0xffffffffffffffea])) [0 key+0 S1 A16])
            (const_int 107 [0x6b]))) "game_of_life.c":63:12 9 {*cmpqi_1}
     (nil))
(jump_insn 155 154 156 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) "game_of_life.c":63:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 158)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 156 155 157 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 speed+0 S4 A32])
                (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 speed+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":63:31 655 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       11
;;              12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 158 157 159 13 12 (nil) [1 uses])
(note 159 158 160 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                    (const_int -22 [0xffffffffffffffea])) [0 key+0 S1 A16])
            (const_int 108 [0x6c]))) "game_of_life.c":64:12 9 {*cmpqi_1}
     (nil))
(jump_insn 161 160 162 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 170)
            (pc))) "game_of_life.c":64:12 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 170)
;;  succ:       14 (FALLTHRU)
;;              15
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 135 136 137 138
(note 162 161 163 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 166 14 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 speed+0 S4 A32])) "game_of_life.c":64:31 75 {*movsi_internal}
     (nil))
(insn 166 163 167 14 (parallel [
            (set (reg:SI 136)
                (lshiftrt:SI (reg:SI 135)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":64:31 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 167 166 168 14 (parallel [
            (set (reg:SI 137)
                (plus:SI (reg:SI 136)
                    (reg:SI 135)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":64:31 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg:SI 135)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 168 167 169 14 (parallel [
            (set (reg:SI 138)
                (ashiftrt:SI (reg:SI 137)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":64:31 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 169 168 170 14 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 speed+0 S4 A32])
        (reg:SI 138)) "game_of_life.c":64:31 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 138)
        (nil)))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       13
;;              14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 87 88 139
(code_label 170 169 171 15 13 (nil) [1 uses])
(note 171 170 172 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 173 15 (set (reg:SI 87 [ speed.2_6 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 speed+0 S4 A32])) "game_of_life.c":65:9 75 {*movsi_internal}
     (nil))
(insn 173 172 174 15 (set (reg:SI 5 di)
        (reg:SI 87 [ speed.2_6 ])) "game_of_life.c":65:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87 [ speed.2_6 ])
        (nil)))
(call_insn 174 173 175 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("usleep") [flags 0x41]  <function_decl 0x7fd3e8dcd500 usleep>) [0 usleep S1 A8])
            (const_int 0 [0]))) "game_of_life.c":65:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 175 174 176 15 (set (reg/f:DI 88 [ stdscr.3_7 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7fd3e91306c0 stdscr>) [3 stdscr+0 S8 A64])) "game_of_life.c":66:9 74 {*movdi_internal}
     (nil))
(insn 176 175 177 15 (set (reg:SI 4 si)
        (const_int 0 [0])) "game_of_life.c":66:9 75 {*movsi_internal}
     (nil))
(insn 177 176 178 15 (set (reg:DI 5 di)
        (reg/f:DI 88 [ stdscr.3_7 ])) "game_of_life.c":66:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ stdscr.3_7 ])
        (nil)))
(call_insn 178 177 179 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nodelay") [flags 0x41]  <function_decl 0x7fd3e9131600 nodelay>) [0 nodelay S1 A8])
            (const_int 0 [0]))) "game_of_life.c":66:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(call_insn 179 178 180 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("endwin") [flags 0x41]  <function_decl 0x7fd3e9114700 endwin>) [0 endwin S1 A8])
            (const_int 0 [0]))) "game_of_life.c":67:9 824 {*call_value}
     (expr_list:REG_UNUSED (reg:SI 0 ax)
        (nil))
    (nil))
(insn 180 179 181 15 (set (reg:DI 139)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fd3e8e73360 *.LC3>)) "game_of_life.c":68:9 74 {*movdi_internal}
     (nil))
(insn 181 180 182 15 (set (reg:DI 5 di)
        (reg:DI 139)) "game_of_life.c":68:9 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 139)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fd3e8e73360 *.LC3>)
            (nil))))
(call_insn 182 181 183 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("system") [flags 0x41]  <function_decl 0x7fd3e8db0900 system>) [0 system S1 A8])
            (const_int 0 [0]))) "game_of_life.c":68:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       15 (FALLTHRU,DFS_BACK)
;;              10 [always] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 183 182 184 16 11 (nil) [1 uses])
(note 184 183 186 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 186 184 187 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:DI (reg/f:DI 19 frame)
                    (const_int -22 [0xffffffffffffffea])) [0 key+0 S1 A16])
            (const_int 113 [0x71]))) "game_of_life.c":53:16 9 {*cmpqi_1}
     (nil))
(jump_insn 187 186 188 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 185)
            (pc))) "game_of_life.c":53:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 185)
;;  succ:       11
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89 140 141
(note 188 187 189 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 17 (set (reg:SI 140)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 matrix_height+0 S4 A64])) "game_of_life.c":71:5 75 {*movsi_internal}
     (nil))
(insn 190 189 191 17 (set (reg:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":71:5 74 {*movdi_internal}
     (nil))
(insn 191 190 192 17 (set (reg:SI 4 si)
        (reg:SI 140)) "game_of_life.c":71:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 140)
        (nil)))
(insn 192 191 193 17 (set (reg:DI 5 di)
        (reg:DI 141)) "game_of_life.c":71:5 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 141)
        (nil)))
(call_insn 193 192 194 17 (call (mem:QI (symbol_ref:DI ("dynamic_array_free") [flags 0x3]  <function_decl 0x7fd3e8e07e00 dynamic_array_free>) [0 dynamic_array_free S1 A8])
        (const_int 0 [0])) "game_of_life.c":71:5 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 194 193 195 17 (set (reg:SI 89 [ _13 ])
        (const_int 0 [0])) "game_of_life.c":72:12 75 {*movsi_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 1, flags: (RTL)
;;  pred:       17 (FALLTHRU)
;;              9 [always] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 89
;; lr  def 	 0 [ax] 90
(code_label 195 194 196 18 10 (nil) [1 uses])
(note 196 195 197 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 201 18 (set (reg:SI 90 [ <retval> ])
        (reg:SI 89 [ _13 ])) "game_of_life.c":73:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89 [ _13 ])
        (nil)))
(insn 201 197 202 18 (set (reg/i:SI 0 ax)
        (reg:SI 90 [ <retval> ])) "game_of_life.c":73:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ <retval> ])
        (nil)))
(insn 202 201 0 18 (use (reg/i:SI 0 ax)) "game_of_life.c":73:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_print (dynamic_array_print, funcdef_no=7, decl_uid=4928, cgraph_uid=8, symbol_order=7)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 16 count 14 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 12 11 13
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 8 7 3 6 5 4
;;
;; Loop 2
;;  header 8, latch 7
;;  depth 2, outer 1
;;  nodes: 8 7 6 5 4
;; 2 succs { 10 }
;; 3 succs { 8 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 4 9 }
;; 9 succs { 10 }
;; 10 succs { 3 12 }
;; 12 succs { 11 }
;; 11 succs { 13 }
;; 13 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 49.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a6(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a7(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a8(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a9(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a10(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a11(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a12(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000

   Insn 69(l0): point = 0
   Insn 67(l0): point = 4
   Insn 62(l0): point = 7
   Insn 12(l0): point = 9
   Insn 56(l0): point = 12
   Insn 55(l0): point = 14
   Insn 54(l0): point = 16
   Insn 50(l0): point = 19
   Insn 49(l0): point = 21
   Insn 48(l0): point = 23
   Insn 46(l0): point = 26
   Insn 45(l0): point = 28
   Insn 44(l0): point = 30
   Insn 40(l0): point = 33
   Insn 37(l0): point = 36
   Insn 36(l0): point = 38
   Insn 64(l0): point = 41
   Insn 31(l0): point = 43
   Insn 30(l0): point = 45
   Insn 28(l0): point = 48
   Insn 27(l0): point = 50
   Insn 26(l0): point = 52
   Insn 25(l0): point = 54
   Insn 24(l0): point = 56
   Insn 23(l0): point = 58
   Insn 22(l0): point = 60
   Insn 21(l0): point = 62
   Insn 20(l0): point = 64
   Insn 19(l0): point = 66
   Insn 18(l0): point = 68
   Insn 17(l0): point = 70
   Insn 16(l0): point = 72
   Insn 60(l0): point = 75
   Insn 8(l0): point = 77
   Insn 4(l0): point = 79
   Insn 3(l0): point = 81
   Insn 2(l0): point = 83
 a0(r94): [15..16]
 a1(r93): [29..30]
 a2(r89): [51..52]
 a3(r88): [53..54]
 a4(r87): [55..56]
 a5(r85): [55..62]
 a6(r86): [57..58]
 a7(r92): [59..60]
 a8(r84): [63..64]
 a9(r91): [65..66]
 a10(r83): [65..68]
 a11(r82): [69..70]
 a12(r90): [71..72]
Compressing live ranges: from 86 to 22 - 25%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r93): [2..3]
 a2(r89): [4..5]
 a3(r88): [6..7]
 a4(r87): [8..9]
 a5(r85): [8..13]
 a6(r86): [10..11]
 a7(r92): [12..13]
 a8(r84): [14..15]
 a9(r91): [16..17]
 a10(r83): [16..17]
 a11(r82): [18..19]
 a12(r90): [20..21]
  regions=1, blocks=14, points=22
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13
Disposition:
   11:r82  l0     0   10:r83  l0     1    8:r84  l0     0    5:r85  l0     1
    6:r86  l0     0    4:r87  l0     0    3:r88  l0     0    2:r89  l0     0
   12:r90  l0     0    9:r91  l0     0    7:r92  l0     0    1:r93  l0     0
    0:r94  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_print

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d} r1={4d,1u} r2={4d} r4={4d,1u} r5={7d,4u} r6={1d,13u} r7={1d,16u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,12u} r17={12d,3u} r18={3d} r19={1d,29u,1e} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={4d} r37={4d} r38={3d} r39={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r82={1d,1u} r83={1d,1u,1e} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 339{245d,92u,2e} in 37{34 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])
        (reg:DI 5 di [ A ])) "game_of_life.c":75:49 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ A ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":75:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 M+0 S4 A32])
        (reg:SI 1 dx [ M ])) "game_of_life.c":75:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ M ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 60 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A64])
        (const_int 0 [0])) "game_of_life.c":76:14 75 {*movsi_internal}
     (nil))
(jump_insn 60 8 61 2 (set (pc)
        (label_ref 51)) "game_of_life.c":76:5 807 {jump}
     (nil)
 -> 51)
;;  succ:       10 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 61 60 53)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       10
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 53 61 11 3 21 (nil) [1 uses])
(note 11 53 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 62 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 j+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":77:18 75 {*movsi_internal}
     (nil))
(jump_insn 62 12 63 3 (set (pc)
        (label_ref 41)) "game_of_life.c":77:9 807 {jump}
     (nil)
 -> 41)
;;  succ:       8 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 63 62 43)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       8
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 83 84 85 86 87 88 89 90 91 92
(code_label 43 63 15 4 20 (nil) [1 uses])
(note 15 43 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A64])) "game_of_life.c":78:18 75 {*movsi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 82 [ _1 ])
        (sign_extend:DI (reg:SI 90))) "game_of_life.c":78:18 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:DI 83 [ _2 ])
                (ashift:DI (reg:DI 82 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":78:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])) "game_of_life.c":78:18 74 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (parallel [
            (set (reg/f:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (reg/f:DI 91)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":78:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])
                        (reg:DI 83 [ _2 ]))
                    (nil))))))
(insn 21 20 22 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 84 [ _3 ]) [4 *_3+0 S8 A64])) "game_of_life.c":78:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 22 21 23 4 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 j+0 S4 A32])) "game_of_life.c":78:21 75 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 86 [ _5 ])
        (sign_extend:DI (reg:SI 92))) "game_of_life.c":78:21 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 24 23 25 4 (parallel [
            (set (reg:DI 87 [ _6 ])
                (ashift:DI (reg:DI 86 [ _5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":78:21 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 86 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 4 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (reg:DI 87 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":78:21 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
        (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 26 25 27 4 (set (reg:SI 89 [ _8 ])
        (mem:SI (reg/f:DI 88 [ _7 ]) [2 *_7+0 S4 A32])) "game_of_life.c":78:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
        (nil)))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _8 ])
            (const_int 0 [0]))) "game_of_life.c":78:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 89 [ _8 ])
        (nil)))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "game_of_life.c":78:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 34)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:SI 5 di)
        (const_int 32 [0x20])) "game_of_life.c":79:17 75 {*movsi_internal}
     (nil))
(call_insn 31 30 64 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fd3e900f400 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "game_of_life.c":79:17 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(jump_insn 64 31 65 5 (set (pc)
        (label_ref 38)) 807 {jump}
     (nil)
 -> 38)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 65 64 34)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(code_label 34 65 35 6 18 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (reg:SI 5 di)
        (const_int 111 [0x6f])) "game_of_life.c":81:17 75 {*movsi_internal}
     (nil))
(call_insn 37 36 38 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fd3e900f400 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "game_of_life.c":81:17 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 38 37 39 7 19 (nil) [1 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":77:33 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU,DFS_BACK)
;;              3 [always] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 93
(code_label 41 40 42 8 17 (nil) [1 uses])
(note 42 41 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 44 42 45 8 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 j+0 S4 A32])) "game_of_life.c":77:27 75 {*movsi_internal}
     (nil))
(insn 45 44 46 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 93)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [2 M+0 S4 A32]))) "game_of_life.c":77:27 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(jump_insn 46 45 47 8 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) "game_of_life.c":77:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 43)
;;  succ:       4
;;              9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "game_of_life.c":83:9 75 {*movsi_internal}
     (nil))
(call_insn 49 48 50 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fd3e900f400 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "game_of_life.c":83:9 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 50 49 51 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":76:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       10 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 12, flags: (RTL)
;;  pred:       9 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 94
(code_label 51 50 52 10 16 (nil) [1 uses])
(note 52 51 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 54 52 55 10 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 i+0 S4 A64])) "game_of_life.c":76:23 75 {*movsi_internal}
     (nil))
(insn 55 54 56 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 94)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 N+0 S4 A32]))) "game_of_life.c":76:23 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(jump_insn 56 55 66 10 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "game_of_life.c":76:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 53)
;;  succ:       3
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 66 56 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 57 12 (const_int 0 [0]) "game_of_life.c":85:1 843 {nop}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 12, next block 13, flags: (RTL)
;;  pred:       12 [always]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 57 67 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       13 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL)
;;  pred:       11 [always]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 68 57 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 0 13 (const_int 0 [0]) "game_of_life.c":85:1 843 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_alloc (dynamic_array_alloc, funcdef_no=8, decl_uid=4931, cgraph_uid=9, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best AREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r83,l0) best DIREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a4(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a5(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a6(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a7(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a8(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a9(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a10(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a11(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a12(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a13(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a14(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a15(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a16(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000

   Insn 47(l0): point = 0
   Insn 46(l0): point = 2
   Insn 42(l0): point = 4
   Insn 39(l0): point = 6
   Insn 31(l0): point = 9
   Insn 30(l0): point = 11
   Insn 29(l0): point = 13
   Insn 28(l0): point = 15
   Insn 27(l0): point = 17
   Insn 26(l0): point = 19
   Insn 25(l0): point = 21
   Insn 24(l0): point = 23
   Insn 23(l0): point = 25
   Insn 22(l0): point = 27
   Insn 21(l0): point = 29
   Insn 20(l0): point = 31
   Insn 19(l0): point = 33
   Insn 18(l0): point = 35
   Insn 37(l0): point = 38
   Insn 36(l0): point = 40
   Insn 35(l0): point = 42
   Insn 49(l0): point = 45
   Insn 14(l0): point = 47
   Insn 13(l0): point = 49
   Insn 12(l0): point = 51
   Insn 11(l0): point = 53
   Insn 10(l0): point = 55
   Insn 9(l0): point = 57
   Insn 8(l0): point = 59
   Insn 7(l0): point = 61
   Insn 3(l0): point = 63
   Insn 2(l0): point = 65
 a0(r91): [3..4]
 a1(r90): [5..6]
 a2(r98): [41..42]
 a3(r88): [12..21]
 a4(r89): [12..13]
 a5(r97): [14..15]
 a6(r85): [20..31]
 a7(r96): [22..23]
 a8(r87): [22..25]
 a9(r86): [26..27]
 a10(r95): [28..29]
 a11(r84): [32..33]
 a12(r94): [34..35]
 a13(r93): [50..51]
 a14(r83): [56..57]
 a15(r82): [58..59]
 a16(r92): [60..61]
Compressing live ranges: from 68 to 30 - 44%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r90): [2..3]
 a2(r98): [20..21]
 a3(r88): [4..9]
 a4(r89): [4..5]
 a5(r97): [6..7]
 a6(r85): [8..15]
 a7(r96): [10..11]
 a8(r87): [10..11]
 a9(r86): [12..13]
 a10(r95): [14..15]
 a11(r84): [16..17]
 a12(r94): [18..19]
 a13(r93): [22..23]
 a14(r83): [24..25]
 a15(r82): [26..27]
 a16(r92): [28..29]
  pref0:a5(r97)<-hr0@1500
  pref1:a13(r93)<-hr0@1500
  pref2:a0(r91)<-hr0@1500
  pref3:a6(r85)<-hr5@1500
  pref4:a14(r83)<-hr5@1500
  regions=1, blocks=6, points=30
    allocnos=17 (big 0), copies=0, conflicts=0, ranges=17
Disposition:
   15:r82  l0     0   14:r83  l0     0   11:r84  l0     0    6:r85  l0     0
    9:r86  l0     1    8:r87  l0     2    3:r88  l0     3    4:r89  l0     0
    1:r90  l0     0    0:r91  l0     0   16:r92  l0     0   13:r93  l0     0
   12:r94  l0     0   10:r95  l0     1    7:r96  l0     1    5:r97  l0     0
    2:r98  l0     0
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_alloc

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={8d,1u} r18={2d} r19={1d,18u,1e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 241{179d,60u,2e} in 32{30 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 92 93
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 N+0 S4 A32])
        (reg:SI 5 di [ N ])) "game_of_life.c":87:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ N ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 M+0 S4 A32])
        (reg:SI 4 si [ M ])) "game_of_life.c":87:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ M ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 N+0 S4 A32])) "game_of_life.c":88:23 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 82 [ _1 ])
        (sign_extend:DI (reg:SI 92))) "game_of_life.c":88:23 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 83 [ _2 ])
                (ashift:DI (reg:DI 82 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":88:23 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 83 [ _2 ])) "game_of_life.c":88:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fd3e902e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "game_of_life.c":88:23 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 93)
        (reg:DI 0 ax)) "game_of_life.c":88:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 93)
            (nil))))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg/f:DI 93)) "game_of_life.c":88:23 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 14 13 49 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":89:14 75 {*movsi_internal}
     (nil))
(jump_insn 49 14 50 2 (set (pc)
        (label_ref 32)) "game_of_life.c":89:5 807 {jump}
     (nil)
 -> 32)
;;  succ:       4 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 50 49 34)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 84 85 86 87 88 89 94 95 96 97
(code_label 34 50 17 3 24 (nil) [1 uses])
(note 17 34 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 M+0 S4 A32])) "game_of_life.c":89:47 75 {*movsi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 84 [ _3 ])
        (sign_extend:DI (reg:SI 94))) "game_of_life.c":89:47 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 20 19 21 3 (parallel [
            (set (reg:DI 85 [ _4 ])
                (ashift:DI (reg:DI 84 [ _3 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":89:47 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 21 20 22 3 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "game_of_life.c":89:34 75 {*movsi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:DI 86 [ _5 ])
        (sign_extend:DI (reg:SI 95))) "game_of_life.c":89:34 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(insn 23 22 24 3 (parallel [
            (set (reg:DI 87 [ _6 ])
                (ashift:DI (reg:DI 86 [ _5 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":89:34 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 86 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 3 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":89:34 74 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg:DI 87 [ _6 ])
                    (reg/f:DI 96)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":89:34 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 87 [ _6 ]))
                    (nil))))))
(insn 26 25 27 3 (set (reg:DI 5 di)
        (reg:DI 85 [ _4 ])) "game_of_life.c":89:47 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85 [ _4 ])
        (nil)))
(call_insn 27 26 28 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fd3e902e800 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "game_of_life.c":89:47 824 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 3 (set (reg/f:DI 97)
        (reg:DI 0 ax)) "game_of_life.c":89:47 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 97)
            (nil))))
(insn 29 28 30 3 (set (reg/f:DI 89 [ _8 ])
        (reg/f:DI 97)) "game_of_life.c":89:47 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 30 29 31 3 (set (mem/f:DI (reg/f:DI 88 [ _7 ]) [4 *_7+0 S8 A64])
        (reg/f:DI 89 [ _8 ])) "game_of_life.c":89:38 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _8 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
            (nil))))
(insn 31 30 32 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":89:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 98
(code_label 32 31 33 4 23 (nil) [1 uses])
(note 33 32 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 35 33 36 4 (set (reg:SI 98)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "game_of_life.c":89:23 75 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 98)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 N+0 S4 A32]))) "game_of_life.c":89:23 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 98)
        (nil)))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "game_of_life.c":89:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 34)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 90 91
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 42 5 (set (reg/f:DI 90 [ _16 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":90:12 74 {*movdi_internal}
     (nil))
(insn 42 39 46 5 (set (reg/f:DI 91 [ <retval> ])
        (reg/f:DI 90 [ _16 ])) "game_of_life.c":90:12 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _16 ])
        (nil)))
(insn 46 42 47 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 91 [ <retval> ])) "game_of_life.c":91:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ <retval> ])
        (nil)))
(insn 47 46 0 5 (use (reg/i:DI 0 ax)) "game_of_life.c":91:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_free (dynamic_array_free, funcdef_no=9, decl_uid=4934, cgraph_uid=10, symbol_order=9)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 7 count 7 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a1(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a2(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a5(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a6(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a7(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000

   Insn 35(l0): point = 0
   Insn 29(l0): point = 3
   Insn 28(l0): point = 5
   Insn 27(l0): point = 7
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 17(l0): point = 14
   Insn 16(l0): point = 16
   Insn 15(l0): point = 18
   Insn 14(l0): point = 20
   Insn 13(l0): point = 22
   Insn 12(l0): point = 24
   Insn 11(l0): point = 26
   Insn 25(l0): point = 29
   Insn 24(l0): point = 31
   Insn 23(l0): point = 33
   Insn 32(l0): point = 36
   Insn 7(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r89): [6..7]
 a1(r88): [32..33]
 a2(r85): [15..16]
 a3(r84): [17..18]
 a4(r87): [19..20]
 a5(r83): [19..22]
 a6(r82): [23..24]
 a7(r86): [25..26]
Compressing live ranges: from 45 to 14 - 31%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [12..13]
 a2(r85): [2..3]
 a3(r84): [4..5]
 a4(r87): [6..7]
 a5(r83): [6..7]
 a6(r82): [8..9]
 a7(r86): [10..11]
  pref0:a0(r89)<-hr5@1500
  pref1:a2(r85)<-hr5@1500
  regions=1, blocks=7, points=14
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    6:r82  l0     0    5:r83  l0     1    3:r84  l0     0    2:r85  l0     0
    7:r86  l0     0    4:r87  l0     0    1:r88  l0     0    0:r89  l0     0
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_free

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d,1u} r5={5d,3u} r6={1d,6u} r7={1d,8u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,5u} r17={6d,1u} r18={2d} r19={1d,16u,1e} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r82={1d,1u} r83={1d,1u,1e} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 217{167d,48u,2e} in 20{18 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])
        (reg:DI 5 di [ A ])) "game_of_life.c":93:41 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ A ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":93:41 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 32 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":94:14 75 {*movsi_internal}
     (nil))
(jump_insn 32 7 33 2 (set (pc)
        (label_ref 20)) "game_of_life.c":94:5 807 {jump}
     (nil)
 -> 20)
;;  succ:       4 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 33 32 22)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       4
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84 85 86 87
(code_label 22 33 10 3 28 (nil) [1 uses])
(note 10 22 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "game_of_life.c":94:39 75 {*movsi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 82 [ _1 ])
        (sign_extend:DI (reg:SI 86))) "game_of_life.c":94:39 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 13 12 14 3 (parallel [
            (set (reg:DI 83 [ _2 ])
                (ashift:DI (reg:DI 82 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":94:39 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 3 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])) "game_of_life.c":94:39 74 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (parallel [
            (set (reg/f:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (reg/f:DI 87)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":94:39 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])
                        (reg:DI 83 [ _2 ]))
                    (nil))))))
(insn 16 15 17 3 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 84 [ _3 ]) [4 *_3+0 S8 A64])) "game_of_life.c":94:33 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 17 16 18 3 (set (reg:DI 5 di)
        (reg/f:DI 85 [ _4 ])) "game_of_life.c":94:33 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fd3e9027d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "game_of_life.c":94:33 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 19 18 20 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":94:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       4 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 88
(code_label 20 19 21 4 27 (nil) [1 uses])
(note 21 20 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 21 24 4 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 i+0 S4 A32])) "game_of_life.c":94:23 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 88)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 N+0 S4 A32]))) "game_of_life.c":94:23 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(jump_insn 25 24 26 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) "game_of_life.c":94:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 22)
;;  succ:       3
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 89
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])) "game_of_life.c":95:5 74 {*movdi_internal}
     (nil))
(insn 28 27 29 5 (set (reg:DI 5 di)
        (reg:DI 89)) "game_of_life.c":95:5 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 29 28 34 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fd3e9027d00 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "game_of_life.c":95:5 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       5 [always]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 34 29 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 0 6 (const_int 0 [0]) "game_of_life.c":96:1 843 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_init (dynamic_array_init, funcdef_no=10, decl_uid=4938, cgraph_uid=11, symbol_order=10)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 9 (    1)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 5 4 3
;;
;; Loop 2
;;  header 5, latch 4
;;  depth 2, outer 1
;;  nodes: 5 4
;; 2 succs { 7 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a5(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a7(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a9(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a10(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a11(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a12(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a13(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a14(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000

   Insn 53(l0): point = 0
   Insn 52(l0): point = 2
   Insn 48(l0): point = 4
   Insn 45(l0): point = 6
   Insn 57(l0): point = 9
   Insn 13(l0): point = 11
   Insn 43(l0): point = 14
   Insn 42(l0): point = 16
   Insn 41(l0): point = 18
   Insn 37(l0): point = 21
   Insn 35(l0): point = 24
   Insn 34(l0): point = 26
   Insn 33(l0): point = 28
   Insn 29(l0): point = 31
   Insn 28(l0): point = 33
   Insn 27(l0): point = 35
   Insn 26(l0): point = 37
   Insn 25(l0): point = 39
   Insn 24(l0): point = 41
   Insn 23(l0): point = 43
   Insn 22(l0): point = 45
   Insn 21(l0): point = 47
   Insn 20(l0): point = 49
   Insn 19(l0): point = 51
   Insn 18(l0): point = 53
   Insn 17(l0): point = 55
   Insn 55(l0): point = 58
   Insn 9(l0): point = 60
   Insn 8(l0): point = 62
   Insn 4(l0): point = 64
   Insn 3(l0): point = 66
   Insn 2(l0): point = 68
 a0(r90): [3..4]
 a1(r89): [5..6]
 a2(r96): [17..18]
 a3(r95): [27..28]
 a4(r88): [34..37]
 a5(r94): [34..35]
 a6(r87): [38..39]
 a7(r85): [38..45]
 a8(r86): [40..41]
 a9(r93): [42..43]
 a10(r84): [46..47]
 a11(r92): [48..49]
 a12(r83): [48..51]
 a13(r82): [52..53]
 a14(r91): [54..55]
Compressing live ranges: from 71 to 24 - 33%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r96): [4..5]
 a3(r95): [6..7]
 a4(r88): [8..9]
 a5(r94): [8..9]
 a6(r87): [10..11]
 a7(r85): [10..15]
 a8(r86): [12..13]
 a9(r93): [14..15]
 a10(r84): [16..17]
 a11(r92): [18..19]
 a12(r83): [18..19]
 a13(r82): [20..21]
 a14(r91): [22..23]
  pref0:a0(r90)<-hr0@1500
  regions=1, blocks=9, points=24
    allocnos=15 (big 0), copies=0, conflicts=0, ranges=15
Disposition:
   13:r82  l0     0   12:r83  l0     1   10:r84  l0     0    7:r85  l0     1
    8:r86  l0     0    6:r87  l0     0    4:r88  l0     1    1:r89  l0     0
    0:r90  l0     0   14:r91  l0     0   11:r92  l0     0    9:r93  l0     0
    5:r94  l0     0    3:r95  l0     0    2:r96  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_init

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,8u} r7={1d,8u} r16={1d,7u} r17={8d,2u} r19={1d,27u,1e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u,1e} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 117{43d,72u,2e} in 32{32 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])
        (reg:DI 5 di [ A ])) "game_of_life.c":98:49 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ A ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":98:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 M+0 S4 A32])
        (reg:SI 1 dx [ M ])) "game_of_life.c":98:49 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ M ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 x+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":99:9 75 {*movsi_internal}
     (nil))
(insn 9 8 55 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":100:14 75 {*movsi_internal}
     (nil))
(jump_insn 55 9 56 2 (set (pc)
        (label_ref 38)) "game_of_life.c":100:5 807 {jump}
     (nil)
 -> 38)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 56 55 40)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 40 56 12 3 33 (nil) [1 uses])
(note 12 40 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 57 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A64])
        (const_int 0 [0])) "game_of_life.c":101:18 75 {*movsi_internal}
     (nil))
(jump_insn 57 13 58 3 (set (pc)
        (label_ref 30)) "game_of_life.c":101:9 807 {jump}
     (nil)
 -> 30)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 58 57 32)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 83 84 85 86 87 88 91 92 93 94
(code_label 32 58 16 4 32 (nil) [1 uses])
(note 16 32 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "game_of_life.c":101:38 75 {*movsi_internal}
     (nil))
(insn 18 17 19 4 (set (reg:DI 82 [ _1 ])
        (sign_extend:DI (reg:SI 91))) "game_of_life.c":101:38 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 19 18 20 4 (parallel [
            (set (reg:DI 83 [ _2 ])
                (ashift:DI (reg:DI 82 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":101:38 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 4 (set (reg/f:DI 92)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])) "game_of_life.c":101:38 74 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg/f:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (reg/f:DI 92)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":101:38 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])
                        (reg:DI 83 [ _2 ]))
                    (nil))))))
(insn 22 21 23 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 84 [ _3 ]) [4 *_3+0 S8 A64])) "game_of_life.c":101:38 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 23 22 24 4 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A64])) "game_of_life.c":101:41 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 86 [ _5 ])
        (sign_extend:DI (reg:SI 93))) "game_of_life.c":101:41 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 87 [ _6 ])
                (ashift:DI (reg:DI 86 [ _5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":101:41 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 86 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 4 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (reg:DI 87 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":101:41 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
        (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 27 26 28 4 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 x+0 S4 A32])) "game_of_life.c":101:45 75 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (mem:SI (reg/f:DI 88 [ _7 ]) [2 *_7+0 S4 A32])
        (reg:SI 94)) "game_of_life.c":101:45 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
            (nil))))
(insn 29 28 30 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":101:33 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 95
(code_label 30 29 31 5 31 (nil) [1 uses])
(note 31 30 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 34 5 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [2 j+0 S4 A64])) "game_of_life.c":101:27 75 {*movsi_internal}
     (nil))
(insn 34 33 35 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 95)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -32 [0xffffffffffffffe0])) [2 M+0 S4 A32]))) "game_of_life.c":101:27 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (nil)))
(jump_insn 35 34 36 5 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) "game_of_life.c":101:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 32)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":100:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 96
(code_label 38 37 39 7 30 (nil) [1 uses])
(note 39 38 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 39 42 7 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32])) "game_of_life.c":100:23 75 {*movsi_internal}
     (nil))
(insn 42 41 43 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 96)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 N+0 S4 A32]))) "game_of_life.c":100:23 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(jump_insn 43 42 44 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "game_of_life.c":100:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 40)
;;  succ:       3
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 89 90
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 48 8 (set (reg/f:DI 89 [ _17 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 A+0 S8 A64])) "game_of_life.c":102:12 74 {*movdi_internal}
     (nil))
(insn 48 45 52 8 (set (reg/f:DI 90 [ <retval> ])
        (reg/f:DI 89 [ _17 ])) "game_of_life.c":102:12 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _17 ])
        (nil)))
(insn 52 48 53 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 90 [ <retval> ])) "game_of_life.c":103:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ <retval> ])
        (nil)))
(insn 53 52 0 8 (use (reg/i:DI 0 ax)) "game_of_life.c":103:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_init_life (dynamic_array_init_life, funcdef_no=11, decl_uid=4942, cgraph_uid=12, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a4(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a5(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:10000
  a6(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a7(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a8(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a9(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a10(r177,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a11(r178,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a12(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a13(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a14(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a15(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a16(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a17(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a18(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a19(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a20(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a21(r173,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a22(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a23(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a24(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a25(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a26(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a27(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a28(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a29(r168,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a30(r169,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a31(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a32(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a33(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a34(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a35(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a36(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a37(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a38(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a39(r163,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a40(r164,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a41(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a42(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a43(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a44(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a45(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a46(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a47(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a48(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a49(r159,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a50(r160,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a51(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a52(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a53(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a54(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a55(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a56(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a57(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a58(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a59(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a60(r155,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a61(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a62(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a63(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a64(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a65(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a66(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a67(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a68(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a69(r150,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a70(r151,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a71(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a72(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a73(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a74(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a75(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a76(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a77(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a78(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a79(r145,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a80(r146,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a81(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a82(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a83(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a84(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a85(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a86(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a87(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a88(r141,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a89(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a90(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a91(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a92(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a93(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a94(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a95(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a96(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a97(r136,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a98(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000

   Insn 138(l0): point = 0
   Insn 137(l0): point = 2
   Insn 133(l0): point = 4
   Insn 130(l0): point = 6
   Insn 129(l0): point = 8
   Insn 128(l0): point = 10
   Insn 127(l0): point = 12
   Insn 126(l0): point = 14
   Insn 125(l0): point = 16
   Insn 124(l0): point = 18
   Insn 123(l0): point = 20
   Insn 122(l0): point = 22
   Insn 121(l0): point = 24
   Insn 118(l0): point = 26
   Insn 117(l0): point = 28
   Insn 116(l0): point = 30
   Insn 115(l0): point = 32
   Insn 114(l0): point = 34
   Insn 113(l0): point = 36
   Insn 112(l0): point = 38
   Insn 111(l0): point = 40
   Insn 110(l0): point = 42
   Insn 109(l0): point = 44
   Insn 108(l0): point = 46
   Insn 105(l0): point = 48
   Insn 104(l0): point = 50
   Insn 103(l0): point = 52
   Insn 102(l0): point = 54
   Insn 101(l0): point = 56
   Insn 100(l0): point = 58
   Insn 99(l0): point = 60
   Insn 98(l0): point = 62
   Insn 97(l0): point = 64
   Insn 94(l0): point = 66
   Insn 93(l0): point = 68
   Insn 92(l0): point = 70
   Insn 91(l0): point = 72
   Insn 90(l0): point = 74
   Insn 89(l0): point = 76
   Insn 88(l0): point = 78
   Insn 87(l0): point = 80
   Insn 86(l0): point = 82
   Insn 85(l0): point = 84
   Insn 84(l0): point = 86
   Insn 81(l0): point = 88
   Insn 80(l0): point = 90
   Insn 79(l0): point = 92
   Insn 78(l0): point = 94
   Insn 77(l0): point = 96
   Insn 76(l0): point = 98
   Insn 75(l0): point = 100
   Insn 74(l0): point = 102
   Insn 73(l0): point = 104
   Insn 72(l0): point = 106
   Insn 69(l0): point = 108
   Insn 68(l0): point = 110
   Insn 67(l0): point = 112
   Insn 66(l0): point = 114
   Insn 65(l0): point = 116
   Insn 64(l0): point = 118
   Insn 63(l0): point = 120
   Insn 62(l0): point = 122
   Insn 61(l0): point = 124
   Insn 60(l0): point = 126
   Insn 59(l0): point = 128
   Insn 56(l0): point = 130
   Insn 55(l0): point = 132
   Insn 54(l0): point = 134
   Insn 53(l0): point = 136
   Insn 52(l0): point = 138
   Insn 51(l0): point = 140
   Insn 50(l0): point = 142
   Insn 49(l0): point = 144
   Insn 48(l0): point = 146
   Insn 47(l0): point = 148
   Insn 44(l0): point = 150
   Insn 43(l0): point = 152
   Insn 42(l0): point = 154
   Insn 41(l0): point = 156
   Insn 40(l0): point = 158
   Insn 39(l0): point = 160
   Insn 38(l0): point = 162
   Insn 37(l0): point = 164
   Insn 36(l0): point = 166
   Insn 35(l0): point = 168
   Insn 34(l0): point = 170
   Insn 31(l0): point = 172
   Insn 30(l0): point = 174
   Insn 29(l0): point = 176
   Insn 28(l0): point = 178
   Insn 27(l0): point = 180
   Insn 26(l0): point = 182
   Insn 25(l0): point = 184
   Insn 24(l0): point = 186
   Insn 23(l0): point = 188
   Insn 20(l0): point = 190
   Insn 19(l0): point = 192
   Insn 18(l0): point = 194
   Insn 17(l0): point = 196
   Insn 16(l0): point = 198
   Insn 15(l0): point = 200
   Insn 14(l0): point = 202
   Insn 13(l0): point = 204
   Insn 12(l0): point = 206
   Insn 11(l0): point = 208
   Insn 8(l0): point = 210
   Insn 4(l0): point = 212
   Insn 3(l0): point = 214
   Insn 2(l0): point = 216
 a0(r135): [3..4]
 a1(r134): [5..6]
 a2(r133): [9..10]
 a3(r132): [11..12]
 a4(r128): [11..28]
 a5(r131): [13..14]
 a6(r130): [15..16]
 a7(r129): [17..18]
 a8(r180): [19..20]
 a9(r179): [21..22]
 a10(r177): [23..26]
 a11(r178): [23..24]
 a12(r127): [29..30]
 a13(r176): [31..32]
 a14(r126): [31..34]
 a15(r125): [35..36]
 a16(r124): [37..38]
 a17(r123): [39..40]
 a18(r175): [41..42]
 a19(r174): [43..44]
 a20(r172): [45..48]
 a21(r173): [45..46]
 a22(r122): [51..52]
 a23(r121): [53..54]
 a24(r118): [53..68]
 a25(r120): [55..56]
 a26(r119): [57..58]
 a27(r171): [59..60]
 a28(r170): [61..62]
 a29(r168): [63..66]
 a30(r169): [63..64]
 a31(r117): [69..70]
 a32(r167): [71..72]
 a33(r116): [71..74]
 a34(r115): [75..76]
 a35(r114): [77..78]
 a36(r113): [79..80]
 a37(r166): [81..82]
 a38(r165): [83..84]
 a39(r163): [85..88]
 a40(r164): [85..86]
 a41(r112): [91..92]
 a42(r111): [93..94]
 a43(r107): [93..110]
 a44(r110): [95..96]
 a45(r109): [97..98]
 a46(r108): [99..100]
 a47(r162): [101..102]
 a48(r161): [103..104]
 a49(r159): [105..108]
 a50(r160): [105..106]
 a51(r106): [111..112]
 a52(r158): [113..114]
 a53(r105): [113..116]
 a54(r104): [117..118]
 a55(r103): [119..120]
 a56(r102): [121..122]
 a57(r157): [123..124]
 a58(r156): [125..126]
 a59(r154): [127..130]
 a60(r155): [127..128]
 a61(r101): [133..134]
 a62(r100): [135..136]
 a63(r96): [135..152]
 a64(r99): [137..138]
 a65(r98): [139..140]
 a66(r97): [141..142]
 a67(r153): [143..144]
 a68(r152): [145..146]
 a69(r150): [147..150]
 a70(r151): [147..148]
 a71(r95): [153..154]
 a72(r149): [155..156]
 a73(r94): [155..158]
 a74(r93): [159..160]
 a75(r92): [161..162]
 a76(r91): [163..164]
 a77(r148): [165..166]
 a78(r147): [167..168]
 a79(r145): [169..172]
 a80(r146): [169..170]
 a81(r90): [175..176]
 a82(r89): [177..178]
 a83(r86): [177..192]
 a84(r88): [179..180]
 a85(r87): [181..182]
 a86(r144): [183..184]
 a87(r143): [185..186]
 a88(r141): [187..190]
 a89(r142): [187..188]
 a90(r85): [193..194]
 a91(r140): [195..196]
 a92(r84): [195..198]
 a93(r83): [199..200]
 a94(r82): [201..202]
 a95(r139): [203..204]
 a96(r138): [205..206]
 a97(r136): [207..210]
 a98(r137): [207..208]
Compressing live ranges: from 219 to 158 - 72%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [2..3]
 a2(r133): [4..5]
 a3(r132): [6..7]
 a4(r128): [6..19]
 a5(r131): [8..9]
 a6(r130): [10..11]
 a7(r129): [12..13]
 a8(r180): [14..15]
 a9(r179): [16..17]
 a10(r177): [18..19]
 a11(r178): [18..19]
 a12(r127): [20..21]
 a13(r176): [22..23]
 a14(r126): [22..23]
 a15(r125): [24..25]
 a16(r124): [26..27]
 a17(r123): [28..29]
 a18(r175): [30..31]
 a19(r174): [32..33]
 a20(r172): [34..35]
 a21(r173): [34..35]
 a22(r122): [36..37]
 a23(r121): [38..39]
 a24(r118): [38..49]
 a25(r120): [40..41]
 a26(r119): [42..43]
 a27(r171): [44..45]
 a28(r170): [46..47]
 a29(r168): [48..49]
 a30(r169): [48..49]
 a31(r117): [50..51]
 a32(r167): [52..53]
 a33(r116): [52..53]
 a34(r115): [54..55]
 a35(r114): [56..57]
 a36(r113): [58..59]
 a37(r166): [60..61]
 a38(r165): [62..63]
 a39(r163): [64..65]
 a40(r164): [64..65]
 a41(r112): [66..67]
 a42(r111): [68..69]
 a43(r107): [68..81]
 a44(r110): [70..71]
 a45(r109): [72..73]
 a46(r108): [74..75]
 a47(r162): [76..77]
 a48(r161): [78..79]
 a49(r159): [80..81]
 a50(r160): [80..81]
 a51(r106): [82..83]
 a52(r158): [84..85]
 a53(r105): [84..85]
 a54(r104): [86..87]
 a55(r103): [88..89]
 a56(r102): [90..91]
 a57(r157): [92..93]
 a58(r156): [94..95]
 a59(r154): [96..97]
 a60(r155): [96..97]
 a61(r101): [98..99]
 a62(r100): [100..101]
 a63(r96): [100..113]
 a64(r99): [102..103]
 a65(r98): [104..105]
 a66(r97): [106..107]
 a67(r153): [108..109]
 a68(r152): [110..111]
 a69(r150): [112..113]
 a70(r151): [112..113]
 a71(r95): [114..115]
 a72(r149): [116..117]
 a73(r94): [116..117]
 a74(r93): [118..119]
 a75(r92): [120..121]
 a76(r91): [122..123]
 a77(r148): [124..125]
 a78(r147): [126..127]
 a79(r145): [128..129]
 a80(r146): [128..129]
 a81(r90): [130..131]
 a82(r89): [132..133]
 a83(r86): [132..143]
 a84(r88): [134..135]
 a85(r87): [136..137]
 a86(r144): [138..139]
 a87(r143): [140..141]
 a88(r141): [142..143]
 a89(r142): [142..143]
 a90(r85): [144..145]
 a91(r140): [146..147]
 a92(r84): [146..147]
 a93(r83): [148..149]
 a94(r82): [150..151]
 a95(r139): [152..153]
 a96(r138): [154..155]
 a97(r136): [156..157]
 a98(r137): [156..157]
  pref0:a0(r135)<-hr0@1500
  regions=1, blocks=3, points=158
    allocnos=99 (big 0), copies=0, conflicts=0, ranges=99
Disposition:
   94:r82  l0     0   93:r83  l0     0   92:r84  l0     1   90:r85  l0     0
   83:r86  l0     1   85:r87  l0     0   84:r88  l0     0   82:r89  l0     0
   81:r90  l0     0   76:r91  l0     0   75:r92  l0     0   74:r93  l0     0
   73:r94  l0     1   71:r95  l0     0   63:r96  l0     1   66:r97  l0     0
   65:r98  l0     0   64:r99  l0     0   62:r100 l0     0   61:r101 l0     0
   56:r102 l0     0   55:r103 l0     0   54:r104 l0     0   53:r105 l0     1
   51:r106 l0     0   43:r107 l0     1   46:r108 l0     0   45:r109 l0     0
   44:r110 l0     0   42:r111 l0     0   41:r112 l0     0   36:r113 l0     0
   35:r114 l0     0   34:r115 l0     0   33:r116 l0     1   31:r117 l0     0
   24:r118 l0     1   26:r119 l0     0   25:r120 l0     0   23:r121 l0     0
   22:r122 l0     0   17:r123 l0     0   16:r124 l0     0   15:r125 l0     0
   14:r126 l0     1   12:r127 l0     0    4:r128 l0     1    7:r129 l0     0
    6:r130 l0     0    5:r131 l0     0    3:r132 l0     0    2:r133 l0     0
    1:r134 l0     0    0:r135 l0     0   97:r136 l0     0   98:r137 l0     1
   96:r138 l0     0   95:r139 l0     0   91:r140 l0     0   88:r141 l0     0
   89:r142 l0     2   87:r143 l0     0   86:r144 l0     0   79:r145 l0     0
   80:r146 l0     1   78:r147 l0     0   77:r148 l0     0   72:r149 l0     0
   69:r150 l0     0   70:r151 l0     2   68:r152 l0     0   67:r153 l0     0
   59:r154 l0     0   60:r155 l0     1   58:r156 l0     0   57:r157 l0     0
   52:r158 l0     0   49:r159 l0     0   50:r160 l0     2   48:r161 l0     0
   47:r162 l0     0   39:r163 l0     0   40:r164 l0     1   38:r165 l0     0
   37:r166 l0     0   32:r167 l0     0   29:r168 l0     0   30:r169 l0     2
   28:r170 l0     0   27:r171 l0     0   20:r172 l0     0   21:r173 l0     1
   19:r174 l0     0   18:r175 l0     0   13:r176 l0     0   10:r177 l0     0
   11:r178 l0     2    9:r179 l0     0    8:r180 l0     0
+++Costs: overall 39000, reg 39000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_init_life

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={57d} r19={1d,21u,5e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u,1e} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u,1e} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,2u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,2u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} r180={1d,1u} 
;;    total ref usage 326{176d,140u,10e} in 109{109 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 17 [flags] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 5 di [ A ])) "game_of_life.c":105:54 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ A ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":105:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])
        (reg:SI 1 dx [ M ])) "game_of_life.c":105:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ M ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 11 2 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":108:9 75 {*movsi_internal}
     (nil))
(insn 11 8 12 2 (parallel [
            (set (reg:SI 137)
                (lshiftrt:SI (reg:SI 136)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:9 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 138)
                (plus:SI (reg:SI 137)
                    (reg:SI 136)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg:SI 136)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 139)
                (ashiftrt:SI (reg:SI 138)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:9 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (set (reg:SI 82 [ _1 ])
        (reg:SI 139)) "game_of_life.c":108:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "game_of_life.c":108:9 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 84 [ _3 ])
                (ashift:DI (reg:DI 83 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":108:6 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (reg/f:DI 140)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 84 [ _3 ]))
                    (nil))))))
(insn 19 18 20 2 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (reg/f:DI 85 [ _4 ]) [4 *_4+0 S8 A64])) "game_of_life.c":108:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(insn 20 19 23 2 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":108:16 75 {*movsi_internal}
     (nil))
(insn 23 20 24 2 (parallel [
            (set (reg:SI 142)
                (lshiftrt:SI (reg:SI 141)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:16 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg:SI 143)
                (plus:SI (reg:SI 142)
                    (reg:SI 141)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg:SI 141)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 25 24 26 2 (parallel [
            (set (reg:SI 144)
                (ashiftrt:SI (reg:SI 143)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:16 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 87 [ _6 ])
        (reg:SI 144)) "game_of_life.c":108:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 88 [ _7 ])
        (sign_extend:DI (reg:SI 87 [ _6 ]))) "game_of_life.c":108:16 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _6 ])
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 89 [ _8 ])
                (ashift:DI (reg:DI 88 [ _7 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:13 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 90 [ _9 ])
                (plus:DI (reg/f:DI 86 [ _5 ])
                    (reg:DI 89 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":108:13 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
        (expr_list:REG_DEAD (reg/f:DI 86 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 30 29 31 2 (set (mem:SI (reg/f:DI 90 [ _9 ]) [2 *_9+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":108:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
        (nil)))
(insn 31 30 34 2 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":109:10 75 {*movsi_internal}
     (nil))
(insn 34 31 35 2 (parallel [
            (set (reg:SI 146)
                (lshiftrt:SI (reg:SI 145)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 2 (parallel [
            (set (reg:SI 147)
                (plus:SI (reg:SI 146)
                    (reg:SI 145)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg:SI 145)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 36 35 37 2 (parallel [
            (set (reg:SI 148)
                (ashiftrt:SI (reg:SI 147)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 2 (set (reg:SI 91 [ _10 ])
        (reg:SI 148)) "game_of_life.c":109:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
(insn 38 37 39 2 (set (reg:DI 92 [ _11 ])
        (sign_extend:DI (reg:SI 91 [ _10 ]))) "game_of_life.c":109:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _10 ])
        (nil)))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 93 [ _12 ])
                (plus:DI (reg:DI 92 [ _11 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 2 (parallel [
            (set (reg:DI 94 [ _13 ])
                (ashift:DI (reg:DI 93 [ _12 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 2 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":109:6 74 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 95 [ _14 ])
                (plus:DI (reg:DI 94 [ _13 ])
                    (reg/f:DI 149)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 149)
        (expr_list:REG_DEAD (reg:DI 94 [ _13 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 94 [ _13 ]))
                    (nil))))))
(insn 43 42 44 2 (set (reg/f:DI 96 [ _15 ])
        (mem/f:DI (reg/f:DI 95 [ _14 ]) [4 *_14+0 S8 A64])) "game_of_life.c":109:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _14 ])
        (nil)))
(insn 44 43 47 2 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":109:23 75 {*movsi_internal}
     (nil))
(insn 47 44 48 2 (parallel [
            (set (reg:SI 151)
                (lshiftrt:SI (reg:SI 150)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 2 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg:SI 151)
                    (reg:SI 150)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 150)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 48 50 2 (parallel [
            (set (reg:SI 153)
                (ashiftrt:SI (reg:SI 152)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 2 (set (reg:SI 97 [ _16 ])
        (reg:SI 153)) "game_of_life.c":109:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
(insn 51 50 52 2 (set (reg:DI 98 [ _17 ])
        (sign_extend:DI (reg:SI 97 [ _16 ]))) "game_of_life.c":109:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ _16 ])
        (nil)))
(insn 52 51 53 2 (parallel [
            (set (reg:DI 99 [ _18 ])
                (plus:DI (reg:DI 98 [ _17 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 100 [ _19 ])
                (ashift:DI (reg:DI 99 [ _18 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 55 2 (parallel [
            (set (reg/f:DI 101 [ _20 ])
                (plus:DI (reg/f:DI 96 [ _15 ])
                    (reg:DI 100 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":109:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ _19 ])
        (expr_list:REG_DEAD (reg/f:DI 96 [ _15 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 54 56 2 (set (mem:SI (reg/f:DI 101 [ _20 ]) [2 *_20+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":109:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _20 ])
        (nil)))
(insn 56 55 59 2 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":110:10 75 {*movsi_internal}
     (nil))
(insn 59 56 60 2 (parallel [
            (set (reg:SI 155)
                (lshiftrt:SI (reg:SI 154)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 61 2 (parallel [
            (set (reg:SI 156)
                (plus:SI (reg:SI 155)
                    (reg:SI 154)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg:SI 154)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 61 60 62 2 (parallel [
            (set (reg:SI 157)
                (ashiftrt:SI (reg:SI 156)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 2 (set (reg:SI 102 [ _21 ])
        (reg:SI 157)) "game_of_life.c":110:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 63 62 64 2 (set (reg:DI 103 [ _22 ])
        (sign_extend:DI (reg:SI 102 [ _21 ]))) "game_of_life.c":110:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 102 [ _21 ])
        (nil)))
(insn 64 63 65 2 (parallel [
            (set (reg:DI 104 [ _23 ])
                (plus:DI (reg:DI 103 [ _22 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 2 (parallel [
            (set (reg:DI 105 [ _24 ])
                (ashift:DI (reg:DI 104 [ _23 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 2 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":110:6 74 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (parallel [
            (set (reg/f:DI 106 [ _25 ])
                (plus:DI (reg:DI 105 [ _24 ])
                    (reg/f:DI 158)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (expr_list:REG_DEAD (reg:DI 105 [ _24 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 105 [ _24 ]))
                    (nil))))))
(insn 68 67 69 2 (set (reg/f:DI 107 [ _26 ])
        (mem/f:DI (reg/f:DI 106 [ _25 ]) [4 *_25+0 S8 A64])) "game_of_life.c":110:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _25 ])
        (nil)))
(insn 69 68 72 2 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":110:23 75 {*movsi_internal}
     (nil))
(insn 72 69 73 2 (parallel [
            (set (reg:SI 160)
                (lshiftrt:SI (reg:SI 159)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 2 (parallel [
            (set (reg:SI 161)
                (plus:SI (reg:SI 160)
                    (reg:SI 159)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg:SI 159)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 74 73 75 2 (parallel [
            (set (reg:SI 162)
                (ashiftrt:SI (reg:SI 161)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 2 (set (reg:SI 108 [ _27 ])
        (reg:SI 162)) "game_of_life.c":110:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
(insn 76 75 77 2 (set (reg:DI 109 [ _28 ])
        (sign_extend:DI (reg:SI 108 [ _27 ]))) "game_of_life.c":110:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _27 ])
        (nil)))
(insn 77 76 78 2 (parallel [
            (set (reg:DI 110 [ _29 ])
                (plus:DI (reg:DI 109 [ _28 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 2 (parallel [
            (set (reg:DI 111 [ _30 ])
                (ashift:DI (reg:DI 110 [ _29 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 78 80 2 (parallel [
            (set (reg/f:DI 112 [ _31 ])
                (plus:DI (reg/f:DI 107 [ _26 ])
                    (reg:DI 111 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":110:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _30 ])
        (expr_list:REG_DEAD (reg/f:DI 107 [ _26 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 80 79 81 2 (set (mem:SI (reg/f:DI 112 [ _31 ]) [2 *_31+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":110:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ _31 ])
        (nil)))
(insn 81 80 84 2 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":111:10 75 {*movsi_internal}
     (nil))
(insn 84 81 85 2 (parallel [
            (set (reg:SI 164)
                (lshiftrt:SI (reg:SI 163)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 2 (parallel [
            (set (reg:SI 165)
                (plus:SI (reg:SI 164)
                    (reg:SI 163)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg:SI 163)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 86 85 87 2 (parallel [
            (set (reg:SI 166)
                (ashiftrt:SI (reg:SI 165)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 2 (set (reg:SI 113 [ _32 ])
        (reg:SI 166)) "game_of_life.c":111:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 88 87 89 2 (set (reg:DI 114 [ _33 ])
        (sign_extend:DI (reg:SI 113 [ _32 ]))) "game_of_life.c":111:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113 [ _32 ])
        (nil)))
(insn 89 88 90 2 (parallel [
            (set (reg:DI 115 [ _34 ])
                (plus:DI (reg:DI 114 [ _33 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 2 (parallel [
            (set (reg:DI 116 [ _35 ])
                (ashift:DI (reg:DI 115 [ _34 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 2 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":111:6 74 {*movdi_internal}
     (nil))
(insn 92 91 93 2 (parallel [
            (set (reg/f:DI 117 [ _36 ])
                (plus:DI (reg:DI 116 [ _35 ])
                    (reg/f:DI 167)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (expr_list:REG_DEAD (reg:DI 116 [ _35 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 116 [ _35 ]))
                    (nil))))))
(insn 93 92 94 2 (set (reg/f:DI 118 [ _37 ])
        (mem/f:DI (reg/f:DI 117 [ _36 ]) [4 *_36+0 S8 A64])) "game_of_life.c":111:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ _36 ])
        (nil)))
(insn 94 93 97 2 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":111:23 75 {*movsi_internal}
     (nil))
(insn 97 94 98 2 (parallel [
            (set (reg:SI 169)
                (lshiftrt:SI (reg:SI 168)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 2 (parallel [
            (set (reg:SI 170)
                (plus:SI (reg:SI 169)
                    (reg:SI 168)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg:SI 168)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 99 98 100 2 (parallel [
            (set (reg:SI 171)
                (ashiftrt:SI (reg:SI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 2 (set (reg:SI 119 [ _38 ])
        (reg:SI 171)) "game_of_life.c":111:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(insn 101 100 102 2 (set (reg:DI 120 [ _39 ])
        (sign_extend:DI (reg:SI 119 [ _38 ]))) "game_of_life.c":111:23 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119 [ _38 ])
        (nil)))
(insn 102 101 103 2 (parallel [
            (set (reg:DI 121 [ _40 ])
                (ashift:DI (reg:DI 120 [ _39 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _39 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 2 (parallel [
            (set (reg/f:DI 122 [ _41 ])
                (plus:DI (reg/f:DI 118 [ _37 ])
                    (reg:DI 121 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":111:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _40 ])
        (expr_list:REG_DEAD (reg/f:DI 118 [ _37 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 104 103 105 2 (set (mem:SI (reg/f:DI 122 [ _41 ]) [2 *_41+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":111:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ _41 ])
        (nil)))
(insn 105 104 108 2 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":112:10 75 {*movsi_internal}
     (nil))
(insn 108 105 109 2 (parallel [
            (set (reg:SI 173)
                (lshiftrt:SI (reg:SI 172)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 109 108 110 2 (parallel [
            (set (reg:SI 174)
                (plus:SI (reg:SI 173)
                    (reg:SI 172)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg:SI 172)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 110 109 111 2 (parallel [
            (set (reg:SI 175)
                (ashiftrt:SI (reg:SI 174)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 111 110 112 2 (set (reg:SI 123 [ _42 ])
        (reg:SI 175)) "game_of_life.c":112:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
(insn 112 111 113 2 (set (reg:DI 124 [ _43 ])
        (sign_extend:DI (reg:SI 123 [ _42 ]))) "game_of_life.c":112:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123 [ _42 ])
        (nil)))
(insn 113 112 114 2 (parallel [
            (set (reg:DI 125 [ _44 ])
                (plus:DI (reg:DI 124 [ _43 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 2 (parallel [
            (set (reg:DI 126 [ _45 ])
                (ashift:DI (reg:DI 125 [ _44 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 125 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 2 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":112:6 74 {*movdi_internal}
     (nil))
(insn 116 115 117 2 (parallel [
            (set (reg/f:DI 127 [ _46 ])
                (plus:DI (reg:DI 126 [ _45 ])
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (expr_list:REG_DEAD (reg:DI 126 [ _45 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 126 [ _45 ]))
                    (nil))))))
(insn 117 116 118 2 (set (reg/f:DI 128 [ _47 ])
        (mem/f:DI (reg/f:DI 127 [ _46 ]) [4 *_46+0 S8 A64])) "game_of_life.c":112:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ _46 ])
        (nil)))
(insn 118 117 121 2 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":112:23 75 {*movsi_internal}
     (nil))
(insn 121 118 122 2 (parallel [
            (set (reg:SI 178)
                (lshiftrt:SI (reg:SI 177)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 122 121 123 2 (parallel [
            (set (reg:SI 179)
                (plus:SI (reg:SI 178)
                    (reg:SI 177)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg:SI 177)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 123 122 124 2 (parallel [
            (set (reg:SI 180)
                (ashiftrt:SI (reg:SI 179)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 124 123 125 2 (set (reg:SI 129 [ _48 ])
        (reg:SI 180)) "game_of_life.c":112:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 180)
        (nil)))
(insn 125 124 126 2 (set (reg:DI 130 [ _49 ])
        (sign_extend:DI (reg:SI 129 [ _48 ]))) "game_of_life.c":112:23 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 129 [ _48 ])
        (nil)))
(insn 126 125 127 2 (parallel [
            (set (reg:DI 131 [ _50 ])
                (ashift:DI (reg:DI 130 [ _49 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 130 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 2 (parallel [
            (set (reg:DI 132 [ _51 ])
                (plus:DI (reg:DI 131 [ _50 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 131 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 128 127 129 2 (parallel [
            (set (reg/f:DI 133 [ _52 ])
                (plus:DI (reg/f:DI 128 [ _47 ])
                    (reg:DI 132 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":112:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _51 ])
        (expr_list:REG_DEAD (reg/f:DI 128 [ _47 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 129 128 130 2 (set (mem:SI (reg/f:DI 133 [ _52 ]) [2 *_52+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":112:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ _52 ])
        (nil)))
(insn 130 129 133 2 (set (reg/f:DI 134 [ _62 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":114:12 74 {*movdi_internal}
     (nil))
(insn 133 130 137 2 (set (reg/f:DI 135 [ <retval> ])
        (reg/f:DI 134 [ _62 ])) "game_of_life.c":114:12 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ _62 ])
        (nil)))
(insn 137 133 138 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 135 [ <retval> ])) "game_of_life.c":115:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ <retval> ])
        (nil)))
(insn 138 137 0 2 (use (reg/i:DI 0 ax)) "game_of_life.c":115:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_init_life2 (dynamic_array_init_life2, funcdef_no=12, decl_uid=4946, cgraph_uid=13, symbol_order=12)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r156,l0) best AREG, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r156,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a4(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a5(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a6(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a8(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a9(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a10(r216,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a11(r217,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a12(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a13(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a14(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a15(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a16(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a17(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a18(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a19(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a20(r211,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a21(r212,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a22(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a23(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a24(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a25(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a26(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a27(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a28(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a29(r207,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a30(r208,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a31(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a32(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a33(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a34(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a35(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a36(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a37(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a38(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a39(r202,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a40(r203,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a41(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a42(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a43(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a44(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a45(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a46(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a47(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a48(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a49(r198,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a50(r199,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a51(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a52(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a53(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a54(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a55(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a56(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a57(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a58(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a59(r193,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a60(r194,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a61(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a62(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a63(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a64(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a65(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a66(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a67(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a68(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a69(r189,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a70(r190,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a71(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a72(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a73(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a74(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a75(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a76(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a77(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a78(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a79(r184,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a80(r185,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a81(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a82(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a83(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a84(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a85(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a86(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a87(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a88(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a89(r180,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a90(r181,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a91(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a92(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a93(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a94(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a95(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a96(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a97(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a98(r175,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a99(r176,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a100(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a101(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a102(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a103(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a104(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a105(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a106(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a107(r171,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a108(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a109(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a110(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a111(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a112(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a113(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a114(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a115(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a116(r166,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a117(r167,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a118(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a119(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a120(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a121(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:10000
  a122(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a123(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a124(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a125(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a126(r162,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a127(r163,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a128(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a129(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a130(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a131(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a132(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a133(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a134(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a135(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a136(r157,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a137(r158,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000

   Insn 187(l0): point = 0
   Insn 186(l0): point = 2
   Insn 182(l0): point = 4
   Insn 179(l0): point = 6
   Insn 178(l0): point = 8
   Insn 177(l0): point = 10
   Insn 176(l0): point = 12
   Insn 175(l0): point = 14
   Insn 174(l0): point = 16
   Insn 173(l0): point = 18
   Insn 172(l0): point = 20
   Insn 171(l0): point = 22
   Insn 170(l0): point = 24
   Insn 167(l0): point = 26
   Insn 166(l0): point = 28
   Insn 165(l0): point = 30
   Insn 164(l0): point = 32
   Insn 163(l0): point = 34
   Insn 162(l0): point = 36
   Insn 161(l0): point = 38
   Insn 160(l0): point = 40
   Insn 159(l0): point = 42
   Insn 158(l0): point = 44
   Insn 157(l0): point = 46
   Insn 154(l0): point = 48
   Insn 153(l0): point = 50
   Insn 152(l0): point = 52
   Insn 151(l0): point = 54
   Insn 150(l0): point = 56
   Insn 149(l0): point = 58
   Insn 148(l0): point = 60
   Insn 147(l0): point = 62
   Insn 146(l0): point = 64
   Insn 143(l0): point = 66
   Insn 142(l0): point = 68
   Insn 141(l0): point = 70
   Insn 140(l0): point = 72
   Insn 139(l0): point = 74
   Insn 138(l0): point = 76
   Insn 137(l0): point = 78
   Insn 136(l0): point = 80
   Insn 135(l0): point = 82
   Insn 134(l0): point = 84
   Insn 133(l0): point = 86
   Insn 130(l0): point = 88
   Insn 129(l0): point = 90
   Insn 128(l0): point = 92
   Insn 127(l0): point = 94
   Insn 126(l0): point = 96
   Insn 125(l0): point = 98
   Insn 124(l0): point = 100
   Insn 123(l0): point = 102
   Insn 122(l0): point = 104
   Insn 121(l0): point = 106
   Insn 118(l0): point = 108
   Insn 117(l0): point = 110
   Insn 116(l0): point = 112
   Insn 115(l0): point = 114
   Insn 114(l0): point = 116
   Insn 113(l0): point = 118
   Insn 112(l0): point = 120
   Insn 111(l0): point = 122
   Insn 110(l0): point = 124
   Insn 109(l0): point = 126
   Insn 108(l0): point = 128
   Insn 105(l0): point = 130
   Insn 104(l0): point = 132
   Insn 103(l0): point = 134
   Insn 102(l0): point = 136
   Insn 101(l0): point = 138
   Insn 100(l0): point = 140
   Insn 99(l0): point = 142
   Insn 98(l0): point = 144
   Insn 97(l0): point = 146
   Insn 96(l0): point = 148
   Insn 93(l0): point = 150
   Insn 92(l0): point = 152
   Insn 91(l0): point = 154
   Insn 90(l0): point = 156
   Insn 89(l0): point = 158
   Insn 88(l0): point = 160
   Insn 87(l0): point = 162
   Insn 86(l0): point = 164
   Insn 85(l0): point = 166
   Insn 84(l0): point = 168
   Insn 83(l0): point = 170
   Insn 80(l0): point = 172
   Insn 79(l0): point = 174
   Insn 78(l0): point = 176
   Insn 77(l0): point = 178
   Insn 76(l0): point = 180
   Insn 75(l0): point = 182
   Insn 74(l0): point = 184
   Insn 73(l0): point = 186
   Insn 72(l0): point = 188
   Insn 71(l0): point = 190
   Insn 68(l0): point = 192
   Insn 67(l0): point = 194
   Insn 66(l0): point = 196
   Insn 65(l0): point = 198
   Insn 64(l0): point = 200
   Insn 63(l0): point = 202
   Insn 62(l0): point = 204
   Insn 61(l0): point = 206
   Insn 60(l0): point = 208
   Insn 59(l0): point = 210
   Insn 56(l0): point = 212
   Insn 55(l0): point = 214
   Insn 54(l0): point = 216
   Insn 53(l0): point = 218
   Insn 52(l0): point = 220
   Insn 51(l0): point = 222
   Insn 50(l0): point = 224
   Insn 49(l0): point = 226
   Insn 48(l0): point = 228
   Insn 45(l0): point = 230
   Insn 44(l0): point = 232
   Insn 43(l0): point = 234
   Insn 42(l0): point = 236
   Insn 41(l0): point = 238
   Insn 40(l0): point = 240
   Insn 39(l0): point = 242
   Insn 38(l0): point = 244
   Insn 37(l0): point = 246
   Insn 36(l0): point = 248
   Insn 33(l0): point = 250
   Insn 32(l0): point = 252
   Insn 31(l0): point = 254
   Insn 30(l0): point = 256
   Insn 29(l0): point = 258
   Insn 28(l0): point = 260
   Insn 27(l0): point = 262
   Insn 26(l0): point = 264
   Insn 25(l0): point = 266
   Insn 24(l0): point = 268
   Insn 21(l0): point = 270
   Insn 20(l0): point = 272
   Insn 19(l0): point = 274
   Insn 18(l0): point = 276
   Insn 17(l0): point = 278
   Insn 16(l0): point = 280
   Insn 15(l0): point = 282
   Insn 14(l0): point = 284
   Insn 13(l0): point = 286
   Insn 12(l0): point = 288
   Insn 11(l0): point = 290
   Insn 8(l0): point = 292
   Insn 4(l0): point = 294
   Insn 3(l0): point = 296
   Insn 2(l0): point = 298
 a0(r156): [3..4]
 a1(r155): [5..6]
 a2(r154): [9..10]
 a3(r153): [11..12]
 a4(r149): [11..28]
 a5(r152): [13..14]
 a6(r151): [15..16]
 a7(r150): [17..18]
 a8(r219): [19..20]
 a9(r218): [21..22]
 a10(r216): [23..26]
 a11(r217): [23..24]
 a12(r148): [29..30]
 a13(r215): [31..32]
 a14(r147): [31..34]
 a15(r146): [35..36]
 a16(r145): [37..38]
 a17(r144): [39..40]
 a18(r214): [41..42]
 a19(r213): [43..44]
 a20(r211): [45..48]
 a21(r212): [45..46]
 a22(r143): [51..52]
 a23(r142): [53..54]
 a24(r139): [53..68]
 a25(r141): [55..56]
 a26(r140): [57..58]
 a27(r210): [59..60]
 a28(r209): [61..62]
 a29(r207): [63..66]
 a30(r208): [63..64]
 a31(r138): [69..70]
 a32(r206): [71..72]
 a33(r137): [71..74]
 a34(r136): [75..76]
 a35(r135): [77..78]
 a36(r134): [79..80]
 a37(r205): [81..82]
 a38(r204): [83..84]
 a39(r202): [85..88]
 a40(r203): [85..86]
 a41(r133): [91..92]
 a42(r132): [93..94]
 a43(r128): [93..110]
 a44(r131): [95..96]
 a45(r130): [97..98]
 a46(r129): [99..100]
 a47(r201): [101..102]
 a48(r200): [103..104]
 a49(r198): [105..108]
 a50(r199): [105..106]
 a51(r127): [111..112]
 a52(r197): [113..114]
 a53(r126): [113..116]
 a54(r125): [117..118]
 a55(r124): [119..120]
 a56(r123): [121..122]
 a57(r196): [123..124]
 a58(r195): [125..126]
 a59(r193): [127..130]
 a60(r194): [127..128]
 a61(r122): [133..134]
 a62(r121): [135..136]
 a63(r117): [135..152]
 a64(r120): [137..138]
 a65(r119): [139..140]
 a66(r118): [141..142]
 a67(r192): [143..144]
 a68(r191): [145..146]
 a69(r189): [147..150]
 a70(r190): [147..148]
 a71(r116): [153..154]
 a72(r188): [155..156]
 a73(r115): [155..158]
 a74(r114): [159..160]
 a75(r113): [161..162]
 a76(r112): [163..164]
 a77(r187): [165..166]
 a78(r186): [167..168]
 a79(r184): [169..172]
 a80(r185): [169..170]
 a81(r111): [175..176]
 a82(r110): [177..178]
 a83(r106): [177..194]
 a84(r109): [179..180]
 a85(r108): [181..182]
 a86(r107): [183..184]
 a87(r183): [185..186]
 a88(r182): [187..188]
 a89(r180): [189..192]
 a90(r181): [189..190]
 a91(r105): [195..196]
 a92(r179): [197..198]
 a93(r104): [197..200]
 a94(r103): [201..202]
 a95(r102): [203..204]
 a96(r178): [205..206]
 a97(r177): [207..208]
 a98(r175): [209..212]
 a99(r176): [209..210]
 a100(r101): [215..216]
 a101(r100): [217..218]
 a102(r97): [217..232]
 a103(r99): [219..220]
 a104(r98): [221..222]
 a105(r174): [223..224]
 a106(r173): [225..226]
 a107(r171): [227..230]
 a108(r172): [227..228]
 a109(r96): [233..234]
 a110(r170): [235..236]
 a111(r95): [235..238]
 a112(r94): [239..240]
 a113(r93): [241..242]
 a114(r169): [243..244]
 a115(r168): [245..246]
 a116(r166): [247..250]
 a117(r167): [247..248]
 a118(r92): [253..254]
 a119(r91): [255..256]
 a120(r87): [255..272]
 a121(r90): [257..258]
 a122(r89): [259..260]
 a123(r88): [261..262]
 a124(r165): [263..264]
 a125(r164): [265..266]
 a126(r162): [267..270]
 a127(r163): [267..268]
 a128(r86): [273..274]
 a129(r161): [275..276]
 a130(r85): [275..278]
 a131(r84): [279..280]
 a132(r83): [281..282]
 a133(r82): [283..284]
 a134(r160): [285..286]
 a135(r159): [287..288]
 a136(r157): [289..292]
 a137(r158): [289..290]
Compressing live ranges: from 301 to 220 - 73%
Ranges after the compression:
 a0(r156): [0..1]
 a1(r155): [2..3]
 a2(r154): [4..5]
 a3(r153): [6..7]
 a4(r149): [6..19]
 a5(r152): [8..9]
 a6(r151): [10..11]
 a7(r150): [12..13]
 a8(r219): [14..15]
 a9(r218): [16..17]
 a10(r216): [18..19]
 a11(r217): [18..19]
 a12(r148): [20..21]
 a13(r215): [22..23]
 a14(r147): [22..23]
 a15(r146): [24..25]
 a16(r145): [26..27]
 a17(r144): [28..29]
 a18(r214): [30..31]
 a19(r213): [32..33]
 a20(r211): [34..35]
 a21(r212): [34..35]
 a22(r143): [36..37]
 a23(r142): [38..39]
 a24(r139): [38..49]
 a25(r141): [40..41]
 a26(r140): [42..43]
 a27(r210): [44..45]
 a28(r209): [46..47]
 a29(r207): [48..49]
 a30(r208): [48..49]
 a31(r138): [50..51]
 a32(r206): [52..53]
 a33(r137): [52..53]
 a34(r136): [54..55]
 a35(r135): [56..57]
 a36(r134): [58..59]
 a37(r205): [60..61]
 a38(r204): [62..63]
 a39(r202): [64..65]
 a40(r203): [64..65]
 a41(r133): [66..67]
 a42(r132): [68..69]
 a43(r128): [68..81]
 a44(r131): [70..71]
 a45(r130): [72..73]
 a46(r129): [74..75]
 a47(r201): [76..77]
 a48(r200): [78..79]
 a49(r198): [80..81]
 a50(r199): [80..81]
 a51(r127): [82..83]
 a52(r197): [84..85]
 a53(r126): [84..85]
 a54(r125): [86..87]
 a55(r124): [88..89]
 a56(r123): [90..91]
 a57(r196): [92..93]
 a58(r195): [94..95]
 a59(r193): [96..97]
 a60(r194): [96..97]
 a61(r122): [98..99]
 a62(r121): [100..101]
 a63(r117): [100..113]
 a64(r120): [102..103]
 a65(r119): [104..105]
 a66(r118): [106..107]
 a67(r192): [108..109]
 a68(r191): [110..111]
 a69(r189): [112..113]
 a70(r190): [112..113]
 a71(r116): [114..115]
 a72(r188): [116..117]
 a73(r115): [116..117]
 a74(r114): [118..119]
 a75(r113): [120..121]
 a76(r112): [122..123]
 a77(r187): [124..125]
 a78(r186): [126..127]
 a79(r184): [128..129]
 a80(r185): [128..129]
 a81(r111): [130..131]
 a82(r110): [132..133]
 a83(r106): [132..145]
 a84(r109): [134..135]
 a85(r108): [136..137]
 a86(r107): [138..139]
 a87(r183): [140..141]
 a88(r182): [142..143]
 a89(r180): [144..145]
 a90(r181): [144..145]
 a91(r105): [146..147]
 a92(r179): [148..149]
 a93(r104): [148..149]
 a94(r103): [150..151]
 a95(r102): [152..153]
 a96(r178): [154..155]
 a97(r177): [156..157]
 a98(r175): [158..159]
 a99(r176): [158..159]
 a100(r101): [160..161]
 a101(r100): [162..163]
 a102(r97): [162..173]
 a103(r99): [164..165]
 a104(r98): [166..167]
 a105(r174): [168..169]
 a106(r173): [170..171]
 a107(r171): [172..173]
 a108(r172): [172..173]
 a109(r96): [174..175]
 a110(r170): [176..177]
 a111(r95): [176..177]
 a112(r94): [178..179]
 a113(r93): [180..181]
 a114(r169): [182..183]
 a115(r168): [184..185]
 a116(r166): [186..187]
 a117(r167): [186..187]
 a118(r92): [188..189]
 a119(r91): [190..191]
 a120(r87): [190..203]
 a121(r90): [192..193]
 a122(r89): [194..195]
 a123(r88): [196..197]
 a124(r165): [198..199]
 a125(r164): [200..201]
 a126(r162): [202..203]
 a127(r163): [202..203]
 a128(r86): [204..205]
 a129(r161): [206..207]
 a130(r85): [206..207]
 a131(r84): [208..209]
 a132(r83): [210..211]
 a133(r82): [212..213]
 a134(r160): [214..215]
 a135(r159): [216..217]
 a136(r157): [218..219]
 a137(r158): [218..219]
  pref0:a0(r156)<-hr0@1500
  regions=1, blocks=3, points=220
    allocnos=138 (big 0), copies=0, conflicts=0, ranges=138
Disposition:
  133:r82  l0     0  132:r83  l0     0  131:r84  l0     0  130:r85  l0     1
  128:r86  l0     0  120:r87  l0     1  123:r88  l0     0  122:r89  l0     0
  121:r90  l0     0  119:r91  l0     0  118:r92  l0     0  113:r93  l0     0
  112:r94  l0     0  111:r95  l0     1  109:r96  l0     0  102:r97  l0     1
  104:r98  l0     0  103:r99  l0     0  101:r100 l0     0  100:r101 l0     0
   95:r102 l0     0   94:r103 l0     0   93:r104 l0     1   91:r105 l0     0
   83:r106 l0     1   86:r107 l0     0   85:r108 l0     0   84:r109 l0     0
   82:r110 l0     0   81:r111 l0     0   76:r112 l0     0   75:r113 l0     0
   74:r114 l0     0   73:r115 l0     1   71:r116 l0     0   63:r117 l0     1
   66:r118 l0     0   65:r119 l0     0   64:r120 l0     0   62:r121 l0     0
   61:r122 l0     0   56:r123 l0     0   55:r124 l0     0   54:r125 l0     0
   53:r126 l0     1   51:r127 l0     0   43:r128 l0     1   46:r129 l0     0
   45:r130 l0     0   44:r131 l0     0   42:r132 l0     0   41:r133 l0     0
   36:r134 l0     0   35:r135 l0     0   34:r136 l0     0   33:r137 l0     1
   31:r138 l0     0   24:r139 l0     1   26:r140 l0     0   25:r141 l0     0
   23:r142 l0     0   22:r143 l0     0   17:r144 l0     0   16:r145 l0     0
   15:r146 l0     0   14:r147 l0     1   12:r148 l0     0    4:r149 l0     1
    7:r150 l0     0    6:r151 l0     0    5:r152 l0     0    3:r153 l0     0
    2:r154 l0     0    1:r155 l0     0    0:r156 l0     0  136:r157 l0     0
  137:r158 l0     1  135:r159 l0     0  134:r160 l0     0  129:r161 l0     0
  126:r162 l0     0  127:r163 l0     2  125:r164 l0     0  124:r165 l0     0
  116:r166 l0     0  117:r167 l0     1  115:r168 l0     0  114:r169 l0     0
  110:r170 l0     0  107:r171 l0     0  108:r172 l0     2  106:r173 l0     0
  105:r174 l0     0   98:r175 l0     0   99:r176 l0     1   97:r177 l0     0
   96:r178 l0     0   92:r179 l0     0   89:r180 l0     0   90:r181 l0     2
   88:r182 l0     0   87:r183 l0     0   79:r184 l0     0   80:r185 l0     1
   78:r186 l0     0   77:r187 l0     0   72:r188 l0     0   69:r189 l0     0
   70:r190 l0     2   68:r191 l0     0   67:r192 l0     0   59:r193 l0     0
   60:r194 l0     1   58:r195 l0     0   57:r196 l0     0   52:r197 l0     0
   49:r198 l0     0   50:r199 l0     2   48:r200 l0     0   47:r201 l0     0
   39:r202 l0     0   40:r203 l0     1   38:r204 l0     0   37:r205 l0     0
   32:r206 l0     0   29:r207 l0     0   30:r208 l0     2   28:r209 l0     0
   27:r210 l0     0   20:r211 l0     0   21:r212 l0     1   19:r213 l0     0
   18:r214 l0     0   13:r215 l0     0   10:r216 l0     0   11:r217 l0     2
    9:r218 l0     0    8:r219 l0     0
+++Costs: overall 55000, reg 55000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_init_life2

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={80d} r19={1d,27u,7e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u,1e} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u,1e} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u,1e} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1e} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u,1e} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,2u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,2u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,2u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,2u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,2u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,2u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,2u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,2u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,2u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,2u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,2u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,2u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,2u} r217={1d,1u} r218={1d,1u} r219={1d,1u} 
;;    total ref usage 441{238d,189u,14e} in 150{150 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 17 [flags] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 5 di [ A ])) "game_of_life.c":117:55 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ A ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":117:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])
        (reg:SI 1 dx [ M ])) "game_of_life.c":117:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ M ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 11 2 (set (reg:SI 157)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":119:10 75 {*movsi_internal}
     (nil))
(insn 11 8 12 2 (parallel [
            (set (reg:SI 158)
                (lshiftrt:SI (reg:SI 157)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 159)
                (plus:SI (reg:SI 158)
                    (reg:SI 157)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 157)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 160)
                (ashiftrt:SI (reg:SI 159)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (set (reg:SI 82 [ _1 ])
        (reg:SI 160)) "game_of_life.c":119:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 160)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "game_of_life.c":119:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 85 [ _4 ])
                (ashift:DI (reg:DI 84 [ _3 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 18 17 19 2 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":119:6 74 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 86 [ _5 ])
                (plus:DI (reg:DI 85 [ _4 ])
                    (reg/f:DI 161)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 161)
        (expr_list:REG_DEAD (reg:DI 85 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 85 [ _4 ]))
                    (nil))))))
(insn 20 19 21 2 (set (reg/f:DI 87 [ _6 ])
        (mem/f:DI (reg/f:DI 86 [ _5 ]) [4 *_5+0 S8 A64])) "game_of_life.c":119:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _5 ])
        (nil)))
(insn 21 20 24 2 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":119:23 75 {*movsi_internal}
     (nil))
(insn 24 21 25 2 (parallel [
            (set (reg:SI 163)
                (lshiftrt:SI (reg:SI 162)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 2 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 163)
                    (reg:SI 162)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:SI 162)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 26 25 27 2 (parallel [
            (set (reg:SI 165)
                (ashiftrt:SI (reg:SI 164)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 27 26 28 2 (set (reg:SI 88 [ _7 ])
        (reg:SI 165)) "game_of_life.c":119:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 89 [ _8 ])
        (sign_extend:DI (reg:SI 88 [ _7 ]))) "game_of_life.c":119:23 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 88 [ _7 ])
        (nil)))
(insn 29 28 30 2 (parallel [
            (set (reg:DI 90 [ _9 ])
                (ashift:DI (reg:DI 89 [ _8 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 2 (parallel [
            (set (reg:DI 91 [ _10 ])
                (plus:DI (reg:DI 90 [ _9 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 90 [ _9 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 2 (parallel [
            (set (reg/f:DI 92 [ _11 ])
                (plus:DI (reg/f:DI 87 [ _6 ])
                    (reg:DI 91 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":119:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 91 [ _10 ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ _6 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 32 31 33 2 (set (mem:SI (reg/f:DI 92 [ _11 ]) [2 *_11+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":119:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _11 ])
        (nil)))
(insn 33 32 36 2 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":120:9 75 {*movsi_internal}
     (nil))
(insn 36 33 37 2 (parallel [
            (set (reg:SI 167)
                (lshiftrt:SI (reg:SI 166)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:9 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 2 (parallel [
            (set (reg:SI 168)
                (plus:SI (reg:SI 167)
                    (reg:SI 166)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_DEAD (reg:SI 166)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 38 37 39 2 (parallel [
            (set (reg:SI 169)
                (ashiftrt:SI (reg:SI 168)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:9 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 2 (set (reg:SI 93 [ _12 ])
        (reg:SI 169)) "game_of_life.c":120:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
(insn 40 39 41 2 (set (reg:DI 94 [ _13 ])
        (sign_extend:DI (reg:SI 93 [ _12 ]))) "game_of_life.c":120:9 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 93 [ _12 ])
        (nil)))
(insn 41 40 42 2 (parallel [
            (set (reg:DI 95 [ _14 ])
                (ashift:DI (reg:DI 94 [ _13 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 94 [ _13 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 2 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":120:6 74 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (parallel [
            (set (reg/f:DI 96 [ _15 ])
                (plus:DI (reg:DI 95 [ _14 ])
                    (reg/f:DI 170)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 170)
        (expr_list:REG_DEAD (reg:DI 95 [ _14 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 95 [ _14 ]))
                    (nil))))))
(insn 44 43 45 2 (set (reg/f:DI 97 [ _16 ])
        (mem/f:DI (reg/f:DI 96 [ _15 ]) [4 *_15+0 S8 A64])) "game_of_life.c":120:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _15 ])
        (nil)))
(insn 45 44 48 2 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":120:16 75 {*movsi_internal}
     (nil))
(insn 48 45 49 2 (parallel [
            (set (reg:SI 172)
                (lshiftrt:SI (reg:SI 171)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:16 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 2 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 172)
                    (reg:SI 171)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg:SI 171)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 50 49 51 2 (parallel [
            (set (reg:SI 174)
                (ashiftrt:SI (reg:SI 173)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:16 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 51 50 52 2 (set (reg:SI 98 [ _17 ])
        (reg:SI 174)) "game_of_life.c":120:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 174)
        (nil)))
(insn 52 51 53 2 (set (reg:DI 99 [ _18 ])
        (sign_extend:DI (reg:SI 98 [ _17 ]))) "game_of_life.c":120:16 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 98 [ _17 ])
        (nil)))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 100 [ _19 ])
                (ashift:DI (reg:DI 99 [ _18 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:13 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 55 2 (parallel [
            (set (reg/f:DI 101 [ _20 ])
                (plus:DI (reg/f:DI 97 [ _16 ])
                    (reg:DI 100 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":120:13 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ _19 ])
        (expr_list:REG_DEAD (reg/f:DI 97 [ _16 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 54 56 2 (set (mem:SI (reg/f:DI 101 [ _20 ]) [2 *_20+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":120:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _20 ])
        (nil)))
(insn 56 55 59 2 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":121:10 75 {*movsi_internal}
     (nil))
(insn 59 56 60 2 (parallel [
            (set (reg:SI 176)
                (lshiftrt:SI (reg:SI 175)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 61 2 (parallel [
            (set (reg:SI 177)
                (plus:SI (reg:SI 176)
                    (reg:SI 175)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_DEAD (reg:SI 175)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 61 60 62 2 (parallel [
            (set (reg:SI 178)
                (ashiftrt:SI (reg:SI 177)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 2 (set (reg:SI 102 [ _21 ])
        (reg:SI 178)) "game_of_life.c":121:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 178)
        (nil)))
(insn 63 62 64 2 (set (reg:DI 103 [ _22 ])
        (sign_extend:DI (reg:SI 102 [ _21 ]))) "game_of_life.c":121:10 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 102 [ _21 ])
        (nil)))
(insn 64 63 65 2 (parallel [
            (set (reg:DI 104 [ _23 ])
                (ashift:DI (reg:DI 103 [ _22 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 2 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":121:6 74 {*movdi_internal}
     (nil))
(insn 66 65 67 2 (parallel [
            (set (reg/f:DI 105 [ _24 ])
                (plus:DI (reg:DI 104 [ _23 ])
                    (reg/f:DI 179)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 179)
        (expr_list:REG_DEAD (reg:DI 104 [ _23 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 104 [ _23 ]))
                    (nil))))))
(insn 67 66 68 2 (set (reg/f:DI 106 [ _25 ])
        (mem/f:DI (reg/f:DI 105 [ _24 ]) [4 *_24+0 S8 A64])) "game_of_life.c":121:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ _24 ])
        (nil)))
(insn 68 67 71 2 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":121:19 75 {*movsi_internal}
     (nil))
(insn 71 68 72 2 (parallel [
            (set (reg:SI 181)
                (lshiftrt:SI (reg:SI 180)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:19 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 71 73 2 (parallel [
            (set (reg:SI 182)
                (plus:SI (reg:SI 181)
                    (reg:SI 180)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_DEAD (reg:SI 180)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 73 72 74 2 (parallel [
            (set (reg:SI 183)
                (ashiftrt:SI (reg:SI 182)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:19 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 74 73 75 2 (set (reg:SI 107 [ _26 ])
        (reg:SI 183)) "game_of_life.c":121:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 183)
        (nil)))
(insn 75 74 76 2 (set (reg:DI 108 [ _27 ])
        (sign_extend:DI (reg:SI 107 [ _26 ]))) "game_of_life.c":121:15 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 107 [ _26 ])
        (nil)))
(insn 76 75 77 2 (parallel [
            (set (reg:DI 109 [ _28 ])
                (plus:DI (reg:DI 108 [ _27 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:15 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 108 [ _27 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 2 (parallel [
            (set (reg:DI 110 [ _29 ])
                (ashift:DI (reg:DI 109 [ _28 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:15 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 2 (parallel [
            (set (reg/f:DI 111 [ _30 ])
                (plus:DI (reg/f:DI 106 [ _25 ])
                    (reg:DI 110 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":121:15 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _29 ])
        (expr_list:REG_DEAD (reg/f:DI 106 [ _25 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 79 78 80 2 (set (mem:SI (reg/f:DI 111 [ _30 ]) [2 *_30+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":121:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ _30 ])
        (nil)))
(insn 80 79 83 2 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":122:10 75 {*movsi_internal}
     (nil))
(insn 83 80 84 2 (parallel [
            (set (reg:SI 185)
                (lshiftrt:SI (reg:SI 184)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 83 85 2 (parallel [
            (set (reg:SI 186)
                (plus:SI (reg:SI 185)
                    (reg:SI 184)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_DEAD (reg:SI 184)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 85 84 86 2 (parallel [
            (set (reg:SI 187)
                (ashiftrt:SI (reg:SI 186)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 2 (set (reg:SI 112 [ _31 ])
        (reg:SI 187)) "game_of_life.c":122:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 187)
        (nil)))
(insn 87 86 88 2 (set (reg:DI 113 [ _32 ])
        (sign_extend:DI (reg:SI 112 [ _31 ]))) "game_of_life.c":122:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 112 [ _31 ])
        (nil)))
(insn 88 87 89 2 (parallel [
            (set (reg:DI 114 [ _33 ])
                (plus:DI (reg:DI 113 [ _32 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 113 [ _32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 89 88 90 2 (parallel [
            (set (reg:DI 115 [ _34 ])
                (ashift:DI (reg:DI 114 [ _33 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 2 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":122:6 74 {*movdi_internal}
     (nil))
(insn 91 90 92 2 (parallel [
            (set (reg/f:DI 116 [ _35 ])
                (plus:DI (reg:DI 115 [ _34 ])
                    (reg/f:DI 188)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 188)
        (expr_list:REG_DEAD (reg:DI 115 [ _34 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 115 [ _34 ]))
                    (nil))))))
(insn 92 91 93 2 (set (reg/f:DI 117 [ _36 ])
        (mem/f:DI (reg/f:DI 116 [ _35 ]) [4 *_35+0 S8 A64])) "game_of_life.c":122:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ _35 ])
        (nil)))
(insn 93 92 96 2 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":122:23 75 {*movsi_internal}
     (nil))
(insn 96 93 97 2 (parallel [
            (set (reg:SI 190)
                (lshiftrt:SI (reg:SI 189)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 97 96 98 2 (parallel [
            (set (reg:SI 191)
                (plus:SI (reg:SI 190)
                    (reg:SI 189)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 190)
        (expr_list:REG_DEAD (reg:SI 189)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 98 97 99 2 (parallel [
            (set (reg:SI 192)
                (ashiftrt:SI (reg:SI 191)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 99 98 100 2 (set (reg:SI 118 [ _37 ])
        (reg:SI 192)) "game_of_life.c":122:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 192)
        (nil)))
(insn 100 99 101 2 (set (reg:DI 119 [ _38 ])
        (sign_extend:DI (reg:SI 118 [ _37 ]))) "game_of_life.c":122:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 118 [ _37 ])
        (nil)))
(insn 101 100 102 2 (parallel [
            (set (reg:DI 120 [ _39 ])
                (plus:DI (reg:DI 119 [ _38 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 102 101 103 2 (parallel [
            (set (reg:DI 121 [ _40 ])
                (ashift:DI (reg:DI 120 [ _39 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _39 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 2 (parallel [
            (set (reg/f:DI 122 [ _41 ])
                (plus:DI (reg/f:DI 117 [ _36 ])
                    (reg:DI 121 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":122:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _40 ])
        (expr_list:REG_DEAD (reg/f:DI 117 [ _36 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 104 103 105 2 (set (mem:SI (reg/f:DI 122 [ _41 ]) [2 *_41+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":122:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ _41 ])
        (nil)))
(insn 105 104 108 2 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":123:10 75 {*movsi_internal}
     (nil))
(insn 108 105 109 2 (parallel [
            (set (reg:SI 194)
                (lshiftrt:SI (reg:SI 193)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 109 108 110 2 (parallel [
            (set (reg:SI 195)
                (plus:SI (reg:SI 194)
                    (reg:SI 193)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_DEAD (reg:SI 193)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 110 109 111 2 (parallel [
            (set (reg:SI 196)
                (ashiftrt:SI (reg:SI 195)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 111 110 112 2 (set (reg:SI 123 [ _42 ])
        (reg:SI 196)) "game_of_life.c":123:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 196)
        (nil)))
(insn 112 111 113 2 (set (reg:DI 124 [ _43 ])
        (sign_extend:DI (reg:SI 123 [ _42 ]))) "game_of_life.c":123:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123 [ _42 ])
        (nil)))
(insn 113 112 114 2 (parallel [
            (set (reg:DI 125 [ _44 ])
                (plus:DI (reg:DI 124 [ _43 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 2 (parallel [
            (set (reg:DI 126 [ _45 ])
                (ashift:DI (reg:DI 125 [ _44 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 125 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 2 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":123:6 74 {*movdi_internal}
     (nil))
(insn 116 115 117 2 (parallel [
            (set (reg/f:DI 127 [ _46 ])
                (plus:DI (reg:DI 126 [ _45 ])
                    (reg/f:DI 197)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 197)
        (expr_list:REG_DEAD (reg:DI 126 [ _45 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 126 [ _45 ]))
                    (nil))))))
(insn 117 116 118 2 (set (reg/f:DI 128 [ _47 ])
        (mem/f:DI (reg/f:DI 127 [ _46 ]) [4 *_46+0 S8 A64])) "game_of_life.c":123:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ _46 ])
        (nil)))
(insn 118 117 121 2 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":123:23 75 {*movsi_internal}
     (nil))
(insn 121 118 122 2 (parallel [
            (set (reg:SI 199)
                (lshiftrt:SI (reg:SI 198)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 122 121 123 2 (parallel [
            (set (reg:SI 200)
                (plus:SI (reg:SI 199)
                    (reg:SI 198)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg:SI 198)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 123 122 124 2 (parallel [
            (set (reg:SI 201)
                (ashiftrt:SI (reg:SI 200)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 200)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 124 123 125 2 (set (reg:SI 129 [ _48 ])
        (reg:SI 201)) "game_of_life.c":123:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 125 124 126 2 (set (reg:DI 130 [ _49 ])
        (sign_extend:DI (reg:SI 129 [ _48 ]))) "game_of_life.c":123:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 129 [ _48 ])
        (nil)))
(insn 126 125 127 2 (parallel [
            (set (reg:DI 131 [ _50 ])
                (plus:DI (reg:DI 130 [ _49 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 130 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 2 (parallel [
            (set (reg:DI 132 [ _51 ])
                (ashift:DI (reg:DI 131 [ _50 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 131 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 128 127 129 2 (parallel [
            (set (reg/f:DI 133 [ _52 ])
                (plus:DI (reg/f:DI 128 [ _47 ])
                    (reg:DI 132 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":123:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _51 ])
        (expr_list:REG_DEAD (reg/f:DI 128 [ _47 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 129 128 130 2 (set (mem:SI (reg/f:DI 133 [ _52 ]) [2 *_52+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":123:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ _52 ])
        (nil)))
(insn 130 129 133 2 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":124:10 75 {*movsi_internal}
     (nil))
(insn 133 130 134 2 (parallel [
            (set (reg:SI 203)
                (lshiftrt:SI (reg:SI 202)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 134 133 135 2 (parallel [
            (set (reg:SI 204)
                (plus:SI (reg:SI 203)
                    (reg:SI 202)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_DEAD (reg:SI 202)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 135 134 136 2 (parallel [
            (set (reg:SI 205)
                (ashiftrt:SI (reg:SI 204)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 204)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 2 (set (reg:SI 134 [ _53 ])
        (reg:SI 205)) "game_of_life.c":124:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 205)
        (nil)))
(insn 137 136 138 2 (set (reg:DI 135 [ _54 ])
        (sign_extend:DI (reg:SI 134 [ _53 ]))) "game_of_life.c":124:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 134 [ _53 ])
        (nil)))
(insn 138 137 139 2 (parallel [
            (set (reg:DI 136 [ _55 ])
                (plus:DI (reg:DI 135 [ _54 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ _54 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 2 (parallel [
            (set (reg:DI 137 [ _56 ])
                (ashift:DI (reg:DI 136 [ _55 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ _55 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 2 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":124:6 74 {*movdi_internal}
     (nil))
(insn 141 140 142 2 (parallel [
            (set (reg/f:DI 138 [ _57 ])
                (plus:DI (reg:DI 137 [ _56 ])
                    (reg/f:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 206)
        (expr_list:REG_DEAD (reg:DI 137 [ _56 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 137 [ _56 ]))
                    (nil))))))
(insn 142 141 143 2 (set (reg/f:DI 139 [ _58 ])
        (mem/f:DI (reg/f:DI 138 [ _57 ]) [4 *_57+0 S8 A64])) "game_of_life.c":124:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ _57 ])
        (nil)))
(insn 143 142 146 2 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":124:22 75 {*movsi_internal}
     (nil))
(insn 146 143 147 2 (parallel [
            (set (reg:SI 208)
                (lshiftrt:SI (reg:SI 207)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:22 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 147 146 148 2 (parallel [
            (set (reg:SI 209)
                (plus:SI (reg:SI 208)
                    (reg:SI 207)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_DEAD (reg:SI 207)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 148 147 149 2 (parallel [
            (set (reg:SI 210)
                (ashiftrt:SI (reg:SI 209)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:22 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 2 (set (reg:SI 140 [ _59 ])
        (reg:SI 210)) "game_of_life.c":124:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 210)
        (nil)))
(insn 150 149 151 2 (set (reg:DI 141 [ _60 ])
        (sign_extend:DI (reg:SI 140 [ _59 ]))) "game_of_life.c":124:22 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 140 [ _59 ])
        (nil)))
(insn 151 150 152 2 (parallel [
            (set (reg:DI 142 [ _61 ])
                (ashift:DI (reg:DI 141 [ _60 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 141 [ _60 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 152 151 153 2 (parallel [
            (set (reg/f:DI 143 [ _62 ])
                (plus:DI (reg/f:DI 139 [ _58 ])
                    (reg:DI 142 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":124:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 142 [ _61 ])
        (expr_list:REG_DEAD (reg/f:DI 139 [ _58 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 153 152 154 2 (set (mem:SI (reg/f:DI 143 [ _62 ]) [2 *_62+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":124:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 143 [ _62 ])
        (nil)))
(insn 154 153 157 2 (set (reg:SI 211)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":125:10 75 {*movsi_internal}
     (nil))
(insn 157 154 158 2 (parallel [
            (set (reg:SI 212)
                (lshiftrt:SI (reg:SI 211)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 158 157 159 2 (parallel [
            (set (reg:SI 213)
                (plus:SI (reg:SI 212)
                    (reg:SI 211)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 212)
        (expr_list:REG_DEAD (reg:SI 211)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 159 158 160 2 (parallel [
            (set (reg:SI 214)
                (ashiftrt:SI (reg:SI 213)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 160 159 161 2 (set (reg:SI 144 [ _63 ])
        (reg:SI 214)) "game_of_life.c":125:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 214)
        (nil)))
(insn 161 160 162 2 (set (reg:DI 145 [ _64 ])
        (sign_extend:DI (reg:SI 144 [ _63 ]))) "game_of_life.c":125:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144 [ _63 ])
        (nil)))
(insn 162 161 163 2 (parallel [
            (set (reg:DI 146 [ _65 ])
                (plus:DI (reg:DI 145 [ _64 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 145 [ _64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 163 162 164 2 (parallel [
            (set (reg:DI 147 [ _66 ])
                (ashift:DI (reg:DI 146 [ _65 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 146 [ _65 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 2 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":125:6 74 {*movdi_internal}
     (nil))
(insn 165 164 166 2 (parallel [
            (set (reg/f:DI 148 [ _67 ])
                (plus:DI (reg:DI 147 [ _66 ])
                    (reg/f:DI 215)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 215)
        (expr_list:REG_DEAD (reg:DI 147 [ _66 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 147 [ _66 ]))
                    (nil))))))
(insn 166 165 167 2 (set (reg/f:DI 149 [ _68 ])
        (mem/f:DI (reg/f:DI 148 [ _67 ]) [4 *_67+0 S8 A64])) "game_of_life.c":125:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ _67 ])
        (nil)))
(insn 167 166 170 2 (set (reg:SI 216)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":125:23 75 {*movsi_internal}
     (nil))
(insn 170 167 171 2 (parallel [
            (set (reg:SI 217)
                (lshiftrt:SI (reg:SI 216)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 171 170 172 2 (parallel [
            (set (reg:SI 218)
                (plus:SI (reg:SI 217)
                    (reg:SI 216)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 217)
        (expr_list:REG_DEAD (reg:SI 216)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 172 171 173 2 (parallel [
            (set (reg:SI 219)
                (ashiftrt:SI (reg:SI 218)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 173 172 174 2 (set (reg:SI 150 [ _69 ])
        (reg:SI 219)) "game_of_life.c":125:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 219)
        (nil)))
(insn 174 173 175 2 (set (reg:DI 151 [ _70 ])
        (sign_extend:DI (reg:SI 150 [ _69 ]))) "game_of_life.c":125:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 150 [ _69 ])
        (nil)))
(insn 175 174 176 2 (parallel [
            (set (reg:DI 152 [ _71 ])
                (plus:DI (reg:DI 151 [ _70 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 151 [ _70 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 176 175 177 2 (parallel [
            (set (reg:DI 153 [ _72 ])
                (ashift:DI (reg:DI 152 [ _71 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 152 [ _71 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 2 (parallel [
            (set (reg/f:DI 154 [ _73 ])
                (plus:DI (reg/f:DI 149 [ _68 ])
                    (reg:DI 153 [ _72 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":125:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 153 [ _72 ])
        (expr_list:REG_DEAD (reg/f:DI 149 [ _68 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 178 177 179 2 (set (mem:SI (reg/f:DI 154 [ _73 ]) [2 *_73+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":125:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154 [ _73 ])
        (nil)))
(insn 179 178 182 2 (set (reg/f:DI 155 [ _85 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":127:12 74 {*movdi_internal}
     (nil))
(insn 182 179 186 2 (set (reg/f:DI 156 [ <retval> ])
        (reg/f:DI 155 [ _85 ])) "game_of_life.c":127:12 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 155 [ _85 ])
        (nil)))
(insn 186 182 187 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 156 [ <retval> ])) "game_of_life.c":128:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156 [ <retval> ])
        (nil)))
(insn 187 186 0 2 (use (reg/i:DI 0 ax)) "game_of_life.c":128:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_init_life3 (dynamic_array_init_life3, funcdef_no=13, decl_uid=4950, cgraph_uid=14, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r135,l0) best AREG, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a4(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a5(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a6(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a7(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a8(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a9(r177,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a10(r178,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a11(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a12(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a13(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a14(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a15(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a16(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a17(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a18(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a19(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a20(r173,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a21(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a22(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a23(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a24(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a25(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a26(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a27(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a28(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a29(r168,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a30(r169,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a31(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a32(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a33(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a34(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a35(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a36(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a37(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a38(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a39(r163,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a40(r164,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a41(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a42(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a43(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a44(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a45(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a46(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a47(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a48(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a49(r159,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a50(r160,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a51(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a52(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a53(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a54(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a55(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a56(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a57(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a58(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a59(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a60(r155,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a61(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a62(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a63(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a64(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:10000
  a65(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a66(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a67(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a68(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a69(r150,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a70(r151,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a71(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a72(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a73(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a74(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a75(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a76(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a77(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a78(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a79(r145,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a80(r146,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a81(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a82(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a83(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a84(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a85(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a86(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a87(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a88(r141,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a89(r142,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a90(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a91(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a92(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a93(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a94(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a95(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a96(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a97(r136,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a98(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000

   Insn 138(l0): point = 0
   Insn 137(l0): point = 2
   Insn 133(l0): point = 4
   Insn 130(l0): point = 6
   Insn 129(l0): point = 8
   Insn 128(l0): point = 10
   Insn 127(l0): point = 12
   Insn 126(l0): point = 14
   Insn 125(l0): point = 16
   Insn 124(l0): point = 18
   Insn 123(l0): point = 20
   Insn 122(l0): point = 22
   Insn 119(l0): point = 24
   Insn 118(l0): point = 26
   Insn 117(l0): point = 28
   Insn 116(l0): point = 30
   Insn 115(l0): point = 32
   Insn 114(l0): point = 34
   Insn 113(l0): point = 36
   Insn 112(l0): point = 38
   Insn 111(l0): point = 40
   Insn 110(l0): point = 42
   Insn 109(l0): point = 44
   Insn 106(l0): point = 46
   Insn 105(l0): point = 48
   Insn 104(l0): point = 50
   Insn 103(l0): point = 52
   Insn 102(l0): point = 54
   Insn 101(l0): point = 56
   Insn 100(l0): point = 58
   Insn 99(l0): point = 60
   Insn 98(l0): point = 62
   Insn 97(l0): point = 64
   Insn 94(l0): point = 66
   Insn 93(l0): point = 68
   Insn 92(l0): point = 70
   Insn 91(l0): point = 72
   Insn 90(l0): point = 74
   Insn 89(l0): point = 76
   Insn 88(l0): point = 78
   Insn 87(l0): point = 80
   Insn 86(l0): point = 82
   Insn 85(l0): point = 84
   Insn 84(l0): point = 86
   Insn 81(l0): point = 88
   Insn 80(l0): point = 90
   Insn 79(l0): point = 92
   Insn 78(l0): point = 94
   Insn 77(l0): point = 96
   Insn 76(l0): point = 98
   Insn 75(l0): point = 100
   Insn 74(l0): point = 102
   Insn 73(l0): point = 104
   Insn 72(l0): point = 106
   Insn 69(l0): point = 108
   Insn 68(l0): point = 110
   Insn 67(l0): point = 112
   Insn 66(l0): point = 114
   Insn 65(l0): point = 116
   Insn 64(l0): point = 118
   Insn 63(l0): point = 120
   Insn 62(l0): point = 122
   Insn 61(l0): point = 124
   Insn 60(l0): point = 126
   Insn 59(l0): point = 128
   Insn 56(l0): point = 130
   Insn 55(l0): point = 132
   Insn 54(l0): point = 134
   Insn 53(l0): point = 136
   Insn 52(l0): point = 138
   Insn 51(l0): point = 140
   Insn 50(l0): point = 142
   Insn 49(l0): point = 144
   Insn 48(l0): point = 146
   Insn 47(l0): point = 148
   Insn 44(l0): point = 150
   Insn 43(l0): point = 152
   Insn 42(l0): point = 154
   Insn 41(l0): point = 156
   Insn 40(l0): point = 158
   Insn 39(l0): point = 160
   Insn 38(l0): point = 162
   Insn 37(l0): point = 164
   Insn 36(l0): point = 166
   Insn 35(l0): point = 168
   Insn 34(l0): point = 170
   Insn 31(l0): point = 172
   Insn 30(l0): point = 174
   Insn 29(l0): point = 176
   Insn 28(l0): point = 178
   Insn 27(l0): point = 180
   Insn 26(l0): point = 182
   Insn 25(l0): point = 184
   Insn 24(l0): point = 186
   Insn 23(l0): point = 188
   Insn 20(l0): point = 190
   Insn 19(l0): point = 192
   Insn 18(l0): point = 194
   Insn 17(l0): point = 196
   Insn 16(l0): point = 198
   Insn 15(l0): point = 200
   Insn 14(l0): point = 202
   Insn 13(l0): point = 204
   Insn 12(l0): point = 206
   Insn 11(l0): point = 208
   Insn 8(l0): point = 210
   Insn 4(l0): point = 212
   Insn 3(l0): point = 214
   Insn 2(l0): point = 216
 a0(r135): [3..4]
 a1(r134): [5..6]
 a2(r133): [9..10]
 a3(r132): [11..12]
 a4(r129): [11..26]
 a5(r131): [13..14]
 a6(r130): [15..16]
 a7(r180): [17..18]
 a8(r179): [19..20]
 a9(r177): [21..24]
 a10(r178): [21..22]
 a11(r128): [27..28]
 a12(r176): [29..30]
 a13(r127): [29..32]
 a14(r126): [33..34]
 a15(r125): [35..36]
 a16(r124): [37..38]
 a17(r175): [39..40]
 a18(r174): [41..42]
 a19(r172): [43..46]
 a20(r173): [43..44]
 a21(r123): [49..50]
 a22(r122): [51..52]
 a23(r118): [51..68]
 a24(r121): [53..54]
 a25(r120): [55..56]
 a26(r119): [57..58]
 a27(r171): [59..60]
 a28(r170): [61..62]
 a29(r168): [63..66]
 a30(r169): [63..64]
 a31(r117): [69..70]
 a32(r167): [71..72]
 a33(r116): [71..74]
 a34(r115): [75..76]
 a35(r114): [77..78]
 a36(r113): [79..80]
 a37(r166): [81..82]
 a38(r165): [83..84]
 a39(r163): [85..88]
 a40(r164): [85..86]
 a41(r112): [91..92]
 a42(r111): [93..94]
 a43(r107): [93..110]
 a44(r110): [95..96]
 a45(r109): [97..98]
 a46(r108): [99..100]
 a47(r162): [101..102]
 a48(r161): [103..104]
 a49(r159): [105..108]
 a50(r160): [105..106]
 a51(r106): [111..112]
 a52(r158): [113..114]
 a53(r105): [113..116]
 a54(r104): [117..118]
 a55(r103): [119..120]
 a56(r102): [121..122]
 a57(r157): [123..124]
 a58(r156): [125..126]
 a59(r154): [127..130]
 a60(r155): [127..128]
 a61(r101): [133..134]
 a62(r100): [135..136]
 a63(r96): [135..152]
 a64(r99): [137..138]
 a65(r98): [139..140]
 a66(r97): [141..142]
 a67(r153): [143..144]
 a68(r152): [145..146]
 a69(r150): [147..150]
 a70(r151): [147..148]
 a71(r95): [153..154]
 a72(r149): [155..156]
 a73(r94): [155..158]
 a74(r93): [159..160]
 a75(r92): [161..162]
 a76(r91): [163..164]
 a77(r148): [165..166]
 a78(r147): [167..168]
 a79(r145): [169..172]
 a80(r146): [169..170]
 a81(r90): [175..176]
 a82(r89): [177..178]
 a83(r86): [177..192]
 a84(r88): [179..180]
 a85(r87): [181..182]
 a86(r144): [183..184]
 a87(r143): [185..186]
 a88(r141): [187..190]
 a89(r142): [187..188]
 a90(r85): [193..194]
 a91(r140): [195..196]
 a92(r84): [195..198]
 a93(r83): [199..200]
 a94(r82): [201..202]
 a95(r139): [203..204]
 a96(r138): [205..206]
 a97(r136): [207..210]
 a98(r137): [207..208]
Compressing live ranges: from 219 to 158 - 72%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [2..3]
 a2(r133): [4..5]
 a3(r132): [6..7]
 a4(r129): [6..17]
 a5(r131): [8..9]
 a6(r130): [10..11]
 a7(r180): [12..13]
 a8(r179): [14..15]
 a9(r177): [16..17]
 a10(r178): [16..17]
 a11(r128): [18..19]
 a12(r176): [20..21]
 a13(r127): [20..21]
 a14(r126): [22..23]
 a15(r125): [24..25]
 a16(r124): [26..27]
 a17(r175): [28..29]
 a18(r174): [30..31]
 a19(r172): [32..33]
 a20(r173): [32..33]
 a21(r123): [34..35]
 a22(r122): [36..37]
 a23(r118): [36..49]
 a24(r121): [38..39]
 a25(r120): [40..41]
 a26(r119): [42..43]
 a27(r171): [44..45]
 a28(r170): [46..47]
 a29(r168): [48..49]
 a30(r169): [48..49]
 a31(r117): [50..51]
 a32(r167): [52..53]
 a33(r116): [52..53]
 a34(r115): [54..55]
 a35(r114): [56..57]
 a36(r113): [58..59]
 a37(r166): [60..61]
 a38(r165): [62..63]
 a39(r163): [64..65]
 a40(r164): [64..65]
 a41(r112): [66..67]
 a42(r111): [68..69]
 a43(r107): [68..81]
 a44(r110): [70..71]
 a45(r109): [72..73]
 a46(r108): [74..75]
 a47(r162): [76..77]
 a48(r161): [78..79]
 a49(r159): [80..81]
 a50(r160): [80..81]
 a51(r106): [82..83]
 a52(r158): [84..85]
 a53(r105): [84..85]
 a54(r104): [86..87]
 a55(r103): [88..89]
 a56(r102): [90..91]
 a57(r157): [92..93]
 a58(r156): [94..95]
 a59(r154): [96..97]
 a60(r155): [96..97]
 a61(r101): [98..99]
 a62(r100): [100..101]
 a63(r96): [100..113]
 a64(r99): [102..103]
 a65(r98): [104..105]
 a66(r97): [106..107]
 a67(r153): [108..109]
 a68(r152): [110..111]
 a69(r150): [112..113]
 a70(r151): [112..113]
 a71(r95): [114..115]
 a72(r149): [116..117]
 a73(r94): [116..117]
 a74(r93): [118..119]
 a75(r92): [120..121]
 a76(r91): [122..123]
 a77(r148): [124..125]
 a78(r147): [126..127]
 a79(r145): [128..129]
 a80(r146): [128..129]
 a81(r90): [130..131]
 a82(r89): [132..133]
 a83(r86): [132..143]
 a84(r88): [134..135]
 a85(r87): [136..137]
 a86(r144): [138..139]
 a87(r143): [140..141]
 a88(r141): [142..143]
 a89(r142): [142..143]
 a90(r85): [144..145]
 a91(r140): [146..147]
 a92(r84): [146..147]
 a93(r83): [148..149]
 a94(r82): [150..151]
 a95(r139): [152..153]
 a96(r138): [154..155]
 a97(r136): [156..157]
 a98(r137): [156..157]
  pref0:a0(r135)<-hr0@1500
  regions=1, blocks=3, points=158
    allocnos=99 (big 0), copies=0, conflicts=0, ranges=99
Disposition:
   94:r82  l0     0   93:r83  l0     0   92:r84  l0     1   90:r85  l0     0
   83:r86  l0     1   85:r87  l0     0   84:r88  l0     0   82:r89  l0     0
   81:r90  l0     0   76:r91  l0     0   75:r92  l0     0   74:r93  l0     0
   73:r94  l0     1   71:r95  l0     0   63:r96  l0     1   66:r97  l0     0
   65:r98  l0     0   64:r99  l0     0   62:r100 l0     0   61:r101 l0     0
   56:r102 l0     0   55:r103 l0     0   54:r104 l0     0   53:r105 l0     1
   51:r106 l0     0   43:r107 l0     1   46:r108 l0     0   45:r109 l0     0
   44:r110 l0     0   42:r111 l0     0   41:r112 l0     0   36:r113 l0     0
   35:r114 l0     0   34:r115 l0     0   33:r116 l0     1   31:r117 l0     0
   23:r118 l0     1   26:r119 l0     0   25:r120 l0     0   24:r121 l0     0
   22:r122 l0     0   21:r123 l0     0   16:r124 l0     0   15:r125 l0     0
   14:r126 l0     0   13:r127 l0     1   11:r128 l0     0    4:r129 l0     1
    6:r130 l0     0    5:r131 l0     0    3:r132 l0     0    2:r133 l0     0
    1:r134 l0     0    0:r135 l0     0   97:r136 l0     0   98:r137 l0     1
   96:r138 l0     0   95:r139 l0     0   91:r140 l0     0   88:r141 l0     0
   89:r142 l0     2   87:r143 l0     0   86:r144 l0     0   79:r145 l0     0
   80:r146 l0     1   78:r147 l0     0   77:r148 l0     0   72:r149 l0     0
   69:r150 l0     0   70:r151 l0     2   68:r152 l0     0   67:r153 l0     0
   59:r154 l0     0   60:r155 l0     1   58:r156 l0     0   57:r157 l0     0
   52:r158 l0     0   49:r159 l0     0   50:r160 l0     2   48:r161 l0     0
   47:r162 l0     0   39:r163 l0     0   40:r164 l0     1   38:r165 l0     0
   37:r166 l0     0   32:r167 l0     0   29:r168 l0     0   30:r169 l0     2
   28:r170 l0     0   27:r171 l0     0   19:r172 l0     0   20:r173 l0     1
   18:r174 l0     0   17:r175 l0     0   12:r176 l0     0    9:r177 l0     0
   10:r178 l0     2    8:r179 l0     0    7:r180 l0     0
+++Costs: overall 39000, reg 39000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_init_life3

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={57d} r19={1d,21u,5e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u,1e} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u,1e} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u,1e} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,2u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,2u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,2u} r178={1d,1u} r179={1d,1u} r180={1d,1u} 
;;    total ref usage 326{176d,140u,10e} in 109{109 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 17 [flags] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 5 di [ A ])) "game_of_life.c":130:55 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ A ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":130:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])
        (reg:SI 1 dx [ M ])) "game_of_life.c":130:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ M ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 11 2 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":132:9 75 {*movsi_internal}
     (nil))
(insn 11 8 12 2 (parallel [
            (set (reg:SI 137)
                (lshiftrt:SI (reg:SI 136)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:9 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 138)
                (plus:SI (reg:SI 137)
                    (reg:SI 136)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg:SI 136)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 139)
                (ashiftrt:SI (reg:SI 138)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:9 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (set (reg:SI 82 [ _1 ])
        (reg:SI 139)) "game_of_life.c":132:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 139)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "game_of_life.c":132:9 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 84 [ _3 ])
                (ashift:DI (reg:DI 83 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":132:6 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (reg/f:DI 140)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 84 [ _3 ]))
                    (nil))))))
(insn 19 18 20 2 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (reg/f:DI 85 [ _4 ]) [4 *_4+0 S8 A64])) "game_of_life.c":132:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(insn 20 19 23 2 (set (reg:SI 141)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":132:16 75 {*movsi_internal}
     (nil))
(insn 23 20 24 2 (parallel [
            (set (reg:SI 142)
                (lshiftrt:SI (reg:SI 141)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:16 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg:SI 143)
                (plus:SI (reg:SI 142)
                    (reg:SI 141)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg:SI 141)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 25 24 26 2 (parallel [
            (set (reg:SI 144)
                (ashiftrt:SI (reg:SI 143)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:16 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 87 [ _6 ])
        (reg:SI 144)) "game_of_life.c":132:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 144)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 88 [ _7 ])
        (sign_extend:DI (reg:SI 87 [ _6 ]))) "game_of_life.c":132:16 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _6 ])
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 89 [ _8 ])
                (ashift:DI (reg:DI 88 [ _7 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:13 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 90 [ _9 ])
                (plus:DI (reg/f:DI 86 [ _5 ])
                    (reg:DI 89 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":132:13 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
        (expr_list:REG_DEAD (reg/f:DI 86 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 30 29 31 2 (set (mem:SI (reg/f:DI 90 [ _9 ]) [2 *_9+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":132:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
        (nil)))
(insn 31 30 34 2 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":133:10 75 {*movsi_internal}
     (nil))
(insn 34 31 35 2 (parallel [
            (set (reg:SI 146)
                (lshiftrt:SI (reg:SI 145)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 2 (parallel [
            (set (reg:SI 147)
                (plus:SI (reg:SI 146)
                    (reg:SI 145)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg:SI 145)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 36 35 37 2 (parallel [
            (set (reg:SI 148)
                (ashiftrt:SI (reg:SI 147)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 2 (set (reg:SI 91 [ _10 ])
        (reg:SI 148)) "game_of_life.c":133:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 148)
        (nil)))
(insn 38 37 39 2 (set (reg:DI 92 [ _11 ])
        (sign_extend:DI (reg:SI 91 [ _10 ]))) "game_of_life.c":133:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _10 ])
        (nil)))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 93 [ _12 ])
                (plus:DI (reg:DI 92 [ _11 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 2 (parallel [
            (set (reg:DI 94 [ _13 ])
                (ashift:DI (reg:DI 93 [ _12 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 2 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":133:6 74 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 95 [ _14 ])
                (plus:DI (reg:DI 94 [ _13 ])
                    (reg/f:DI 149)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 149)
        (expr_list:REG_DEAD (reg:DI 94 [ _13 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 94 [ _13 ]))
                    (nil))))))
(insn 43 42 44 2 (set (reg/f:DI 96 [ _15 ])
        (mem/f:DI (reg/f:DI 95 [ _14 ]) [4 *_14+0 S8 A64])) "game_of_life.c":133:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _14 ])
        (nil)))
(insn 44 43 47 2 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":133:23 75 {*movsi_internal}
     (nil))
(insn 47 44 48 2 (parallel [
            (set (reg:SI 151)
                (lshiftrt:SI (reg:SI 150)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 2 (parallel [
            (set (reg:SI 152)
                (plus:SI (reg:SI 151)
                    (reg:SI 150)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg:SI 150)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 48 50 2 (parallel [
            (set (reg:SI 153)
                (ashiftrt:SI (reg:SI 152)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 2 (set (reg:SI 97 [ _16 ])
        (reg:SI 153)) "game_of_life.c":133:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
(insn 51 50 52 2 (set (reg:DI 98 [ _17 ])
        (sign_extend:DI (reg:SI 97 [ _16 ]))) "game_of_life.c":133:23 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ _16 ])
        (nil)))
(insn 52 51 53 2 (parallel [
            (set (reg:DI 99 [ _18 ])
                (ashift:DI (reg:DI 98 [ _17 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 98 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 100 [ _19 ])
                (plus:DI (reg:DI 99 [ _18 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 55 2 (parallel [
            (set (reg/f:DI 101 [ _20 ])
                (plus:DI (reg/f:DI 96 [ _15 ])
                    (reg:DI 100 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":133:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ _19 ])
        (expr_list:REG_DEAD (reg/f:DI 96 [ _15 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 54 56 2 (set (mem:SI (reg/f:DI 101 [ _20 ]) [2 *_20+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":133:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _20 ])
        (nil)))
(insn 56 55 59 2 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":134:10 75 {*movsi_internal}
     (nil))
(insn 59 56 60 2 (parallel [
            (set (reg:SI 155)
                (lshiftrt:SI (reg:SI 154)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 61 2 (parallel [
            (set (reg:SI 156)
                (plus:SI (reg:SI 155)
                    (reg:SI 154)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg:SI 154)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 61 60 62 2 (parallel [
            (set (reg:SI 157)
                (ashiftrt:SI (reg:SI 156)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 2 (set (reg:SI 102 [ _21 ])
        (reg:SI 157)) "game_of_life.c":134:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 157)
        (nil)))
(insn 63 62 64 2 (set (reg:DI 103 [ _22 ])
        (sign_extend:DI (reg:SI 102 [ _21 ]))) "game_of_life.c":134:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 102 [ _21 ])
        (nil)))
(insn 64 63 65 2 (parallel [
            (set (reg:DI 104 [ _23 ])
                (plus:DI (reg:DI 103 [ _22 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 2 (parallel [
            (set (reg:DI 105 [ _24 ])
                (ashift:DI (reg:DI 104 [ _23 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 2 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":134:6 74 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (parallel [
            (set (reg/f:DI 106 [ _25 ])
                (plus:DI (reg:DI 105 [ _24 ])
                    (reg/f:DI 158)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 158)
        (expr_list:REG_DEAD (reg:DI 105 [ _24 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 105 [ _24 ]))
                    (nil))))))
(insn 68 67 69 2 (set (reg/f:DI 107 [ _26 ])
        (mem/f:DI (reg/f:DI 106 [ _25 ]) [4 *_25+0 S8 A64])) "game_of_life.c":134:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _25 ])
        (nil)))
(insn 69 68 72 2 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":134:23 75 {*movsi_internal}
     (nil))
(insn 72 69 73 2 (parallel [
            (set (reg:SI 160)
                (lshiftrt:SI (reg:SI 159)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 2 (parallel [
            (set (reg:SI 161)
                (plus:SI (reg:SI 160)
                    (reg:SI 159)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg:SI 159)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 74 73 75 2 (parallel [
            (set (reg:SI 162)
                (ashiftrt:SI (reg:SI 161)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 2 (set (reg:SI 108 [ _27 ])
        (reg:SI 162)) "game_of_life.c":134:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 162)
        (nil)))
(insn 76 75 77 2 (set (reg:DI 109 [ _28 ])
        (sign_extend:DI (reg:SI 108 [ _27 ]))) "game_of_life.c":134:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _27 ])
        (nil)))
(insn 77 76 78 2 (parallel [
            (set (reg:DI 110 [ _29 ])
                (plus:DI (reg:DI 109 [ _28 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 2 (parallel [
            (set (reg:DI 111 [ _30 ])
                (ashift:DI (reg:DI 110 [ _29 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 78 80 2 (parallel [
            (set (reg/f:DI 112 [ _31 ])
                (plus:DI (reg/f:DI 107 [ _26 ])
                    (reg:DI 111 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":134:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _30 ])
        (expr_list:REG_DEAD (reg/f:DI 107 [ _26 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 80 79 81 2 (set (mem:SI (reg/f:DI 112 [ _31 ]) [2 *_31+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":134:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ _31 ])
        (nil)))
(insn 81 80 84 2 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":135:10 75 {*movsi_internal}
     (nil))
(insn 84 81 85 2 (parallel [
            (set (reg:SI 164)
                (lshiftrt:SI (reg:SI 163)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 2 (parallel [
            (set (reg:SI 165)
                (plus:SI (reg:SI 164)
                    (reg:SI 163)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg:SI 163)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 86 85 87 2 (parallel [
            (set (reg:SI 166)
                (ashiftrt:SI (reg:SI 165)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 165)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 2 (set (reg:SI 113 [ _32 ])
        (reg:SI 166)) "game_of_life.c":135:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 88 87 89 2 (set (reg:DI 114 [ _33 ])
        (sign_extend:DI (reg:SI 113 [ _32 ]))) "game_of_life.c":135:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113 [ _32 ])
        (nil)))
(insn 89 88 90 2 (parallel [
            (set (reg:DI 115 [ _34 ])
                (plus:DI (reg:DI 114 [ _33 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 2 (parallel [
            (set (reg:DI 116 [ _35 ])
                (ashift:DI (reg:DI 115 [ _34 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 2 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":135:6 74 {*movdi_internal}
     (nil))
(insn 92 91 93 2 (parallel [
            (set (reg/f:DI 117 [ _36 ])
                (plus:DI (reg:DI 116 [ _35 ])
                    (reg/f:DI 167)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 167)
        (expr_list:REG_DEAD (reg:DI 116 [ _35 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 116 [ _35 ]))
                    (nil))))))
(insn 93 92 94 2 (set (reg/f:DI 118 [ _37 ])
        (mem/f:DI (reg/f:DI 117 [ _36 ]) [4 *_36+0 S8 A64])) "game_of_life.c":135:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ _36 ])
        (nil)))
(insn 94 93 97 2 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":135:23 75 {*movsi_internal}
     (nil))
(insn 97 94 98 2 (parallel [
            (set (reg:SI 169)
                (lshiftrt:SI (reg:SI 168)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 2 (parallel [
            (set (reg:SI 170)
                (plus:SI (reg:SI 169)
                    (reg:SI 168)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg:SI 168)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 99 98 100 2 (parallel [
            (set (reg:SI 171)
                (ashiftrt:SI (reg:SI 170)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 2 (set (reg:SI 119 [ _38 ])
        (reg:SI 171)) "game_of_life.c":135:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(insn 101 100 102 2 (set (reg:DI 120 [ _39 ])
        (sign_extend:DI (reg:SI 119 [ _38 ]))) "game_of_life.c":135:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119 [ _38 ])
        (nil)))
(insn 102 101 103 2 (parallel [
            (set (reg:DI 121 [ _40 ])
                (plus:DI (reg:DI 120 [ _39 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _39 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 2 (parallel [
            (set (reg:DI 122 [ _41 ])
                (ashift:DI (reg:DI 121 [ _40 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 2 (parallel [
            (set (reg/f:DI 123 [ _42 ])
                (plus:DI (reg/f:DI 118 [ _37 ])
                    (reg:DI 122 [ _41 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":135:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _41 ])
        (expr_list:REG_DEAD (reg/f:DI 118 [ _37 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 105 104 106 2 (set (mem:SI (reg/f:DI 123 [ _42 ]) [2 *_42+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":135:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ _42 ])
        (nil)))
(insn 106 105 109 2 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":136:10 75 {*movsi_internal}
     (nil))
(insn 109 106 110 2 (parallel [
            (set (reg:SI 173)
                (lshiftrt:SI (reg:SI 172)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 109 111 2 (parallel [
            (set (reg:SI 174)
                (plus:SI (reg:SI 173)
                    (reg:SI 172)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_DEAD (reg:SI 172)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 111 110 112 2 (parallel [
            (set (reg:SI 175)
                (ashiftrt:SI (reg:SI 174)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 112 111 113 2 (set (reg:SI 124 [ _43 ])
        (reg:SI 175)) "game_of_life.c":136:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 175)
        (nil)))
(insn 113 112 114 2 (set (reg:DI 125 [ _44 ])
        (sign_extend:DI (reg:SI 124 [ _43 ]))) "game_of_life.c":136:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 124 [ _43 ])
        (nil)))
(insn 114 113 115 2 (parallel [
            (set (reg:DI 126 [ _45 ])
                (plus:DI (reg:DI 125 [ _44 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 125 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 2 (parallel [
            (set (reg:DI 127 [ _46 ])
                (ashift:DI (reg:DI 126 [ _45 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 126 [ _45 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 116 115 117 2 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":136:6 74 {*movdi_internal}
     (nil))
(insn 117 116 118 2 (parallel [
            (set (reg/f:DI 128 [ _47 ])
                (plus:DI (reg:DI 127 [ _46 ])
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 176)
        (expr_list:REG_DEAD (reg:DI 127 [ _46 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 127 [ _46 ]))
                    (nil))))))
(insn 118 117 119 2 (set (reg/f:DI 129 [ _48 ])
        (mem/f:DI (reg/f:DI 128 [ _47 ]) [4 *_47+0 S8 A64])) "game_of_life.c":136:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ _47 ])
        (nil)))
(insn 119 118 122 2 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":136:22 75 {*movsi_internal}
     (nil))
(insn 122 119 123 2 (parallel [
            (set (reg:SI 178)
                (lshiftrt:SI (reg:SI 177)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:22 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 123 122 124 2 (parallel [
            (set (reg:SI 179)
                (plus:SI (reg:SI 178)
                    (reg:SI 177)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:22 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg:SI 177)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 124 123 125 2 (parallel [
            (set (reg:SI 180)
                (ashiftrt:SI (reg:SI 179)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:22 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 125 124 126 2 (set (reg:SI 130 [ _49 ])
        (reg:SI 180)) "game_of_life.c":136:22 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 180)
        (nil)))
(insn 126 125 127 2 (set (reg:DI 131 [ _50 ])
        (sign_extend:DI (reg:SI 130 [ _49 ]))) "game_of_life.c":136:22 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 130 [ _49 ])
        (nil)))
(insn 127 126 128 2 (parallel [
            (set (reg:DI 132 [ _51 ])
                (ashift:DI (reg:DI 131 [ _50 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 131 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 128 127 129 2 (parallel [
            (set (reg/f:DI 133 [ _52 ])
                (plus:DI (reg/f:DI 129 [ _48 ])
                    (reg:DI 132 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":136:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _51 ])
        (expr_list:REG_DEAD (reg/f:DI 129 [ _48 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 129 128 130 2 (set (mem:SI (reg/f:DI 133 [ _52 ]) [2 *_52+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":136:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ _52 ])
        (nil)))
(insn 130 129 133 2 (set (reg/f:DI 134 [ _62 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":138:12 74 {*movdi_internal}
     (nil))
(insn 133 130 137 2 (set (reg/f:DI 135 [ <retval> ])
        (reg/f:DI 134 [ _62 ])) "game_of_life.c":138:12 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ _62 ])
        (nil)))
(insn 137 133 138 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 135 [ <retval> ])) "game_of_life.c":139:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ <retval> ])
        (nil)))
(insn 138 137 0 2 (use (reg/i:DI 0 ax)) "game_of_life.c":139:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_init_life4 (dynamic_array_init_life4, funcdef_no=14, decl_uid=4952, cgraph_uid=15, symbol_order=14)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r194,l0) best AREG, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r194,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a4(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a5(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a6(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a7(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a8(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a9(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a10(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a11(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a12(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a13(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a14(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a15(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a16(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a17(r228,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a18(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a19(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a20(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a21(r227,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a22(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a23(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a24(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a25(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a26(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a27(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a28(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a29(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a30(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a31(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a32(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a33(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a34(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a35(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a36(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a37(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a38(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a39(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a40(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a41(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a42(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a43(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a44(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a45(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a46(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a47(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a48(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a49(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a50(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a51(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a52(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a53(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a54(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a55(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a56(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a57(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a58(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a59(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a60(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a61(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a62(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a63(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a64(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a65(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a66(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a67(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a68(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a69(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a70(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a71(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a72(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a73(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a74(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a75(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a76(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a77(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a78(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a79(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a80(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a81(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a82(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a83(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a84(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a85(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a86(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a87(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a88(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a89(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a90(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a91(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a92(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a93(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a94(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a95(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a96(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a97(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a98(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a99(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a100(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a101(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a102(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a103(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a104(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a105(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a106(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a107(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a108(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a109(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a110(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a111(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a112(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a113(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a114(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a115(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a116(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a117(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a118(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a119(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a120(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a121(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a122(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a123(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a124(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a125(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a126(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a127(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a128(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a129(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a130(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a131(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a132(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a133(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a134(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a135(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a136(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a137(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a138(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a139(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a140(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a141(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a142(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a143(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a144(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a145(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a146(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a147(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a148(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a149(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000

   Insn 199(l0): point = 0
   Insn 198(l0): point = 2
   Insn 194(l0): point = 4
   Insn 191(l0): point = 6
   Insn 190(l0): point = 8
   Insn 189(l0): point = 10
   Insn 188(l0): point = 12
   Insn 187(l0): point = 14
   Insn 186(l0): point = 16
   Insn 185(l0): point = 18
   Insn 184(l0): point = 20
   Insn 183(l0): point = 22
   Insn 182(l0): point = 24
   Insn 181(l0): point = 26
   Insn 180(l0): point = 28
   Insn 179(l0): point = 30
   Insn 178(l0): point = 32
   Insn 177(l0): point = 34
   Insn 176(l0): point = 36
   Insn 175(l0): point = 38
   Insn 174(l0): point = 40
   Insn 173(l0): point = 42
   Insn 172(l0): point = 44
   Insn 171(l0): point = 46
   Insn 170(l0): point = 48
   Insn 169(l0): point = 50
   Insn 168(l0): point = 52
   Insn 167(l0): point = 54
   Insn 166(l0): point = 56
   Insn 165(l0): point = 58
   Insn 164(l0): point = 60
   Insn 163(l0): point = 62
   Insn 162(l0): point = 64
   Insn 161(l0): point = 66
   Insn 160(l0): point = 68
   Insn 159(l0): point = 70
   Insn 158(l0): point = 72
   Insn 157(l0): point = 74
   Insn 156(l0): point = 76
   Insn 155(l0): point = 78
   Insn 154(l0): point = 80
   Insn 153(l0): point = 82
   Insn 152(l0): point = 84
   Insn 151(l0): point = 86
   Insn 150(l0): point = 88
   Insn 149(l0): point = 90
   Insn 148(l0): point = 92
   Insn 147(l0): point = 94
   Insn 146(l0): point = 96
   Insn 145(l0): point = 98
   Insn 144(l0): point = 100
   Insn 143(l0): point = 102
   Insn 142(l0): point = 104
   Insn 141(l0): point = 106
   Insn 140(l0): point = 108
   Insn 139(l0): point = 110
   Insn 138(l0): point = 112
   Insn 137(l0): point = 114
   Insn 136(l0): point = 116
   Insn 135(l0): point = 118
   Insn 134(l0): point = 120
   Insn 133(l0): point = 122
   Insn 132(l0): point = 124
   Insn 131(l0): point = 126
   Insn 130(l0): point = 128
   Insn 129(l0): point = 130
   Insn 128(l0): point = 132
   Insn 127(l0): point = 134
   Insn 126(l0): point = 136
   Insn 125(l0): point = 138
   Insn 124(l0): point = 140
   Insn 123(l0): point = 142
   Insn 122(l0): point = 144
   Insn 121(l0): point = 146
   Insn 120(l0): point = 148
   Insn 119(l0): point = 150
   Insn 118(l0): point = 152
   Insn 117(l0): point = 154
   Insn 116(l0): point = 156
   Insn 115(l0): point = 158
   Insn 114(l0): point = 160
   Insn 113(l0): point = 162
   Insn 112(l0): point = 164
   Insn 111(l0): point = 166
   Insn 110(l0): point = 168
   Insn 109(l0): point = 170
   Insn 108(l0): point = 172
   Insn 107(l0): point = 174
   Insn 106(l0): point = 176
   Insn 105(l0): point = 178
   Insn 104(l0): point = 180
   Insn 103(l0): point = 182
   Insn 102(l0): point = 184
   Insn 101(l0): point = 186
   Insn 100(l0): point = 188
   Insn 99(l0): point = 190
   Insn 98(l0): point = 192
   Insn 97(l0): point = 194
   Insn 96(l0): point = 196
   Insn 95(l0): point = 198
   Insn 94(l0): point = 200
   Insn 93(l0): point = 202
   Insn 92(l0): point = 204
   Insn 91(l0): point = 206
   Insn 90(l0): point = 208
   Insn 89(l0): point = 210
   Insn 88(l0): point = 212
   Insn 87(l0): point = 214
   Insn 86(l0): point = 216
   Insn 85(l0): point = 218
   Insn 84(l0): point = 220
   Insn 83(l0): point = 222
   Insn 82(l0): point = 224
   Insn 81(l0): point = 226
   Insn 80(l0): point = 228
   Insn 79(l0): point = 230
   Insn 78(l0): point = 232
   Insn 77(l0): point = 234
   Insn 76(l0): point = 236
   Insn 75(l0): point = 238
   Insn 74(l0): point = 240
   Insn 73(l0): point = 242
   Insn 72(l0): point = 244
   Insn 71(l0): point = 246
   Insn 70(l0): point = 248
   Insn 69(l0): point = 250
   Insn 68(l0): point = 252
   Insn 67(l0): point = 254
   Insn 66(l0): point = 256
   Insn 65(l0): point = 258
   Insn 64(l0): point = 260
   Insn 63(l0): point = 262
   Insn 62(l0): point = 264
   Insn 61(l0): point = 266
   Insn 60(l0): point = 268
   Insn 59(l0): point = 270
   Insn 58(l0): point = 272
   Insn 57(l0): point = 274
   Insn 56(l0): point = 276
   Insn 55(l0): point = 278
   Insn 54(l0): point = 280
   Insn 53(l0): point = 282
   Insn 52(l0): point = 284
   Insn 51(l0): point = 286
   Insn 50(l0): point = 288
   Insn 49(l0): point = 290
   Insn 48(l0): point = 292
   Insn 47(l0): point = 294
   Insn 46(l0): point = 296
   Insn 45(l0): point = 298
   Insn 44(l0): point = 300
   Insn 43(l0): point = 302
   Insn 42(l0): point = 304
   Insn 41(l0): point = 306
   Insn 40(l0): point = 308
   Insn 39(l0): point = 310
   Insn 38(l0): point = 312
   Insn 37(l0): point = 314
   Insn 36(l0): point = 316
   Insn 35(l0): point = 318
   Insn 34(l0): point = 320
   Insn 33(l0): point = 322
   Insn 32(l0): point = 324
   Insn 31(l0): point = 326
   Insn 30(l0): point = 328
   Insn 29(l0): point = 330
   Insn 28(l0): point = 332
   Insn 27(l0): point = 334
   Insn 26(l0): point = 336
   Insn 25(l0): point = 338
   Insn 24(l0): point = 340
   Insn 23(l0): point = 342
   Insn 22(l0): point = 344
   Insn 21(l0): point = 346
   Insn 20(l0): point = 348
   Insn 19(l0): point = 350
   Insn 18(l0): point = 352
   Insn 17(l0): point = 354
   Insn 16(l0): point = 356
   Insn 15(l0): point = 358
   Insn 14(l0): point = 360
   Insn 13(l0): point = 362
   Insn 12(l0): point = 364
   Insn 11(l0): point = 366
   Insn 10(l0): point = 368
   Insn 9(l0): point = 370
   Insn 8(l0): point = 372
   Insn 7(l0): point = 374
   Insn 6(l0): point = 376
   Insn 2(l0): point = 378
 a0(r194): [3..4]
 a1(r193): [5..6]
 a2(r192): [9..10]
 a3(r191): [11..12]
 a4(r190): [13..14]
 a5(r231): [15..16]
 a6(r189): [19..20]
 a7(r188): [21..22]
 a8(r187): [23..24]
 a9(r230): [25..26]
 a10(r186): [29..30]
 a11(r185): [31..32]
 a12(r184): [33..34]
 a13(r229): [35..36]
 a14(r183): [39..40]
 a15(r182): [41..42]
 a16(r181): [43..44]
 a17(r228): [45..46]
 a18(r180): [49..50]
 a19(r179): [51..52]
 a20(r178): [53..54]
 a21(r227): [55..56]
 a22(r177): [59..60]
 a23(r176): [61..62]
 a24(r175): [63..64]
 a25(r226): [65..66]
 a26(r174): [69..70]
 a27(r173): [71..72]
 a28(r172): [73..74]
 a29(r225): [75..76]
 a30(r171): [79..80]
 a31(r170): [81..82]
 a32(r169): [83..84]
 a33(r224): [85..86]
 a34(r168): [89..90]
 a35(r167): [91..92]
 a36(r166): [93..94]
 a37(r223): [95..96]
 a38(r165): [99..100]
 a39(r164): [101..102]
 a40(r163): [103..104]
 a41(r222): [105..106]
 a42(r162): [109..110]
 a43(r161): [111..112]
 a44(r160): [113..114]
 a45(r221): [115..116]
 a46(r159): [119..120]
 a47(r158): [121..122]
 a48(r157): [123..124]
 a49(r220): [125..126]
 a50(r156): [129..130]
 a51(r155): [131..132]
 a52(r154): [133..134]
 a53(r219): [135..136]
 a54(r153): [139..140]
 a55(r152): [141..142]
 a56(r151): [143..144]
 a57(r218): [145..146]
 a58(r150): [149..150]
 a59(r149): [151..152]
 a60(r148): [153..154]
 a61(r217): [155..156]
 a62(r147): [159..160]
 a63(r146): [161..162]
 a64(r145): [163..164]
 a65(r216): [165..166]
 a66(r144): [169..170]
 a67(r143): [171..172]
 a68(r142): [173..174]
 a69(r215): [175..176]
 a70(r141): [179..180]
 a71(r140): [181..182]
 a72(r139): [183..184]
 a73(r214): [185..186]
 a74(r138): [189..190]
 a75(r137): [191..192]
 a76(r136): [193..194]
 a77(r213): [195..196]
 a78(r135): [199..200]
 a79(r134): [201..202]
 a80(r133): [203..204]
 a81(r212): [205..206]
 a82(r132): [209..210]
 a83(r131): [211..212]
 a84(r130): [213..214]
 a85(r211): [215..216]
 a86(r129): [219..220]
 a87(r128): [221..222]
 a88(r127): [223..224]
 a89(r210): [225..226]
 a90(r126): [229..230]
 a91(r125): [231..232]
 a92(r124): [233..234]
 a93(r209): [235..236]
 a94(r123): [239..240]
 a95(r122): [241..242]
 a96(r121): [243..244]
 a97(r208): [245..246]
 a98(r120): [249..250]
 a99(r119): [251..252]
 a100(r118): [253..254]
 a101(r207): [255..256]
 a102(r117): [259..260]
 a103(r116): [261..262]
 a104(r115): [263..264]
 a105(r206): [265..266]
 a106(r114): [269..270]
 a107(r113): [271..272]
 a108(r112): [273..274]
 a109(r205): [275..276]
 a110(r111): [279..280]
 a111(r110): [281..282]
 a112(r109): [283..284]
 a113(r204): [285..286]
 a114(r108): [289..290]
 a115(r107): [291..292]
 a116(r106): [293..294]
 a117(r203): [295..296]
 a118(r105): [299..300]
 a119(r104): [301..302]
 a120(r103): [303..304]
 a121(r202): [305..306]
 a122(r102): [309..310]
 a123(r101): [311..312]
 a124(r100): [313..314]
 a125(r201): [315..316]
 a126(r99): [319..320]
 a127(r98): [321..322]
 a128(r97): [323..324]
 a129(r200): [325..326]
 a130(r96): [329..330]
 a131(r95): [331..332]
 a132(r94): [333..334]
 a133(r199): [335..336]
 a134(r93): [339..340]
 a135(r92): [341..342]
 a136(r91): [343..344]
 a137(r198): [345..346]
 a138(r90): [349..350]
 a139(r89): [351..352]
 a140(r88): [353..354]
 a141(r197): [355..356]
 a142(r87): [359..360]
 a143(r86): [361..362]
 a144(r85): [363..364]
 a145(r196): [365..366]
 a146(r84): [369..370]
 a147(r83): [371..372]
 a148(r82): [373..374]
 a149(r195): [375..376]
Compressing live ranges: from 381 to 300 - 78%
Ranges after the compression:
 a0(r194): [0..1]
 a1(r193): [2..3]
 a2(r192): [4..5]
 a3(r191): [6..7]
 a4(r190): [8..9]
 a5(r231): [10..11]
 a6(r189): [12..13]
 a7(r188): [14..15]
 a8(r187): [16..17]
 a9(r230): [18..19]
 a10(r186): [20..21]
 a11(r185): [22..23]
 a12(r184): [24..25]
 a13(r229): [26..27]
 a14(r183): [28..29]
 a15(r182): [30..31]
 a16(r181): [32..33]
 a17(r228): [34..35]
 a18(r180): [36..37]
 a19(r179): [38..39]
 a20(r178): [40..41]
 a21(r227): [42..43]
 a22(r177): [44..45]
 a23(r176): [46..47]
 a24(r175): [48..49]
 a25(r226): [50..51]
 a26(r174): [52..53]
 a27(r173): [54..55]
 a28(r172): [56..57]
 a29(r225): [58..59]
 a30(r171): [60..61]
 a31(r170): [62..63]
 a32(r169): [64..65]
 a33(r224): [66..67]
 a34(r168): [68..69]
 a35(r167): [70..71]
 a36(r166): [72..73]
 a37(r223): [74..75]
 a38(r165): [76..77]
 a39(r164): [78..79]
 a40(r163): [80..81]
 a41(r222): [82..83]
 a42(r162): [84..85]
 a43(r161): [86..87]
 a44(r160): [88..89]
 a45(r221): [90..91]
 a46(r159): [92..93]
 a47(r158): [94..95]
 a48(r157): [96..97]
 a49(r220): [98..99]
 a50(r156): [100..101]
 a51(r155): [102..103]
 a52(r154): [104..105]
 a53(r219): [106..107]
 a54(r153): [108..109]
 a55(r152): [110..111]
 a56(r151): [112..113]
 a57(r218): [114..115]
 a58(r150): [116..117]
 a59(r149): [118..119]
 a60(r148): [120..121]
 a61(r217): [122..123]
 a62(r147): [124..125]
 a63(r146): [126..127]
 a64(r145): [128..129]
 a65(r216): [130..131]
 a66(r144): [132..133]
 a67(r143): [134..135]
 a68(r142): [136..137]
 a69(r215): [138..139]
 a70(r141): [140..141]
 a71(r140): [142..143]
 a72(r139): [144..145]
 a73(r214): [146..147]
 a74(r138): [148..149]
 a75(r137): [150..151]
 a76(r136): [152..153]
 a77(r213): [154..155]
 a78(r135): [156..157]
 a79(r134): [158..159]
 a80(r133): [160..161]
 a81(r212): [162..163]
 a82(r132): [164..165]
 a83(r131): [166..167]
 a84(r130): [168..169]
 a85(r211): [170..171]
 a86(r129): [172..173]
 a87(r128): [174..175]
 a88(r127): [176..177]
 a89(r210): [178..179]
 a90(r126): [180..181]
 a91(r125): [182..183]
 a92(r124): [184..185]
 a93(r209): [186..187]
 a94(r123): [188..189]
 a95(r122): [190..191]
 a96(r121): [192..193]
 a97(r208): [194..195]
 a98(r120): [196..197]
 a99(r119): [198..199]
 a100(r118): [200..201]
 a101(r207): [202..203]
 a102(r117): [204..205]
 a103(r116): [206..207]
 a104(r115): [208..209]
 a105(r206): [210..211]
 a106(r114): [212..213]
 a107(r113): [214..215]
 a108(r112): [216..217]
 a109(r205): [218..219]
 a110(r111): [220..221]
 a111(r110): [222..223]
 a112(r109): [224..225]
 a113(r204): [226..227]
 a114(r108): [228..229]
 a115(r107): [230..231]
 a116(r106): [232..233]
 a117(r203): [234..235]
 a118(r105): [236..237]
 a119(r104): [238..239]
 a120(r103): [240..241]
 a121(r202): [242..243]
 a122(r102): [244..245]
 a123(r101): [246..247]
 a124(r100): [248..249]
 a125(r201): [250..251]
 a126(r99): [252..253]
 a127(r98): [254..255]
 a128(r97): [256..257]
 a129(r200): [258..259]
 a130(r96): [260..261]
 a131(r95): [262..263]
 a132(r94): [264..265]
 a133(r199): [266..267]
 a134(r93): [268..269]
 a135(r92): [270..271]
 a136(r91): [272..273]
 a137(r198): [274..275]
 a138(r90): [276..277]
 a139(r89): [278..279]
 a140(r88): [280..281]
 a141(r197): [282..283]
 a142(r87): [284..285]
 a143(r86): [286..287]
 a144(r85): [288..289]
 a145(r196): [290..291]
 a146(r84): [292..293]
 a147(r83): [294..295]
 a148(r82): [296..297]
 a149(r195): [298..299]
  pref0:a0(r194)<-hr0@1500
  regions=1, blocks=3, points=300
    allocnos=150 (big 0), copies=0, conflicts=0, ranges=150
Disposition:
  148:r82  l0     0  147:r83  l0     0  146:r84  l0     0  144:r85  l0     0
  143:r86  l0     0  142:r87  l0     0  140:r88  l0     0  139:r89  l0     0
  138:r90  l0     0  136:r91  l0     0  135:r92  l0     0  134:r93  l0     0
  132:r94  l0     0  131:r95  l0     0  130:r96  l0     0  128:r97  l0     0
  127:r98  l0     0  126:r99  l0     0  124:r100 l0     0  123:r101 l0     0
  122:r102 l0     0  120:r103 l0     0  119:r104 l0     0  118:r105 l0     0
  116:r106 l0     0  115:r107 l0     0  114:r108 l0     0  112:r109 l0     0
  111:r110 l0     0  110:r111 l0     0  108:r112 l0     0  107:r113 l0     0
  106:r114 l0     0  104:r115 l0     0  103:r116 l0     0  102:r117 l0     0
  100:r118 l0     0   99:r119 l0     0   98:r120 l0     0   96:r121 l0     0
   95:r122 l0     0   94:r123 l0     0   92:r124 l0     0   91:r125 l0     0
   90:r126 l0     0   88:r127 l0     0   87:r128 l0     0   86:r129 l0     0
   84:r130 l0     0   83:r131 l0     0   82:r132 l0     0   80:r133 l0     0
   79:r134 l0     0   78:r135 l0     0   76:r136 l0     0   75:r137 l0     0
   74:r138 l0     0   72:r139 l0     0   71:r140 l0     0   70:r141 l0     0
   68:r142 l0     0   67:r143 l0     0   66:r144 l0     0   64:r145 l0     0
   63:r146 l0     0   62:r147 l0     0   60:r148 l0     0   59:r149 l0     0
   58:r150 l0     0   56:r151 l0     0   55:r152 l0     0   54:r153 l0     0
   52:r154 l0     0   51:r155 l0     0   50:r156 l0     0   48:r157 l0     0
   47:r158 l0     0   46:r159 l0     0   44:r160 l0     0   43:r161 l0     0
   42:r162 l0     0   40:r163 l0     0   39:r164 l0     0   38:r165 l0     0
   36:r166 l0     0   35:r167 l0     0   34:r168 l0     0   32:r169 l0     0
   31:r170 l0     0   30:r171 l0     0   28:r172 l0     0   27:r173 l0     0
   26:r174 l0     0   24:r175 l0     0   23:r176 l0     0   22:r177 l0     0
   20:r178 l0     0   19:r179 l0     0   18:r180 l0     0   16:r181 l0     0
   15:r182 l0     0   14:r183 l0     0   12:r184 l0     0   11:r185 l0     0
   10:r186 l0     0    8:r187 l0     0    7:r188 l0     0    6:r189 l0     0
    4:r190 l0     0    3:r191 l0     0    2:r192 l0     0    1:r193 l0     0
    0:r194 l0     0  149:r195 l0     0  145:r196 l0     0  141:r197 l0     0
  137:r198 l0     0  133:r199 l0     0  129:r200 l0     0  125:r201 l0     0
  121:r202 l0     0  117:r203 l0     0  113:r204 l0     0  109:r205 l0     0
  105:r206 l0     0  101:r207 l0     0   97:r208 l0     0   93:r209 l0     0
   89:r210 l0     0   85:r211 l0     0   81:r212 l0     0   77:r213 l0     0
   73:r214 l0     0   69:r215 l0     0   65:r216 l0     0   61:r217 l0     0
   57:r218 l0     0   53:r219 l0     0   49:r220 l0     0   45:r221 l0     0
   41:r222 l0     0   37:r223 l0     0   33:r224 l0     0   29:r225 l0     0
   25:r226 l0     0   21:r227 l0     0   17:r228 l0     0   13:r229 l0     0
    9:r230 l0     0    5:r231 l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_init_life4

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={74d} r19={1d,41u,37e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} 
;;    total ref usage 480{244d,199u,37e} in 190{190 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 17 [flags] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 5 di [ A ])) "game_of_life.c":141:41 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ A ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":143:6 74 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (parallel [
            (set (reg/f:DI 82 [ _1 ])
                (plus:DI (reg/f:DI 195)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":143:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 48 [0x30]))
                (nil)))))
(insn 8 7 9 2 (set (reg/f:DI 83 [ _2 ])
        (mem/f:DI (reg/f:DI 82 [ _1 ]) [4 *_1+0 S8 A64])) "game_of_life.c":143:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 82 [ _1 ])
        (nil)))
(insn 9 8 10 2 (parallel [
            (set (reg/f:DI 84 [ _3 ])
                (plus:DI (reg/f:DI 83 [ _2 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":143:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 10 9 11 2 (set (mem:SI (reg/f:DI 84 [ _3 ]) [2 *_3+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":143:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":144:6 74 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg/f:DI 196)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":144:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 196)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 48 [0x30]))
                (nil)))))
(insn 13 12 14 2 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (reg/f:DI 85 [ _4 ]) [4 *_4+0 S8 A64])) "game_of_life.c":144:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 87 [ _6 ])
                (plus:DI (reg/f:DI 86 [ _5 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":144:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 86 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 2 (set (mem:SI (reg/f:DI 87 [ _6 ]) [2 *_6+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":144:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ _6 ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":145:6 74 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg/f:DI 197)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":145:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 197)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 18 17 19 2 (set (reg/f:DI 89 [ _8 ])
        (mem/f:DI (reg/f:DI 88 [ _7 ]) [4 *_7+0 S8 A64])) "game_of_life.c":145:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
        (nil)))
(insn 19 18 20 2 (parallel [
            (set (reg/f:DI 90 [ _9 ])
                (plus:DI (reg/f:DI 89 [ _8 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":145:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 89 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 20 19 21 2 (set (mem:SI (reg/f:DI 90 [ _9 ]) [2 *_9+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":145:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":146:6 74 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 91 [ _10 ])
                (plus:DI (reg/f:DI 198)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":146:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 198)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 23 22 24 2 (set (reg/f:DI 92 [ _11 ])
        (mem/f:DI (reg/f:DI 91 [ _10 ]) [4 *_10+0 S8 A64])) "game_of_life.c":146:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _10 ])
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg/f:DI 93 [ _12 ])
                (plus:DI (reg/f:DI 92 [ _11 ])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":146:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 2 (set (mem:SI (reg/f:DI 93 [ _12 ]) [2 *_12+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":146:13 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _12 ])
        (nil)))
(insn 26 25 27 2 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":147:6 74 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 94 [ _13 ])
                (plus:DI (reg/f:DI 199)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":147:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 199)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 16 [0x10]))
                (nil)))))
(insn 28 27 29 2 (set (reg/f:DI 95 [ _14 ])
        (mem/f:DI (reg/f:DI 94 [ _13 ]) [4 *_13+0 S8 A64])) "game_of_life.c":147:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _13 ])
        (nil)))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 96 [ _15 ])
                (plus:DI (reg/f:DI 95 [ _14 ])
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":147:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _14 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 30 29 31 2 (set (mem:SI (reg/f:DI 96 [ _15 ]) [2 *_15+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":147:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _15 ])
        (nil)))
(insn 31 30 32 2 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":148:6 74 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:DI 97 [ _16 ])
                (plus:DI (reg/f:DI 200)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":148:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 200)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 33 32 34 2 (set (reg/f:DI 98 [ _17 ])
        (mem/f:DI (reg/f:DI 97 [ _16 ]) [4 *_16+0 S8 A64])) "game_of_life.c":148:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _16 ])
        (nil)))
(insn 34 33 35 2 (parallel [
            (set (reg/f:DI 99 [ _18 ])
                (plus:DI (reg/f:DI 98 [ _17 ])
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":148:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 98 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 35 34 36 2 (set (mem:SI (reg/f:DI 99 [ _18 ]) [2 *_18+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":148:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ _18 ])
        (nil)))
(insn 36 35 37 2 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":149:6 74 {*movdi_internal}
     (nil))
(insn 37 36 38 2 (parallel [
            (set (reg/f:DI 100 [ _19 ])
                (plus:DI (reg/f:DI 201)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":149:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 201)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 24 [0x18]))
                (nil)))))
(insn 38 37 39 2 (set (reg/f:DI 101 [ _20 ])
        (mem/f:DI (reg/f:DI 100 [ _19 ]) [4 *_19+0 S8 A64])) "game_of_life.c":149:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _19 ])
        (nil)))
(insn 39 38 40 2 (parallel [
            (set (reg/f:DI 102 [ _21 ])
                (plus:DI (reg/f:DI 101 [ _20 ])
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":149:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _20 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 2 (set (mem:SI (reg/f:DI 102 [ _21 ]) [2 *_21+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":149:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ _21 ])
        (nil)))
(insn 41 40 42 2 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":150:6 74 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 103 [ _22 ])
                (plus:DI (reg/f:DI 202)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":150:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 202)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 43 42 44 2 (set (reg/f:DI 104 [ _23 ])
        (mem/f:DI (reg/f:DI 103 [ _22 ]) [4 *_22+0 S8 A64])) "game_of_life.c":150:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _22 ])
        (nil)))
(insn 44 43 45 2 (parallel [
            (set (reg/f:DI 105 [ _24 ])
                (plus:DI (reg/f:DI 104 [ _23 ])
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":150:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 104 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 45 44 46 2 (set (mem:SI (reg/f:DI 105 [ _24 ]) [2 *_24+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":150:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ _24 ])
        (nil)))
(insn 46 45 47 2 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":151:6 74 {*movdi_internal}
     (nil))
(insn 47 46 48 2 (parallel [
            (set (reg/f:DI 106 [ _25 ])
                (plus:DI (reg/f:DI 203)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":151:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 203)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 48 47 49 2 (set (reg/f:DI 107 [ _26 ])
        (mem/f:DI (reg/f:DI 106 [ _25 ]) [4 *_25+0 S8 A64])) "game_of_life.c":151:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _25 ])
        (nil)))
(insn 49 48 50 2 (parallel [
            (set (reg/f:DI 108 [ _27 ])
                (plus:DI (reg/f:DI 107 [ _26 ])
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":151:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 107 [ _26 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 2 (set (mem:SI (reg/f:DI 108 [ _27 ]) [2 *_27+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":151:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ _27 ])
        (nil)))
(insn 51 50 52 2 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":152:6 74 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (parallel [
            (set (reg/f:DI 109 [ _28 ])
                (plus:DI (reg/f:DI 204)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":152:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 64 [0x40]))
                (nil)))))
(insn 53 52 54 2 (set (reg/f:DI 110 [ _29 ])
        (mem/f:DI (reg/f:DI 109 [ _28 ]) [4 *_28+0 S8 A64])) "game_of_life.c":152:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ _28 ])
        (nil)))
(insn 54 53 55 2 (parallel [
            (set (reg/f:DI 111 [ _30 ])
                (plus:DI (reg/f:DI 110 [ _29 ])
                    (const_int 104 [0x68])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":152:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 110 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 55 54 56 2 (set (mem:SI (reg/f:DI 111 [ _30 ]) [2 *_30+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":152:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ _30 ])
        (nil)))
(insn 56 55 57 2 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":153:6 74 {*movdi_internal}
     (nil))
(insn 57 56 58 2 (parallel [
            (set (reg/f:DI 112 [ _31 ])
                (plus:DI (reg/f:DI 205)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":153:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 205)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 40 [0x28]))
                (nil)))))
(insn 58 57 59 2 (set (reg/f:DI 113 [ _32 ])
        (mem/f:DI (reg/f:DI 112 [ _31 ]) [4 *_31+0 S8 A64])) "game_of_life.c":153:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ _31 ])
        (nil)))
(insn 59 58 60 2 (parallel [
            (set (reg/f:DI 114 [ _33 ])
                (plus:DI (reg/f:DI 113 [ _32 ])
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":153:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 113 [ _32 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 60 59 61 2 (set (mem:SI (reg/f:DI 114 [ _33 ]) [2 *_33+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":153:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ _33 ])
        (nil)))
(insn 61 60 62 2 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":154:6 74 {*movdi_internal}
     (nil))
(insn 62 61 63 2 (parallel [
            (set (reg/f:DI 115 [ _34 ])
                (plus:DI (reg/f:DI 206)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":154:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 206)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 63 62 64 2 (set (reg/f:DI 116 [ _35 ])
        (mem/f:DI (reg/f:DI 115 [ _34 ]) [4 *_34+0 S8 A64])) "game_of_life.c":154:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ _34 ])
        (nil)))
(insn 64 63 65 2 (parallel [
            (set (reg/f:DI 117 [ _36 ])
                (plus:DI (reg/f:DI 116 [ _35 ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":154:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 116 [ _35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 2 (set (mem:SI (reg/f:DI 117 [ _36 ]) [2 *_36+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":154:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ _36 ])
        (nil)))
(insn 66 65 67 2 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":155:6 74 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (parallel [
            (set (reg/f:DI 118 [ _37 ])
                (plus:DI (reg/f:DI 207)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":155:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 207)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 68 67 69 2 (set (reg/f:DI 119 [ _38 ])
        (mem/f:DI (reg/f:DI 118 [ _37 ]) [4 *_37+0 S8 A64])) "game_of_life.c":155:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ _37 ])
        (nil)))
(insn 69 68 70 2 (parallel [
            (set (reg/f:DI 120 [ _39 ])
                (plus:DI (reg/f:DI 119 [ _38 ])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":155:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 119 [ _38 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 2 (set (mem:SI (reg/f:DI 120 [ _39 ]) [2 *_39+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":155:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ _39 ])
        (nil)))
(insn 71 70 72 2 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":156:6 74 {*movdi_internal}
     (nil))
(insn 72 71 73 2 (parallel [
            (set (reg/f:DI 121 [ _40 ])
                (plus:DI (reg/f:DI 208)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":156:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 208)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 73 72 74 2 (set (reg/f:DI 122 [ _41 ])
        (mem/f:DI (reg/f:DI 121 [ _40 ]) [4 *_40+0 S8 A64])) "game_of_life.c":156:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ _40 ])
        (nil)))
(insn 74 73 75 2 (parallel [
            (set (reg/f:DI 123 [ _42 ])
                (plus:DI (reg/f:DI 122 [ _41 ])
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":156:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 122 [ _41 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 2 (set (mem:SI (reg/f:DI 123 [ _42 ]) [2 *_42+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":156:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ _42 ])
        (nil)))
(insn 76 75 77 2 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":157:6 74 {*movdi_internal}
     (nil))
(insn 77 76 78 2 (parallel [
            (set (reg/f:DI 124 [ _43 ])
                (plus:DI (reg/f:DI 209)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":157:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 209)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 78 77 79 2 (set (reg/f:DI 125 [ _44 ])
        (mem/f:DI (reg/f:DI 124 [ _43 ]) [4 *_43+0 S8 A64])) "game_of_life.c":157:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 124 [ _43 ])
        (nil)))
(insn 79 78 80 2 (parallel [
            (set (reg/f:DI 126 [ _45 ])
                (plus:DI (reg/f:DI 125 [ _44 ])
                    (const_int 92 [0x5c])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":157:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 125 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 80 79 81 2 (set (mem:SI (reg/f:DI 126 [ _45 ]) [2 *_45+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":157:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ _45 ])
        (nil)))
(insn 81 80 82 2 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":158:6 74 {*movdi_internal}
     (nil))
(insn 82 81 83 2 (parallel [
            (set (reg/f:DI 127 [ _46 ])
                (plus:DI (reg/f:DI 210)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":158:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 210)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 40 [0x28]))
                (nil)))))
(insn 83 82 84 2 (set (reg/f:DI 128 [ _47 ])
        (mem/f:DI (reg/f:DI 127 [ _46 ]) [4 *_46+0 S8 A64])) "game_of_life.c":158:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ _46 ])
        (nil)))
(insn 84 83 85 2 (parallel [
            (set (reg/f:DI 129 [ _48 ])
                (plus:DI (reg/f:DI 128 [ _47 ])
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":158:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 128 [ _47 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 2 (set (mem:SI (reg/f:DI 129 [ _48 ]) [2 *_48+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":158:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ _48 ])
        (nil)))
(insn 86 85 87 2 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":159:6 74 {*movdi_internal}
     (nil))
(insn 87 86 88 2 (parallel [
            (set (reg/f:DI 130 [ _49 ])
                (plus:DI (reg/f:DI 211)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":159:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 211)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 40 [0x28]))
                (nil)))))
(insn 88 87 89 2 (set (reg/f:DI 131 [ _50 ])
        (mem/f:DI (reg/f:DI 130 [ _49 ]) [4 *_49+0 S8 A64])) "game_of_life.c":159:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130 [ _49 ])
        (nil)))
(insn 89 88 90 2 (parallel [
            (set (reg/f:DI 132 [ _51 ])
                (plus:DI (reg/f:DI 131 [ _50 ])
                    (const_int 92 [0x5c])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":159:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 2 (set (mem:SI (reg/f:DI 132 [ _51 ]) [2 *_51+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":159:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ _51 ])
        (nil)))
(insn 91 90 92 2 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":160:6 74 {*movdi_internal}
     (nil))
(insn 92 91 93 2 (parallel [
            (set (reg/f:DI 133 [ _52 ])
                (plus:DI (reg/f:DI 212)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":160:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 212)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 48 [0x30]))
                (nil)))))
(insn 93 92 94 2 (set (reg/f:DI 134 [ _53 ])
        (mem/f:DI (reg/f:DI 133 [ _52 ]) [4 *_52+0 S8 A64])) "game_of_life.c":160:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ _52 ])
        (nil)))
(insn 94 93 95 2 (parallel [
            (set (reg/f:DI 135 [ _54 ])
                (plus:DI (reg/f:DI 134 [ _53 ])
                    (const_int 88 [0x58])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":160:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 134 [ _53 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 95 94 96 2 (set (mem:SI (reg/f:DI 135 [ _54 ]) [2 *_54+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":160:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ _54 ])
        (nil)))
(insn 96 95 97 2 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":161:6 74 {*movdi_internal}
     (nil))
(insn 97 96 98 2 (parallel [
            (set (reg/f:DI 136 [ _55 ])
                (plus:DI (reg/f:DI 213)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":161:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 48 [0x30]))
                (nil)))))
(insn 98 97 99 2 (set (reg/f:DI 137 [ _56 ])
        (mem/f:DI (reg/f:DI 136 [ _55 ]) [4 *_55+0 S8 A64])) "game_of_life.c":161:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136 [ _55 ])
        (nil)))
(insn 99 98 100 2 (parallel [
            (set (reg/f:DI 138 [ _57 ])
                (plus:DI (reg/f:DI 137 [ _56 ])
                    (const_int 92 [0x5c])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":161:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 137 [ _56 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 2 (set (mem:SI (reg/f:DI 138 [ _57 ]) [2 *_57+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":161:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ _57 ])
        (nil)))
(insn 101 100 102 2 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":162:6 74 {*movdi_internal}
     (nil))
(insn 102 101 103 2 (parallel [
            (set (reg/f:DI 139 [ _58 ])
                (plus:DI (reg/f:DI 214)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":162:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 214)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 48 [0x30]))
                (nil)))))
(insn 103 102 104 2 (set (reg/f:DI 140 [ _59 ])
        (mem/f:DI (reg/f:DI 139 [ _58 ]) [4 *_58+0 S8 A64])) "game_of_life.c":162:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ _58 ])
        (nil)))
(insn 104 103 105 2 (parallel [
            (set (reg/f:DI 141 [ _60 ])
                (plus:DI (reg/f:DI 140 [ _59 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":162:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 140 [ _59 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 2 (set (mem:SI (reg/f:DI 141 [ _60 ]) [2 *_60+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":162:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141 [ _60 ])
        (nil)))
(insn 106 105 107 2 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":163:6 74 {*movdi_internal}
     (nil))
(insn 107 106 108 2 (parallel [
            (set (reg/f:DI 142 [ _61 ])
                (plus:DI (reg/f:DI 215)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":163:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 215)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 40 [0x28]))
                (nil)))))
(insn 108 107 109 2 (set (reg/f:DI 143 [ _62 ])
        (mem/f:DI (reg/f:DI 142 [ _61 ]) [4 *_61+0 S8 A64])) "game_of_life.c":163:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 142 [ _61 ])
        (nil)))
(insn 109 108 110 2 (parallel [
            (set (reg/f:DI 144 [ _63 ])
                (plus:DI (reg/f:DI 143 [ _62 ])
                    (const_int 68 [0x44])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":163:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 143 [ _62 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 110 109 111 2 (set (mem:SI (reg/f:DI 144 [ _63 ]) [2 *_63+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":163:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ _63 ])
        (nil)))
(insn 111 110 112 2 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":164:6 74 {*movdi_internal}
     (nil))
(insn 112 111 113 2 (parallel [
            (set (reg/f:DI 145 [ _64 ])
                (plus:DI (reg/f:DI 216)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":164:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 216)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 48 [0x30]))
                (nil)))))
(insn 113 112 114 2 (set (reg/f:DI 146 [ _65 ])
        (mem/f:DI (reg/f:DI 145 [ _64 ]) [4 *_64+0 S8 A64])) "game_of_life.c":164:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145 [ _64 ])
        (nil)))
(insn 114 113 115 2 (parallel [
            (set (reg/f:DI 147 [ _66 ])
                (plus:DI (reg/f:DI 146 [ _65 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":164:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 146 [ _65 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 2 (set (mem:SI (reg/f:DI 147 [ _66 ]) [2 *_66+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":164:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147 [ _66 ])
        (nil)))
(insn 116 115 117 2 (set (reg/f:DI 217)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":165:6 74 {*movdi_internal}
     (nil))
(insn 117 116 118 2 (parallel [
            (set (reg/f:DI 148 [ _67 ])
                (plus:DI (reg/f:DI 217)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":165:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 217)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 118 117 119 2 (set (reg/f:DI 149 [ _68 ])
        (mem/f:DI (reg/f:DI 148 [ _67 ]) [4 *_67+0 S8 A64])) "game_of_life.c":165:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ _67 ])
        (nil)))
(insn 119 118 120 2 (parallel [
            (set (reg/f:DI 150 [ _69 ])
                (plus:DI (reg/f:DI 149 [ _68 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":165:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 149 [ _68 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 120 119 121 2 (set (mem:SI (reg/f:DI 150 [ _69 ]) [2 *_69+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":165:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 150 [ _69 ])
        (nil)))
(insn 121 120 122 2 (set (reg/f:DI 218)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":166:6 74 {*movdi_internal}
     (nil))
(insn 122 121 123 2 (parallel [
            (set (reg/f:DI 151 [ _70 ])
                (plus:DI (reg/f:DI 218)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":166:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 218)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 123 122 124 2 (set (reg/f:DI 152 [ _71 ])
        (mem/f:DI (reg/f:DI 151 [ _70 ]) [4 *_70+0 S8 A64])) "game_of_life.c":166:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ _70 ])
        (nil)))
(insn 124 123 125 2 (parallel [
            (set (reg/f:DI 153 [ _72 ])
                (plus:DI (reg/f:DI 152 [ _71 ])
                    (const_int 76 [0x4c])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":166:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 152 [ _71 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 125 124 126 2 (set (mem:SI (reg/f:DI 153 [ _72 ]) [2 *_72+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":166:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 153 [ _72 ])
        (nil)))
(insn 126 125 127 2 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":167:6 74 {*movdi_internal}
     (nil))
(insn 127 126 128 2 (parallel [
            (set (reg/f:DI 154 [ _73 ])
                (plus:DI (reg/f:DI 219)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":167:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 219)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 128 127 129 2 (set (reg/f:DI 155 [ _74 ])
        (mem/f:DI (reg/f:DI 154 [ _73 ]) [4 *_73+0 S8 A64])) "game_of_life.c":167:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154 [ _73 ])
        (nil)))
(insn 129 128 130 2 (parallel [
            (set (reg/f:DI 156 [ _75 ])
                (plus:DI (reg/f:DI 155 [ _74 ])
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":167:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 155 [ _74 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 130 129 131 2 (set (mem:SI (reg/f:DI 156 [ _75 ]) [2 *_75+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":167:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156 [ _75 ])
        (nil)))
(insn 131 130 132 2 (set (reg/f:DI 220)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":168:6 74 {*movdi_internal}
     (nil))
(insn 132 131 133 2 (parallel [
            (set (reg/f:DI 157 [ _76 ])
                (plus:DI (reg/f:DI 220)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":168:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 220)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 133 132 134 2 (set (reg/f:DI 158 [ _77 ])
        (mem/f:DI (reg/f:DI 157 [ _76 ]) [4 *_76+0 S8 A64])) "game_of_life.c":168:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 157 [ _76 ])
        (nil)))
(insn 134 133 135 2 (parallel [
            (set (reg/f:DI 159 [ _78 ])
                (plus:DI (reg/f:DI 158 [ _77 ])
                    (const_int 68 [0x44])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":168:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 158 [ _77 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 2 (set (mem:SI (reg/f:DI 159 [ _78 ]) [2 *_78+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":168:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 159 [ _78 ])
        (nil)))
(insn 136 135 137 2 (set (reg/f:DI 221)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":169:6 74 {*movdi_internal}
     (nil))
(insn 137 136 138 2 (parallel [
            (set (reg/f:DI 160 [ _79 ])
                (plus:DI (reg/f:DI 221)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":169:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 221)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 138 137 139 2 (set (reg/f:DI 161 [ _80 ])
        (mem/f:DI (reg/f:DI 160 [ _79 ]) [4 *_79+0 S8 A64])) "game_of_life.c":169:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ _79 ])
        (nil)))
(insn 139 138 140 2 (parallel [
            (set (reg/f:DI 162 [ _81 ])
                (plus:DI (reg/f:DI 161 [ _80 ])
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":169:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 161 [ _80 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 2 (set (mem:SI (reg/f:DI 162 [ _81 ]) [2 *_81+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":169:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 162 [ _81 ])
        (nil)))
(insn 141 140 142 2 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":170:6 74 {*movdi_internal}
     (nil))
(insn 142 141 143 2 (parallel [
            (set (reg/f:DI 163 [ _82 ])
                (plus:DI (reg/f:DI 222)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":170:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 222)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 80 [0x50]))
                (nil)))))
(insn 143 142 144 2 (set (reg/f:DI 164 [ _83 ])
        (mem/f:DI (reg/f:DI 163 [ _82 ]) [4 *_82+0 S8 A64])) "game_of_life.c":170:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 163 [ _82 ])
        (nil)))
(insn 144 143 145 2 (parallel [
            (set (reg/f:DI 165 [ _84 ])
                (plus:DI (reg/f:DI 164 [ _83 ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":170:10 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 164 [ _83 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 145 144 146 2 (set (mem:SI (reg/f:DI 165 [ _84 ]) [2 *_84+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":170:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 165 [ _84 ])
        (nil)))
(insn 146 145 147 2 (set (reg/f:DI 223)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":171:6 74 {*movdi_internal}
     (nil))
(insn 147 146 148 2 (parallel [
            (set (reg/f:DI 166 [ _85 ])
                (plus:DI (reg/f:DI 223)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":171:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 223)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 80 [0x50]))
                (nil)))))
(insn 148 147 149 2 (set (reg/f:DI 167 [ _86 ])
        (mem/f:DI (reg/f:DI 166 [ _85 ]) [4 *_85+0 S8 A64])) "game_of_life.c":171:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 166 [ _85 ])
        (nil)))
(insn 149 148 150 2 (parallel [
            (set (reg/f:DI 168 [ _87 ])
                (plus:DI (reg/f:DI 167 [ _86 ])
                    (const_int 60 [0x3c])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":171:10 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 167 [ _86 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 150 149 151 2 (set (mem:SI (reg/f:DI 168 [ _87 ]) [2 *_87+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":171:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 168 [ _87 ])
        (nil)))
(insn 151 150 152 2 (set (reg/f:DI 224)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":172:6 74 {*movdi_internal}
     (nil))
(insn 152 151 153 2 (parallel [
            (set (reg/f:DI 169 [ _88 ])
                (plus:DI (reg/f:DI 224)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":172:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 224)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 64 [0x40]))
                (nil)))))
(insn 153 152 154 2 (set (reg/f:DI 170 [ _89 ])
        (mem/f:DI (reg/f:DI 169 [ _88 ]) [4 *_88+0 S8 A64])) "game_of_life.c":172:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169 [ _88 ])
        (nil)))
(insn 154 153 155 2 (parallel [
            (set (reg/f:DI 171 [ _90 ])
                (plus:DI (reg/f:DI 170 [ _89 ])
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":172:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 170 [ _89 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 155 154 156 2 (set (mem:SI (reg/f:DI 171 [ _90 ]) [2 *_90+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":172:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171 [ _90 ])
        (nil)))
(insn 156 155 157 2 (set (reg/f:DI 225)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":173:6 74 {*movdi_internal}
     (nil))
(insn 157 156 158 2 (parallel [
            (set (reg/f:DI 172 [ _91 ])
                (plus:DI (reg/f:DI 225)
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":173:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 225)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 56 [0x38]))
                (nil)))))
(insn 158 157 159 2 (set (reg/f:DI 173 [ _92 ])
        (mem/f:DI (reg/f:DI 172 [ _91 ]) [4 *_91+0 S8 A64])) "game_of_life.c":173:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 172 [ _91 ])
        (nil)))
(insn 159 158 160 2 (parallel [
            (set (reg/f:DI 174 [ _93 ])
                (plus:DI (reg/f:DI 173 [ _92 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":173:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 173 [ _92 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 160 159 161 2 (set (mem:SI (reg/f:DI 174 [ _93 ]) [2 *_93+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":173:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 174 [ _93 ])
        (nil)))
(insn 161 160 162 2 (set (reg/f:DI 226)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":174:6 74 {*movdi_internal}
     (nil))
(insn 162 161 163 2 (parallel [
            (set (reg/f:DI 175 [ _94 ])
                (plus:DI (reg/f:DI 226)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":174:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 226)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 64 [0x40]))
                (nil)))))
(insn 163 162 164 2 (set (reg/f:DI 176 [ _95 ])
        (mem/f:DI (reg/f:DI 175 [ _94 ]) [4 *_94+0 S8 A64])) "game_of_life.c":174:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 175 [ _94 ])
        (nil)))
(insn 164 163 165 2 (parallel [
            (set (reg/f:DI 177 [ _96 ])
                (plus:DI (reg/f:DI 176 [ _95 ])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":174:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 176 [ _95 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 165 164 166 2 (set (mem:SI (reg/f:DI 177 [ _96 ]) [2 *_96+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":174:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177 [ _96 ])
        (nil)))
(insn 166 165 167 2 (set (reg/f:DI 227)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":175:6 74 {*movdi_internal}
     (nil))
(insn 167 166 168 2 (parallel [
            (set (reg/f:DI 178 [ _97 ])
                (plus:DI (reg/f:DI 227)
                    (const_int 72 [0x48])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":175:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 227)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 72 [0x48]))
                (nil)))))
(insn 168 167 169 2 (set (reg/f:DI 179 [ _98 ])
        (mem/f:DI (reg/f:DI 178 [ _97 ]) [4 *_97+0 S8 A64])) "game_of_life.c":175:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178 [ _97 ])
        (nil)))
(insn 169 168 170 2 (parallel [
            (set (reg/f:DI 180 [ _99 ])
                (plus:DI (reg/f:DI 179 [ _98 ])
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":175:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 179 [ _98 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 170 169 171 2 (set (mem:SI (reg/f:DI 180 [ _99 ]) [2 *_99+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":175:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 180 [ _99 ])
        (nil)))
(insn 171 170 172 2 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":176:6 74 {*movdi_internal}
     (nil))
(insn 172 171 173 2 (parallel [
            (set (reg/f:DI 181 [ _100 ])
                (plus:DI (reg/f:DI 228)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":176:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 228)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 173 172 174 2 (set (reg/f:DI 182 [ _101 ])
        (mem/f:DI (reg/f:DI 181 [ _100 ]) [4 *_100+0 S8 A64])) "game_of_life.c":176:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 181 [ _100 ])
        (nil)))
(insn 174 173 175 2 (parallel [
            (set (reg/f:DI 183 [ _102 ])
                (plus:DI (reg/f:DI 182 [ _101 ])
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":176:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 182 [ _101 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 175 174 176 2 (set (mem:SI (reg/f:DI 183 [ _102 ]) [2 *_102+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":176:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 183 [ _102 ])
        (nil)))
(insn 176 175 177 2 (set (reg/f:DI 229)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":177:6 74 {*movdi_internal}
     (nil))
(insn 177 176 178 2 (parallel [
            (set (reg/f:DI 184 [ _103 ])
                (plus:DI (reg/f:DI 229)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":177:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 229)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 32 [0x20]))
                (nil)))))
(insn 178 177 179 2 (set (reg/f:DI 185 [ _104 ])
        (mem/f:DI (reg/f:DI 184 [ _103 ]) [4 *_103+0 S8 A64])) "game_of_life.c":177:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 184 [ _103 ])
        (nil)))
(insn 179 178 180 2 (parallel [
            (set (reg/f:DI 186 [ _105 ])
                (plus:DI (reg/f:DI 185 [ _104 ])
                    (const_int 148 [0x94])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":177:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 185 [ _104 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 180 179 181 2 (set (mem:SI (reg/f:DI 186 [ _105 ]) [2 *_105+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":177:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 186 [ _105 ])
        (nil)))
(insn 181 180 182 2 (set (reg/f:DI 230)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":178:6 74 {*movdi_internal}
     (nil))
(insn 182 181 183 2 (parallel [
            (set (reg/f:DI 187 [ _106 ])
                (plus:DI (reg/f:DI 230)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":178:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 230)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 40 [0x28]))
                (nil)))))
(insn 183 182 184 2 (set (reg/f:DI 188 [ _107 ])
        (mem/f:DI (reg/f:DI 187 [ _106 ]) [4 *_106+0 S8 A64])) "game_of_life.c":178:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ _106 ])
        (nil)))
(insn 184 183 185 2 (parallel [
            (set (reg/f:DI 189 [ _108 ])
                (plus:DI (reg/f:DI 188 [ _107 ])
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":178:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 188 [ _107 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 185 184 186 2 (set (mem:SI (reg/f:DI 189 [ _108 ]) [2 *_108+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":178:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 189 [ _108 ])
        (nil)))
(insn 186 185 187 2 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":179:6 74 {*movdi_internal}
     (nil))
(insn 187 186 188 2 (parallel [
            (set (reg/f:DI 190 [ _109 ])
                (plus:DI (reg/f:DI 231)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":179:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 231)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                    (const_int 40 [0x28]))
                (nil)))))
(insn 188 187 189 2 (set (reg/f:DI 191 [ _110 ])
        (mem/f:DI (reg/f:DI 190 [ _109 ]) [4 *_109+0 S8 A64])) "game_of_life.c":179:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190 [ _109 ])
        (nil)))
(insn 189 188 190 2 (parallel [
            (set (reg/f:DI 192 [ _111 ])
                (plus:DI (reg/f:DI 191 [ _110 ])
                    (const_int 148 [0x94])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":179:9 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 191 [ _110 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 190 189 191 2 (set (mem:SI (reg/f:DI 192 [ _111 ]) [2 *_111+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":179:14 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 192 [ _111 ])
        (nil)))
(insn 191 190 194 2 (set (reg/f:DI 193 [ _151 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":181:12 74 {*movdi_internal}
     (nil))
(insn 194 191 198 2 (set (reg/f:DI 194 [ <retval> ])
        (reg/f:DI 193 [ _151 ])) "game_of_life.c":181:12 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 193 [ _151 ])
        (nil)))
(insn 198 194 199 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 194 [ <retval> ])) "game_of_life.c":182:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 194 [ <retval> ])
        (nil)))
(insn 199 198 0 2 (use (reg/i:DI 0 ax)) "game_of_life.c":182:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_init_life5 (dynamic_array_init_life5, funcdef_no=15, decl_uid=4956, cgraph_uid=16, symbol_order=15)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r278,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r275,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r269: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r269,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r268,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r263,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r262,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r260,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r258,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r255,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r253,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r250,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r249,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r248: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r248,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r243,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r242: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r242,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a113 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r230,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r229,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a121 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a120 (r227,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a130 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a129 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a137 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a138 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a139 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a147 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a148 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a170 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a172 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a180 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a179 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a186 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a187 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a188 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r190,l0) best AREG, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a105 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a106 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a114 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a115 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a122 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a131 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a146 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a154 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a155 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a156 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a162 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a164 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a163 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a171 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a181 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r190,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a4(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a5(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a6(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a7(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a8(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a9(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a10(r277,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a11(r278,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a12(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a13(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a14(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a15(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a16(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a17(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a18(r275,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a19(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a20(r272,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a21(r273,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a22(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a23(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a24(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a25(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a26(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a27(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a28(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a29(r270,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a30(r268,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a31(r269,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a32(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a33(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a34(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a35(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a36(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a37(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a38(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a39(r265,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a40(r263,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a41(r264,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a42(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a43(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a44(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a45(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a46(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a47(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a48(r262,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a49(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a50(r259,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a51(r260,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a52(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a53(r258,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a54(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a55(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a56(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a57(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a58(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a59(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a60(r254,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a61(r255,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a62(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a63(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a64(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a65(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a66(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a67(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a68(r253,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a69(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a70(r250,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a71(r251,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a72(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a73(r249,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a74(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a75(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a76(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a77(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a78(r248,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a79(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a80(r245,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a81(r246,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a82(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a83(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a84(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a85(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a86(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a87(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a88(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a89(r243,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a90(r241,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a91(r242,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a92(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a93(r240,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a94(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a95(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a96(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a97(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a98(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a99(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a100(r236,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a101(r237,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a102(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a103(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a104(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a105(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a106(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a107(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a108(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a109(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a110(r232,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a111(r233,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a112(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a113(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a114(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a115(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a116(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a117(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a118(r230,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a119(r229,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a120(r227,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a121(r228,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a122(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a123(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a124(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a125(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a126(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a127(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a128(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a129(r223,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a130(r224,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a131(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a132(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a133(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a134(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a135(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a136(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a137(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a138(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a139(r218,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a140(r219,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a141(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a142(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a143(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a144(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a145(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a146(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a147(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a148(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a149(r214,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a150(r215,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a151(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a152(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a153(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a154(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a155(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a156(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a157(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a158(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a159(r209,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a160(r210,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a161(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a162(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a163(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a164(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:10000
  a165(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a166(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a167(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a168(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a169(r205,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a170(r206,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a171(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a172(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a173(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a174(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a175(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:23000 INT_SSE_REGS:23000 ALL_REGS:316000 MEM:11000
  a176(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a177(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a178(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a179(r200,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a180(r201,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a181(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a182(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a183(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a184(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a185(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a186(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a187(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a188(r196,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a189(r197,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000
  a190(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a191(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a192(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a193(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a194(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a195(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a196(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a197(r191,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:33000 INT_SSE_REGS:33000 ALL_REGS:420000 MEM:14000
  a198(r192,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:21000 INT_SSE_REGS:21000 ALL_REGS:314000 MEM:8000

   Insn 263(l0): point = 0
   Insn 262(l0): point = 2
   Insn 258(l0): point = 4
   Insn 255(l0): point = 6
   Insn 254(l0): point = 8
   Insn 253(l0): point = 10
   Insn 252(l0): point = 12
   Insn 251(l0): point = 14
   Insn 250(l0): point = 16
   Insn 249(l0): point = 18
   Insn 248(l0): point = 20
   Insn 247(l0): point = 22
   Insn 246(l0): point = 24
   Insn 243(l0): point = 26
   Insn 242(l0): point = 28
   Insn 241(l0): point = 30
   Insn 240(l0): point = 32
   Insn 239(l0): point = 34
   Insn 238(l0): point = 36
   Insn 237(l0): point = 38
   Insn 236(l0): point = 40
   Insn 235(l0): point = 42
   Insn 234(l0): point = 44
   Insn 233(l0): point = 46
   Insn 230(l0): point = 48
   Insn 229(l0): point = 50
   Insn 228(l0): point = 52
   Insn 227(l0): point = 54
   Insn 226(l0): point = 56
   Insn 225(l0): point = 58
   Insn 224(l0): point = 60
   Insn 223(l0): point = 62
   Insn 222(l0): point = 64
   Insn 221(l0): point = 66
   Insn 218(l0): point = 68
   Insn 217(l0): point = 70
   Insn 216(l0): point = 72
   Insn 215(l0): point = 74
   Insn 214(l0): point = 76
   Insn 213(l0): point = 78
   Insn 212(l0): point = 80
   Insn 211(l0): point = 82
   Insn 210(l0): point = 84
   Insn 209(l0): point = 86
   Insn 208(l0): point = 88
   Insn 205(l0): point = 90
   Insn 204(l0): point = 92
   Insn 203(l0): point = 94
   Insn 202(l0): point = 96
   Insn 201(l0): point = 98
   Insn 200(l0): point = 100
   Insn 199(l0): point = 102
   Insn 198(l0): point = 104
   Insn 197(l0): point = 106
   Insn 196(l0): point = 108
   Insn 193(l0): point = 110
   Insn 192(l0): point = 112
   Insn 191(l0): point = 114
   Insn 190(l0): point = 116
   Insn 189(l0): point = 118
   Insn 188(l0): point = 120
   Insn 187(l0): point = 122
   Insn 186(l0): point = 124
   Insn 185(l0): point = 126
   Insn 184(l0): point = 128
   Insn 183(l0): point = 130
   Insn 180(l0): point = 132
   Insn 179(l0): point = 134
   Insn 178(l0): point = 136
   Insn 177(l0): point = 138
   Insn 176(l0): point = 140
   Insn 175(l0): point = 142
   Insn 174(l0): point = 144
   Insn 173(l0): point = 146
   Insn 172(l0): point = 148
   Insn 171(l0): point = 150
   Insn 168(l0): point = 152
   Insn 167(l0): point = 154
   Insn 166(l0): point = 156
   Insn 165(l0): point = 158
   Insn 164(l0): point = 160
   Insn 163(l0): point = 162
   Insn 162(l0): point = 164
   Insn 161(l0): point = 166
   Insn 160(l0): point = 168
   Insn 159(l0): point = 170
   Insn 158(l0): point = 172
   Insn 155(l0): point = 174
   Insn 154(l0): point = 176
   Insn 153(l0): point = 178
   Insn 152(l0): point = 180
   Insn 151(l0): point = 182
   Insn 150(l0): point = 184
   Insn 149(l0): point = 186
   Insn 148(l0): point = 188
   Insn 147(l0): point = 190
   Insn 146(l0): point = 192
   Insn 143(l0): point = 194
   Insn 142(l0): point = 196
   Insn 141(l0): point = 198
   Insn 140(l0): point = 200
   Insn 139(l0): point = 202
   Insn 138(l0): point = 204
   Insn 137(l0): point = 206
   Insn 136(l0): point = 208
   Insn 135(l0): point = 210
   Insn 134(l0): point = 212
   Insn 133(l0): point = 214
   Insn 130(l0): point = 216
   Insn 129(l0): point = 218
   Insn 128(l0): point = 220
   Insn 127(l0): point = 222
   Insn 126(l0): point = 224
   Insn 125(l0): point = 226
   Insn 124(l0): point = 228
   Insn 123(l0): point = 230
   Insn 122(l0): point = 232
   Insn 121(l0): point = 234
   Insn 118(l0): point = 236
   Insn 117(l0): point = 238
   Insn 116(l0): point = 240
   Insn 115(l0): point = 242
   Insn 114(l0): point = 244
   Insn 113(l0): point = 246
   Insn 112(l0): point = 248
   Insn 111(l0): point = 250
   Insn 110(l0): point = 252
   Insn 109(l0): point = 254
   Insn 108(l0): point = 256
   Insn 105(l0): point = 258
   Insn 104(l0): point = 260
   Insn 103(l0): point = 262
   Insn 102(l0): point = 264
   Insn 101(l0): point = 266
   Insn 100(l0): point = 268
   Insn 99(l0): point = 270
   Insn 98(l0): point = 272
   Insn 97(l0): point = 274
   Insn 94(l0): point = 276
   Insn 93(l0): point = 278
   Insn 92(l0): point = 280
   Insn 91(l0): point = 282
   Insn 90(l0): point = 284
   Insn 89(l0): point = 286
   Insn 88(l0): point = 288
   Insn 87(l0): point = 290
   Insn 86(l0): point = 292
   Insn 85(l0): point = 294
   Insn 84(l0): point = 296
   Insn 81(l0): point = 298
   Insn 80(l0): point = 300
   Insn 79(l0): point = 302
   Insn 78(l0): point = 304
   Insn 77(l0): point = 306
   Insn 76(l0): point = 308
   Insn 75(l0): point = 310
   Insn 74(l0): point = 312
   Insn 73(l0): point = 314
   Insn 72(l0): point = 316
   Insn 69(l0): point = 318
   Insn 68(l0): point = 320
   Insn 67(l0): point = 322
   Insn 66(l0): point = 324
   Insn 65(l0): point = 326
   Insn 64(l0): point = 328
   Insn 63(l0): point = 330
   Insn 62(l0): point = 332
   Insn 61(l0): point = 334
   Insn 60(l0): point = 336
   Insn 59(l0): point = 338
   Insn 56(l0): point = 340
   Insn 55(l0): point = 342
   Insn 54(l0): point = 344
   Insn 53(l0): point = 346
   Insn 52(l0): point = 348
   Insn 51(l0): point = 350
   Insn 50(l0): point = 352
   Insn 49(l0): point = 354
   Insn 48(l0): point = 356
   Insn 47(l0): point = 358
   Insn 44(l0): point = 360
   Insn 43(l0): point = 362
   Insn 42(l0): point = 364
   Insn 41(l0): point = 366
   Insn 40(l0): point = 368
   Insn 39(l0): point = 370
   Insn 38(l0): point = 372
   Insn 37(l0): point = 374
   Insn 36(l0): point = 376
   Insn 35(l0): point = 378
   Insn 34(l0): point = 380
   Insn 31(l0): point = 382
   Insn 30(l0): point = 384
   Insn 29(l0): point = 386
   Insn 28(l0): point = 388
   Insn 27(l0): point = 390
   Insn 26(l0): point = 392
   Insn 25(l0): point = 394
   Insn 24(l0): point = 396
   Insn 23(l0): point = 398
   Insn 20(l0): point = 400
   Insn 19(l0): point = 402
   Insn 18(l0): point = 404
   Insn 17(l0): point = 406
   Insn 16(l0): point = 408
   Insn 15(l0): point = 410
   Insn 14(l0): point = 412
   Insn 13(l0): point = 414
   Insn 12(l0): point = 416
   Insn 11(l0): point = 418
   Insn 8(l0): point = 420
   Insn 4(l0): point = 422
   Insn 3(l0): point = 424
   Insn 2(l0): point = 426
 a0(r190): [3..4]
 a1(r189): [5..6]
 a2(r188): [9..10]
 a3(r187): [11..12]
 a4(r183): [11..28]
 a5(r186): [13..14]
 a6(r185): [15..16]
 a7(r184): [17..18]
 a8(r280): [19..20]
 a9(r279): [21..22]
 a10(r277): [23..26]
 a11(r278): [23..24]
 a12(r182): [29..30]
 a13(r276): [31..32]
 a14(r181): [31..34]
 a15(r180): [35..36]
 a16(r179): [37..38]
 a17(r178): [39..40]
 a18(r275): [41..42]
 a19(r274): [43..44]
 a20(r272): [45..48]
 a21(r273): [45..46]
 a22(r177): [51..52]
 a23(r176): [53..54]
 a24(r172): [53..70]
 a25(r175): [55..56]
 a26(r174): [57..58]
 a27(r173): [59..60]
 a28(r271): [61..62]
 a29(r270): [63..64]
 a30(r268): [65..68]
 a31(r269): [65..66]
 a32(r171): [71..72]
 a33(r267): [73..74]
 a34(r170): [73..76]
 a35(r169): [77..78]
 a36(r168): [79..80]
 a37(r167): [81..82]
 a38(r266): [83..84]
 a39(r265): [85..86]
 a40(r263): [87..90]
 a41(r264): [87..88]
 a42(r166): [93..94]
 a43(r165): [95..96]
 a44(r161): [95..112]
 a45(r164): [97..98]
 a46(r163): [99..100]
 a47(r162): [101..102]
 a48(r262): [103..104]
 a49(r261): [105..106]
 a50(r259): [107..110]
 a51(r260): [107..108]
 a52(r160): [113..114]
 a53(r258): [115..116]
 a54(r159): [115..118]
 a55(r158): [119..120]
 a56(r157): [121..122]
 a57(r156): [123..124]
 a58(r257): [125..126]
 a59(r256): [127..128]
 a60(r254): [129..132]
 a61(r255): [129..130]
 a62(r155): [135..136]
 a63(r154): [137..138]
 a64(r150): [137..154]
 a65(r153): [139..140]
 a66(r152): [141..142]
 a67(r151): [143..144]
 a68(r253): [145..146]
 a69(r252): [147..148]
 a70(r250): [149..152]
 a71(r251): [149..150]
 a72(r149): [155..156]
 a73(r249): [157..158]
 a74(r148): [157..160]
 a75(r147): [161..162]
 a76(r146): [163..164]
 a77(r145): [165..166]
 a78(r248): [167..168]
 a79(r247): [169..170]
 a80(r245): [171..174]
 a81(r246): [171..172]
 a82(r144): [177..178]
 a83(r143): [179..180]
 a84(r139): [179..196]
 a85(r142): [181..182]
 a86(r141): [183..184]
 a87(r140): [185..186]
 a88(r244): [187..188]
 a89(r243): [189..190]
 a90(r241): [191..194]
 a91(r242): [191..192]
 a92(r138): [197..198]
 a93(r240): [199..200]
 a94(r137): [199..202]
 a95(r136): [203..204]
 a96(r135): [205..206]
 a97(r134): [207..208]
 a98(r239): [209..210]
 a99(r238): [211..212]
 a100(r236): [213..216]
 a101(r237): [213..214]
 a102(r133): [219..220]
 a103(r132): [221..222]
 a104(r128): [221..238]
 a105(r131): [223..224]
 a106(r130): [225..226]
 a107(r129): [227..228]
 a108(r235): [229..230]
 a109(r234): [231..232]
 a110(r232): [233..236]
 a111(r233): [233..234]
 a112(r127): [239..240]
 a113(r231): [241..242]
 a114(r126): [241..244]
 a115(r125): [245..246]
 a116(r124): [247..248]
 a117(r123): [249..250]
 a118(r230): [251..252]
 a119(r229): [253..254]
 a120(r227): [255..258]
 a121(r228): [255..256]
 a122(r122): [261..262]
 a123(r121): [263..264]
 a124(r118): [263..278]
 a125(r120): [265..266]
 a126(r119): [267..268]
 a127(r226): [269..270]
 a128(r225): [271..272]
 a129(r223): [273..276]
 a130(r224): [273..274]
 a131(r117): [279..280]
 a132(r222): [281..282]
 a133(r116): [281..284]
 a134(r115): [285..286]
 a135(r114): [287..288]
 a136(r113): [289..290]
 a137(r221): [291..292]
 a138(r220): [293..294]
 a139(r218): [295..298]
 a140(r219): [295..296]
 a141(r112): [301..302]
 a142(r111): [303..304]
 a143(r107): [303..320]
 a144(r110): [305..306]
 a145(r109): [307..308]
 a146(r108): [309..310]
 a147(r217): [311..312]
 a148(r216): [313..314]
 a149(r214): [315..318]
 a150(r215): [315..316]
 a151(r106): [321..322]
 a152(r213): [323..324]
 a153(r105): [323..326]
 a154(r104): [327..328]
 a155(r103): [329..330]
 a156(r102): [331..332]
 a157(r212): [333..334]
 a158(r211): [335..336]
 a159(r209): [337..340]
 a160(r210): [337..338]
 a161(r101): [343..344]
 a162(r100): [345..346]
 a163(r96): [345..362]
 a164(r99): [347..348]
 a165(r98): [349..350]
 a166(r97): [351..352]
 a167(r208): [353..354]
 a168(r207): [355..356]
 a169(r205): [357..360]
 a170(r206): [357..358]
 a171(r95): [363..364]
 a172(r204): [365..366]
 a173(r94): [365..368]
 a174(r93): [369..370]
 a175(r92): [371..372]
 a176(r91): [373..374]
 a177(r203): [375..376]
 a178(r202): [377..378]
 a179(r200): [379..382]
 a180(r201): [379..380]
 a181(r90): [385..386]
 a182(r89): [387..388]
 a183(r86): [387..402]
 a184(r88): [389..390]
 a185(r87): [391..392]
 a186(r199): [393..394]
 a187(r198): [395..396]
 a188(r196): [397..400]
 a189(r197): [397..398]
 a190(r85): [403..404]
 a191(r195): [405..406]
 a192(r84): [405..408]
 a193(r83): [409..410]
 a194(r82): [411..412]
 a195(r194): [413..414]
 a196(r193): [415..416]
 a197(r191): [417..420]
 a198(r192): [417..418]
Compressing live ranges: from 429 to 318 - 74%
Ranges after the compression:
 a0(r190): [0..1]
 a1(r189): [2..3]
 a2(r188): [4..5]
 a3(r187): [6..7]
 a4(r183): [6..19]
 a5(r186): [8..9]
 a6(r185): [10..11]
 a7(r184): [12..13]
 a8(r280): [14..15]
 a9(r279): [16..17]
 a10(r277): [18..19]
 a11(r278): [18..19]
 a12(r182): [20..21]
 a13(r276): [22..23]
 a14(r181): [22..23]
 a15(r180): [24..25]
 a16(r179): [26..27]
 a17(r178): [28..29]
 a18(r275): [30..31]
 a19(r274): [32..33]
 a20(r272): [34..35]
 a21(r273): [34..35]
 a22(r177): [36..37]
 a23(r176): [38..39]
 a24(r172): [38..51]
 a25(r175): [40..41]
 a26(r174): [42..43]
 a27(r173): [44..45]
 a28(r271): [46..47]
 a29(r270): [48..49]
 a30(r268): [50..51]
 a31(r269): [50..51]
 a32(r171): [52..53]
 a33(r267): [54..55]
 a34(r170): [54..55]
 a35(r169): [56..57]
 a36(r168): [58..59]
 a37(r167): [60..61]
 a38(r266): [62..63]
 a39(r265): [64..65]
 a40(r263): [66..67]
 a41(r264): [66..67]
 a42(r166): [68..69]
 a43(r165): [70..71]
 a44(r161): [70..83]
 a45(r164): [72..73]
 a46(r163): [74..75]
 a47(r162): [76..77]
 a48(r262): [78..79]
 a49(r261): [80..81]
 a50(r259): [82..83]
 a51(r260): [82..83]
 a52(r160): [84..85]
 a53(r258): [86..87]
 a54(r159): [86..87]
 a55(r158): [88..89]
 a56(r157): [90..91]
 a57(r156): [92..93]
 a58(r257): [94..95]
 a59(r256): [96..97]
 a60(r254): [98..99]
 a61(r255): [98..99]
 a62(r155): [100..101]
 a63(r154): [102..103]
 a64(r150): [102..115]
 a65(r153): [104..105]
 a66(r152): [106..107]
 a67(r151): [108..109]
 a68(r253): [110..111]
 a69(r252): [112..113]
 a70(r250): [114..115]
 a71(r251): [114..115]
 a72(r149): [116..117]
 a73(r249): [118..119]
 a74(r148): [118..119]
 a75(r147): [120..121]
 a76(r146): [122..123]
 a77(r145): [124..125]
 a78(r248): [126..127]
 a79(r247): [128..129]
 a80(r245): [130..131]
 a81(r246): [130..131]
 a82(r144): [132..133]
 a83(r143): [134..135]
 a84(r139): [134..147]
 a85(r142): [136..137]
 a86(r141): [138..139]
 a87(r140): [140..141]
 a88(r244): [142..143]
 a89(r243): [144..145]
 a90(r241): [146..147]
 a91(r242): [146..147]
 a92(r138): [148..149]
 a93(r240): [150..151]
 a94(r137): [150..151]
 a95(r136): [152..153]
 a96(r135): [154..155]
 a97(r134): [156..157]
 a98(r239): [158..159]
 a99(r238): [160..161]
 a100(r236): [162..163]
 a101(r237): [162..163]
 a102(r133): [164..165]
 a103(r132): [166..167]
 a104(r128): [166..179]
 a105(r131): [168..169]
 a106(r130): [170..171]
 a107(r129): [172..173]
 a108(r235): [174..175]
 a109(r234): [176..177]
 a110(r232): [178..179]
 a111(r233): [178..179]
 a112(r127): [180..181]
 a113(r231): [182..183]
 a114(r126): [182..183]
 a115(r125): [184..185]
 a116(r124): [186..187]
 a117(r123): [188..189]
 a118(r230): [190..191]
 a119(r229): [192..193]
 a120(r227): [194..195]
 a121(r228): [194..195]
 a122(r122): [196..197]
 a123(r121): [198..199]
 a124(r118): [198..209]
 a125(r120): [200..201]
 a126(r119): [202..203]
 a127(r226): [204..205]
 a128(r225): [206..207]
 a129(r223): [208..209]
 a130(r224): [208..209]
 a131(r117): [210..211]
 a132(r222): [212..213]
 a133(r116): [212..213]
 a134(r115): [214..215]
 a135(r114): [216..217]
 a136(r113): [218..219]
 a137(r221): [220..221]
 a138(r220): [222..223]
 a139(r218): [224..225]
 a140(r219): [224..225]
 a141(r112): [226..227]
 a142(r111): [228..229]
 a143(r107): [228..241]
 a144(r110): [230..231]
 a145(r109): [232..233]
 a146(r108): [234..235]
 a147(r217): [236..237]
 a148(r216): [238..239]
 a149(r214): [240..241]
 a150(r215): [240..241]
 a151(r106): [242..243]
 a152(r213): [244..245]
 a153(r105): [244..245]
 a154(r104): [246..247]
 a155(r103): [248..249]
 a156(r102): [250..251]
 a157(r212): [252..253]
 a158(r211): [254..255]
 a159(r209): [256..257]
 a160(r210): [256..257]
 a161(r101): [258..259]
 a162(r100): [260..261]
 a163(r96): [260..273]
 a164(r99): [262..263]
 a165(r98): [264..265]
 a166(r97): [266..267]
 a167(r208): [268..269]
 a168(r207): [270..271]
 a169(r205): [272..273]
 a170(r206): [272..273]
 a171(r95): [274..275]
 a172(r204): [276..277]
 a173(r94): [276..277]
 a174(r93): [278..279]
 a175(r92): [280..281]
 a176(r91): [282..283]
 a177(r203): [284..285]
 a178(r202): [286..287]
 a179(r200): [288..289]
 a180(r201): [288..289]
 a181(r90): [290..291]
 a182(r89): [292..293]
 a183(r86): [292..303]
 a184(r88): [294..295]
 a185(r87): [296..297]
 a186(r199): [298..299]
 a187(r198): [300..301]
 a188(r196): [302..303]
 a189(r197): [302..303]
 a190(r85): [304..305]
 a191(r195): [306..307]
 a192(r84): [306..307]
 a193(r83): [308..309]
 a194(r82): [310..311]
 a195(r194): [312..313]
 a196(r193): [314..315]
 a197(r191): [316..317]
 a198(r192): [316..317]
  pref0:a0(r190)<-hr0@1500
  regions=1, blocks=3, points=318
    allocnos=199 (big 0), copies=0, conflicts=0, ranges=199
Disposition:
  194:r82  l0     0  193:r83  l0     0  192:r84  l0     1  190:r85  l0     0
  183:r86  l0     1  185:r87  l0     0  184:r88  l0     0  182:r89  l0     0
  181:r90  l0     0  176:r91  l0     0  175:r92  l0     0  174:r93  l0     0
  173:r94  l0     1  171:r95  l0     0  163:r96  l0     1  166:r97  l0     0
  165:r98  l0     0  164:r99  l0     0  162:r100 l0     0  161:r101 l0     0
  156:r102 l0     0  155:r103 l0     0  154:r104 l0     0  153:r105 l0     1
  151:r106 l0     0  143:r107 l0     1  146:r108 l0     0  145:r109 l0     0
  144:r110 l0     0  142:r111 l0     0  141:r112 l0     0  136:r113 l0     0
  135:r114 l0     0  134:r115 l0     0  133:r116 l0     1  131:r117 l0     0
  124:r118 l0     1  126:r119 l0     0  125:r120 l0     0  123:r121 l0     0
  122:r122 l0     0  117:r123 l0     0  116:r124 l0     0  115:r125 l0     0
  114:r126 l0     1  112:r127 l0     0  104:r128 l0     1  107:r129 l0     0
  106:r130 l0     0  105:r131 l0     0  103:r132 l0     0  102:r133 l0     0
   97:r134 l0     0   96:r135 l0     0   95:r136 l0     0   94:r137 l0     1
   92:r138 l0     0   84:r139 l0     1   87:r140 l0     0   86:r141 l0     0
   85:r142 l0     0   83:r143 l0     0   82:r144 l0     0   77:r145 l0     0
   76:r146 l0     0   75:r147 l0     0   74:r148 l0     1   72:r149 l0     0
   64:r150 l0     1   67:r151 l0     0   66:r152 l0     0   65:r153 l0     0
   63:r154 l0     0   62:r155 l0     0   57:r156 l0     0   56:r157 l0     0
   55:r158 l0     0   54:r159 l0     1   52:r160 l0     0   44:r161 l0     1
   47:r162 l0     0   46:r163 l0     0   45:r164 l0     0   43:r165 l0     0
   42:r166 l0     0   37:r167 l0     0   36:r168 l0     0   35:r169 l0     0
   34:r170 l0     1   32:r171 l0     0   24:r172 l0     1   27:r173 l0     0
   26:r174 l0     0   25:r175 l0     0   23:r176 l0     0   22:r177 l0     0
   17:r178 l0     0   16:r179 l0     0   15:r180 l0     0   14:r181 l0     1
   12:r182 l0     0    4:r183 l0     1    7:r184 l0     0    6:r185 l0     0
    5:r186 l0     0    3:r187 l0     0    2:r188 l0     0    1:r189 l0     0
    0:r190 l0     0  197:r191 l0     0  198:r192 l0     1  196:r193 l0     0
  195:r194 l0     0  191:r195 l0     0  188:r196 l0     0  189:r197 l0     2
  187:r198 l0     0  186:r199 l0     0  179:r200 l0     0  180:r201 l0     1
  178:r202 l0     0  177:r203 l0     0  172:r204 l0     0  169:r205 l0     0
  170:r206 l0     2  168:r207 l0     0  167:r208 l0     0  159:r209 l0     0
  160:r210 l0     1  158:r211 l0     0  157:r212 l0     0  152:r213 l0     0
  149:r214 l0     0  150:r215 l0     2  148:r216 l0     0  147:r217 l0     0
  139:r218 l0     0  140:r219 l0     1  138:r220 l0     0  137:r221 l0     0
  132:r222 l0     0  129:r223 l0     0  130:r224 l0     2  128:r225 l0     0
  127:r226 l0     0  120:r227 l0     0  121:r228 l0     1  119:r229 l0     0
  118:r230 l0     0  113:r231 l0     0  110:r232 l0     0  111:r233 l0     2
  109:r234 l0     0  108:r235 l0     0  100:r236 l0     0  101:r237 l0     1
   99:r238 l0     0   98:r239 l0     0   93:r240 l0     0   90:r241 l0     0
   91:r242 l0     2   89:r243 l0     0   88:r244 l0     0   80:r245 l0     0
   81:r246 l0     1   79:r247 l0     0   78:r248 l0     0   73:r249 l0     0
   70:r250 l0     0   71:r251 l0     2   69:r252 l0     0   68:r253 l0     0
   60:r254 l0     0   61:r255 l0     1   59:r256 l0     0   58:r257 l0     0
   53:r258 l0     0   50:r259 l0     0   51:r260 l0     2   49:r261 l0     0
   48:r262 l0     0   40:r263 l0     0   41:r264 l0     1   39:r265 l0     0
   38:r266 l0     0   33:r267 l0     0   30:r268 l0     0   31:r269 l0     2
   29:r270 l0     0   28:r271 l0     0   20:r272 l0     0   21:r273 l0     1
   19:r274 l0     0   18:r275 l0     0   13:r276 l0     0   10:r277 l0     0
   11:r278 l0     2    9:r279 l0     0    8:r280 l0     0
+++Costs: overall 79000, reg 79000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_init_life5

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d,1u} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={117d} r19={1d,36u,10e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u,1e} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u,1e} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u,1e} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u,1e} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u,1e} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1e} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u,1e} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u,1e} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u,1e} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u,1e} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,2u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,2u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,2u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,2u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,2u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,2u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,2u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,2u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,2u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,2u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,2u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,2u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,2u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,2u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,2u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,2u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,2u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,2u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,2u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,2u} r278={1d,1u} r279={1d,1u} r280={1d,1u} 
;;    total ref usage 621{336d,265u,20e} in 214{214 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 17 [flags
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 5 di [ A ])) "game_of_life.c":184:55 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ A ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":184:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])
        (reg:SI 1 dx [ M ])) "game_of_life.c":184:55 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ M ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 11 2 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":186:9 75 {*movsi_internal}
     (nil))
(insn 11 8 12 2 (parallel [
            (set (reg:SI 192)
                (lshiftrt:SI (reg:SI 191)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:9 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 193)
                (plus:SI (reg:SI 192)
                    (reg:SI 191)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:9 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg:SI 191)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 194)
                (ashiftrt:SI (reg:SI 193)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:9 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 14 13 15 2 (set (reg:SI 82 [ _1 ])
        (reg:SI 194)) "game_of_life.c":186:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 194)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 83 [ _2 ])
        (sign_extend:DI (reg:SI 82 [ _1 ]))) "game_of_life.c":186:9 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 82 [ _1 ])
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg:DI 84 [ _3 ])
                (ashift:DI (reg:DI 83 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":186:6 74 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 85 [ _4 ])
                (plus:DI (reg:DI 84 [ _3 ])
                    (reg/f:DI 195)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 195)
        (expr_list:REG_DEAD (reg:DI 84 [ _3 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 84 [ _3 ]))
                    (nil))))))
(insn 19 18 20 2 (set (reg/f:DI 86 [ _5 ])
        (mem/f:DI (reg/f:DI 85 [ _4 ]) [4 *_4+0 S8 A64])) "game_of_life.c":186:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
        (nil)))
(insn 20 19 23 2 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":186:16 75 {*movsi_internal}
     (nil))
(insn 23 20 24 2 (parallel [
            (set (reg:SI 197)
                (lshiftrt:SI (reg:SI 196)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:16 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (parallel [
            (set (reg:SI 198)
                (plus:SI (reg:SI 197)
                    (reg:SI 196)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:16 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_DEAD (reg:SI 196)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 25 24 26 2 (parallel [
            (set (reg:SI 199)
                (ashiftrt:SI (reg:SI 198)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:16 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 2 (set (reg:SI 87 [ _6 ])
        (reg:SI 199)) "game_of_life.c":186:16 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 199)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 88 [ _7 ])
        (sign_extend:DI (reg:SI 87 [ _6 ]))) "game_of_life.c":186:16 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _6 ])
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 89 [ _8 ])
                (ashift:DI (reg:DI 88 [ _7 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:13 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 88 [ _7 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 29 28 30 2 (parallel [
            (set (reg/f:DI 90 [ _9 ])
                (plus:DI (reg/f:DI 86 [ _5 ])
                    (reg:DI 89 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":186:13 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
        (expr_list:REG_DEAD (reg/f:DI 86 [ _5 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 30 29 31 2 (set (mem:SI (reg/f:DI 90 [ _9 ]) [2 *_9+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":186:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ _9 ])
        (nil)))
(insn 31 30 34 2 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":187:10 75 {*movsi_internal}
     (nil))
(insn 34 31 35 2 (parallel [
            (set (reg:SI 201)
                (lshiftrt:SI (reg:SI 200)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 35 34 36 2 (parallel [
            (set (reg:SI 202)
                (plus:SI (reg:SI 201)
                    (reg:SI 200)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_DEAD (reg:SI 200)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 36 35 37 2 (parallel [
            (set (reg:SI 203)
                (ashiftrt:SI (reg:SI 202)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 37 36 38 2 (set (reg:SI 91 [ _10 ])
        (reg:SI 203)) "game_of_life.c":187:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 203)
        (nil)))
(insn 38 37 39 2 (set (reg:DI 92 [ _11 ])
        (sign_extend:DI (reg:SI 91 [ _10 ]))) "game_of_life.c":187:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 91 [ _10 ])
        (nil)))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 93 [ _12 ])
                (plus:DI (reg:DI 92 [ _11 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 92 [ _11 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 2 (parallel [
            (set (reg:DI 94 [ _13 ])
                (ashift:DI (reg:DI 93 [ _12 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 41 40 42 2 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":187:6 74 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg/f:DI 95 [ _14 ])
                (plus:DI (reg:DI 94 [ _13 ])
                    (reg/f:DI 204)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 204)
        (expr_list:REG_DEAD (reg:DI 94 [ _13 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 94 [ _13 ]))
                    (nil))))))
(insn 43 42 44 2 (set (reg/f:DI 96 [ _15 ])
        (mem/f:DI (reg/f:DI 95 [ _14 ]) [4 *_14+0 S8 A64])) "game_of_life.c":187:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _14 ])
        (nil)))
(insn 44 43 47 2 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":187:23 75 {*movsi_internal}
     (nil))
(insn 47 44 48 2 (parallel [
            (set (reg:SI 206)
                (lshiftrt:SI (reg:SI 205)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 2 (parallel [
            (set (reg:SI 207)
                (plus:SI (reg:SI 206)
                    (reg:SI 205)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg:SI 205)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 49 48 50 2 (parallel [
            (set (reg:SI 208)
                (ashiftrt:SI (reg:SI 207)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 207)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 50 49 51 2 (set (reg:SI 97 [ _16 ])
        (reg:SI 208)) "game_of_life.c":187:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 208)
        (nil)))
(insn 51 50 52 2 (set (reg:DI 98 [ _17 ])
        (sign_extend:DI (reg:SI 97 [ _16 ]))) "game_of_life.c":187:23 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ _16 ])
        (nil)))
(insn 52 51 53 2 (parallel [
            (set (reg:DI 99 [ _18 ])
                (ashift:DI (reg:DI 98 [ _17 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 98 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 100 [ _19 ])
                (plus:DI (reg:DI 99 [ _18 ])
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 99 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 54 53 55 2 (parallel [
            (set (reg/f:DI 101 [ _20 ])
                (plus:DI (reg/f:DI 96 [ _15 ])
                    (reg:DI 100 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":187:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ _19 ])
        (expr_list:REG_DEAD (reg/f:DI 96 [ _15 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 55 54 56 2 (set (mem:SI (reg/f:DI 101 [ _20 ]) [2 *_20+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":187:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _20 ])
        (nil)))
(insn 56 55 59 2 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":188:10 75 {*movsi_internal}
     (nil))
(insn 59 56 60 2 (parallel [
            (set (reg:SI 210)
                (lshiftrt:SI (reg:SI 209)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 60 59 61 2 (parallel [
            (set (reg:SI 211)
                (plus:SI (reg:SI 210)
                    (reg:SI 209)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_DEAD (reg:SI 209)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 61 60 62 2 (parallel [
            (set (reg:SI 212)
                (ashiftrt:SI (reg:SI 211)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 211)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 2 (set (reg:SI 102 [ _21 ])
        (reg:SI 212)) "game_of_life.c":188:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 212)
        (nil)))
(insn 63 62 64 2 (set (reg:DI 103 [ _22 ])
        (sign_extend:DI (reg:SI 102 [ _21 ]))) "game_of_life.c":188:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 102 [ _21 ])
        (nil)))
(insn 64 63 65 2 (parallel [
            (set (reg:DI 104 [ _23 ])
                (plus:DI (reg:DI 103 [ _22 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _22 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 65 64 66 2 (parallel [
            (set (reg:DI 105 [ _24 ])
                (ashift:DI (reg:DI 104 [ _23 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 2 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":188:6 74 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (parallel [
            (set (reg/f:DI 106 [ _25 ])
                (plus:DI (reg:DI 105 [ _24 ])
                    (reg/f:DI 213)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 213)
        (expr_list:REG_DEAD (reg:DI 105 [ _24 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 105 [ _24 ]))
                    (nil))))))
(insn 68 67 69 2 (set (reg/f:DI 107 [ _26 ])
        (mem/f:DI (reg/f:DI 106 [ _25 ]) [4 *_25+0 S8 A64])) "game_of_life.c":188:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _25 ])
        (nil)))
(insn 69 68 72 2 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":188:23 75 {*movsi_internal}
     (nil))
(insn 72 69 73 2 (parallel [
            (set (reg:SI 215)
                (lshiftrt:SI (reg:SI 214)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 73 72 74 2 (parallel [
            (set (reg:SI 216)
                (plus:SI (reg:SI 215)
                    (reg:SI 214)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_DEAD (reg:SI 214)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 74 73 75 2 (parallel [
            (set (reg:SI 217)
                (ashiftrt:SI (reg:SI 216)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 75 74 76 2 (set (reg:SI 108 [ _27 ])
        (reg:SI 217)) "game_of_life.c":188:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 217)
        (nil)))
(insn 76 75 77 2 (set (reg:DI 109 [ _28 ])
        (sign_extend:DI (reg:SI 108 [ _27 ]))) "game_of_life.c":188:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108 [ _27 ])
        (nil)))
(insn 77 76 78 2 (parallel [
            (set (reg:DI 110 [ _29 ])
                (plus:DI (reg:DI 109 [ _28 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _28 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 2 (parallel [
            (set (reg:DI 111 [ _30 ])
                (ashift:DI (reg:DI 110 [ _29 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 78 80 2 (parallel [
            (set (reg/f:DI 112 [ _31 ])
                (plus:DI (reg/f:DI 107 [ _26 ])
                    (reg:DI 111 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":188:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 111 [ _30 ])
        (expr_list:REG_DEAD (reg/f:DI 107 [ _26 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 80 79 81 2 (set (mem:SI (reg/f:DI 112 [ _31 ]) [2 *_31+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":188:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ _31 ])
        (nil)))
(insn 81 80 84 2 (set (reg:SI 218)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":189:10 75 {*movsi_internal}
     (nil))
(insn 84 81 85 2 (parallel [
            (set (reg:SI 219)
                (lshiftrt:SI (reg:SI 218)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 85 84 86 2 (parallel [
            (set (reg:SI 220)
                (plus:SI (reg:SI 219)
                    (reg:SI 218)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_DEAD (reg:SI 218)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 86 85 87 2 (parallel [
            (set (reg:SI 221)
                (ashiftrt:SI (reg:SI 220)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 87 86 88 2 (set (reg:SI 113 [ _32 ])
        (reg:SI 221)) "game_of_life.c":189:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 221)
        (nil)))
(insn 88 87 89 2 (set (reg:DI 114 [ _33 ])
        (sign_extend:DI (reg:SI 113 [ _32 ]))) "game_of_life.c":189:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113 [ _32 ])
        (nil)))
(insn 89 88 90 2 (parallel [
            (set (reg:DI 115 [ _34 ])
                (plus:DI (reg:DI 114 [ _33 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 114 [ _33 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 2 (parallel [
            (set (reg:DI 116 [ _35 ])
                (ashift:DI (reg:DI 115 [ _34 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 115 [ _34 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 91 90 92 2 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":189:6 74 {*movdi_internal}
     (nil))
(insn 92 91 93 2 (parallel [
            (set (reg/f:DI 117 [ _36 ])
                (plus:DI (reg:DI 116 [ _35 ])
                    (reg/f:DI 222)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 222)
        (expr_list:REG_DEAD (reg:DI 116 [ _35 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 116 [ _35 ]))
                    (nil))))))
(insn 93 92 94 2 (set (reg/f:DI 118 [ _37 ])
        (mem/f:DI (reg/f:DI 117 [ _36 ]) [4 *_36+0 S8 A64])) "game_of_life.c":189:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117 [ _36 ])
        (nil)))
(insn 94 93 97 2 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":189:23 75 {*movsi_internal}
     (nil))
(insn 97 94 98 2 (parallel [
            (set (reg:SI 224)
                (lshiftrt:SI (reg:SI 223)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 98 97 99 2 (parallel [
            (set (reg:SI 225)
                (plus:SI (reg:SI 224)
                    (reg:SI 223)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 224)
        (expr_list:REG_DEAD (reg:SI 223)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 99 98 100 2 (parallel [
            (set (reg:SI 226)
                (ashiftrt:SI (reg:SI 225)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 225)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 2 (set (reg:SI 119 [ _38 ])
        (reg:SI 226)) "game_of_life.c":189:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 226)
        (nil)))
(insn 101 100 102 2 (set (reg:DI 120 [ _39 ])
        (sign_extend:DI (reg:SI 119 [ _38 ]))) "game_of_life.c":189:23 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 119 [ _38 ])
        (nil)))
(insn 102 101 103 2 (parallel [
            (set (reg:DI 121 [ _40 ])
                (ashift:DI (reg:DI 120 [ _39 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 120 [ _39 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 103 102 104 2 (parallel [
            (set (reg/f:DI 122 [ _41 ])
                (plus:DI (reg/f:DI 118 [ _37 ])
                    (reg:DI 121 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":189:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _40 ])
        (expr_list:REG_DEAD (reg/f:DI 118 [ _37 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 104 103 105 2 (set (mem:SI (reg/f:DI 122 [ _41 ]) [2 *_41+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":189:29 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ _41 ])
        (nil)))
(insn 105 104 108 2 (set (reg:SI 227)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":190:10 75 {*movsi_internal}
     (nil))
(insn 108 105 109 2 (parallel [
            (set (reg:SI 228)
                (lshiftrt:SI (reg:SI 227)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 109 108 110 2 (parallel [
            (set (reg:SI 229)
                (plus:SI (reg:SI 228)
                    (reg:SI 227)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_DEAD (reg:SI 227)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 110 109 111 2 (parallel [
            (set (reg:SI 230)
                (ashiftrt:SI (reg:SI 229)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 229)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 111 110 112 2 (set (reg:SI 123 [ _42 ])
        (reg:SI 230)) "game_of_life.c":190:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 230)
        (nil)))
(insn 112 111 113 2 (set (reg:DI 124 [ _43 ])
        (sign_extend:DI (reg:SI 123 [ _42 ]))) "game_of_life.c":190:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 123 [ _42 ])
        (nil)))
(insn 113 112 114 2 (parallel [
            (set (reg:DI 125 [ _44 ])
                (plus:DI (reg:DI 124 [ _43 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 124 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 114 113 115 2 (parallel [
            (set (reg:DI 126 [ _45 ])
                (ashift:DI (reg:DI 125 [ _44 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 125 [ _44 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 115 114 116 2 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":190:6 74 {*movdi_internal}
     (nil))
(insn 116 115 117 2 (parallel [
            (set (reg/f:DI 127 [ _46 ])
                (plus:DI (reg:DI 126 [ _45 ])
                    (reg/f:DI 231)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 231)
        (expr_list:REG_DEAD (reg:DI 126 [ _45 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 126 [ _45 ]))
                    (nil))))))
(insn 117 116 118 2 (set (reg/f:DI 128 [ _47 ])
        (mem/f:DI (reg/f:DI 127 [ _46 ]) [4 *_46+0 S8 A64])) "game_of_life.c":190:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ _46 ])
        (nil)))
(insn 118 117 121 2 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":190:23 75 {*movsi_internal}
     (nil))
(insn 121 118 122 2 (parallel [
            (set (reg:SI 233)
                (lshiftrt:SI (reg:SI 232)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 122 121 123 2 (parallel [
            (set (reg:SI 234)
                (plus:SI (reg:SI 233)
                    (reg:SI 232)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 233)
        (expr_list:REG_DEAD (reg:SI 232)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 123 122 124 2 (parallel [
            (set (reg:SI 235)
                (ashiftrt:SI (reg:SI 234)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 234)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 124 123 125 2 (set (reg:SI 129 [ _48 ])
        (reg:SI 235)) "game_of_life.c":190:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 235)
        (nil)))
(insn 125 124 126 2 (set (reg:DI 130 [ _49 ])
        (sign_extend:DI (reg:SI 129 [ _48 ]))) "game_of_life.c":190:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 129 [ _48 ])
        (nil)))
(insn 126 125 127 2 (parallel [
            (set (reg:DI 131 [ _50 ])
                (plus:DI (reg:DI 130 [ _49 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 130 [ _49 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 2 (parallel [
            (set (reg:DI 132 [ _51 ])
                (ashift:DI (reg:DI 131 [ _50 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 131 [ _50 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 128 127 129 2 (parallel [
            (set (reg/f:DI 133 [ _52 ])
                (plus:DI (reg/f:DI 128 [ _47 ])
                    (reg:DI 132 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":190:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 132 [ _51 ])
        (expr_list:REG_DEAD (reg/f:DI 128 [ _47 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 129 128 130 2 (set (mem:SI (reg/f:DI 133 [ _52 ]) [2 *_52+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":190:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ _52 ])
        (nil)))
(insn 130 129 133 2 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":191:10 75 {*movsi_internal}
     (nil))
(insn 133 130 134 2 (parallel [
            (set (reg:SI 237)
                (lshiftrt:SI (reg:SI 236)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 134 133 135 2 (parallel [
            (set (reg:SI 238)
                (plus:SI (reg:SI 237)
                    (reg:SI 236)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 237)
        (expr_list:REG_DEAD (reg:SI 236)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 135 134 136 2 (parallel [
            (set (reg:SI 239)
                (ashiftrt:SI (reg:SI 238)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 238)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 136 135 137 2 (set (reg:SI 134 [ _53 ])
        (reg:SI 239)) "game_of_life.c":191:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 239)
        (nil)))
(insn 137 136 138 2 (set (reg:DI 135 [ _54 ])
        (sign_extend:DI (reg:SI 134 [ _53 ]))) "game_of_life.c":191:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 134 [ _53 ])
        (nil)))
(insn 138 137 139 2 (parallel [
            (set (reg:DI 136 [ _55 ])
                (plus:DI (reg:DI 135 [ _54 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 135 [ _54 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 2 (parallel [
            (set (reg:DI 137 [ _56 ])
                (ashift:DI (reg:DI 136 [ _55 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 136 [ _55 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 2 (set (reg/f:DI 240)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":191:6 74 {*movdi_internal}
     (nil))
(insn 141 140 142 2 (parallel [
            (set (reg/f:DI 138 [ _57 ])
                (plus:DI (reg:DI 137 [ _56 ])
                    (reg/f:DI 240)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 240)
        (expr_list:REG_DEAD (reg:DI 137 [ _56 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 137 [ _56 ]))
                    (nil))))))
(insn 142 141 143 2 (set (reg/f:DI 139 [ _58 ])
        (mem/f:DI (reg/f:DI 138 [ _57 ]) [4 *_57+0 S8 A64])) "game_of_life.c":191:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ _57 ])
        (nil)))
(insn 143 142 146 2 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":191:23 75 {*movsi_internal}
     (nil))
(insn 146 143 147 2 (parallel [
            (set (reg:SI 242)
                (lshiftrt:SI (reg:SI 241)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 147 146 148 2 (parallel [
            (set (reg:SI 243)
                (plus:SI (reg:SI 242)
                    (reg:SI 241)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 242)
        (expr_list:REG_DEAD (reg:SI 241)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 148 147 149 2 (parallel [
            (set (reg:SI 244)
                (ashiftrt:SI (reg:SI 243)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 243)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 2 (set (reg:SI 140 [ _59 ])
        (reg:SI 244)) "game_of_life.c":191:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 244)
        (nil)))
(insn 150 149 151 2 (set (reg:DI 141 [ _60 ])
        (sign_extend:DI (reg:SI 140 [ _59 ]))) "game_of_life.c":191:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 140 [ _59 ])
        (nil)))
(insn 151 150 152 2 (parallel [
            (set (reg:DI 142 [ _61 ])
                (plus:DI (reg:DI 141 [ _60 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ _60 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 152 151 153 2 (parallel [
            (set (reg:DI 143 [ _62 ])
                (ashift:DI (reg:DI 142 [ _61 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 142 [ _61 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 153 152 154 2 (parallel [
            (set (reg/f:DI 144 [ _63 ])
                (plus:DI (reg/f:DI 139 [ _58 ])
                    (reg:DI 143 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":191:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 143 [ _62 ])
        (expr_list:REG_DEAD (reg/f:DI 139 [ _58 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 154 153 155 2 (set (mem:SI (reg/f:DI 144 [ _63 ]) [2 *_63+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":191:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ _63 ])
        (nil)))
(insn 155 154 158 2 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":192:10 75 {*movsi_internal}
     (nil))
(insn 158 155 159 2 (parallel [
            (set (reg:SI 246)
                (lshiftrt:SI (reg:SI 245)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 159 158 160 2 (parallel [
            (set (reg:SI 247)
                (plus:SI (reg:SI 246)
                    (reg:SI 245)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 246)
        (expr_list:REG_DEAD (reg:SI 245)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 160 159 161 2 (parallel [
            (set (reg:SI 248)
                (ashiftrt:SI (reg:SI 247)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 247)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 161 160 162 2 (set (reg:SI 145 [ _64 ])
        (reg:SI 248)) "game_of_life.c":192:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 248)
        (nil)))
(insn 162 161 163 2 (set (reg:DI 146 [ _65 ])
        (sign_extend:DI (reg:SI 145 [ _64 ]))) "game_of_life.c":192:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 145 [ _64 ])
        (nil)))
(insn 163 162 164 2 (parallel [
            (set (reg:DI 147 [ _66 ])
                (plus:DI (reg:DI 146 [ _65 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 146 [ _65 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 2 (parallel [
            (set (reg:DI 148 [ _67 ])
                (ashift:DI (reg:DI 147 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 147 [ _66 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 165 164 166 2 (set (reg/f:DI 249)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":192:6 74 {*movdi_internal}
     (nil))
(insn 166 165 167 2 (parallel [
            (set (reg/f:DI 149 [ _68 ])
                (plus:DI (reg:DI 148 [ _67 ])
                    (reg/f:DI 249)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 249)
        (expr_list:REG_DEAD (reg:DI 148 [ _67 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 148 [ _67 ]))
                    (nil))))))
(insn 167 166 168 2 (set (reg/f:DI 150 [ _69 ])
        (mem/f:DI (reg/f:DI 149 [ _68 ]) [4 *_68+0 S8 A64])) "game_of_life.c":192:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 149 [ _68 ])
        (nil)))
(insn 168 167 171 2 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":192:23 75 {*movsi_internal}
     (nil))
(insn 171 168 172 2 (parallel [
            (set (reg:SI 251)
                (lshiftrt:SI (reg:SI 250)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 172 171 173 2 (parallel [
            (set (reg:SI 252)
                (plus:SI (reg:SI 251)
                    (reg:SI 250)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 251)
        (expr_list:REG_DEAD (reg:SI 250)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 173 172 174 2 (parallel [
            (set (reg:SI 253)
                (ashiftrt:SI (reg:SI 252)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 252)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 174 173 175 2 (set (reg:SI 151 [ _70 ])
        (reg:SI 253)) "game_of_life.c":192:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 253)
        (nil)))
(insn 175 174 176 2 (set (reg:DI 152 [ _71 ])
        (sign_extend:DI (reg:SI 151 [ _70 ]))) "game_of_life.c":192:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 151 [ _70 ])
        (nil)))
(insn 176 175 177 2 (parallel [
            (set (reg:DI 153 [ _72 ])
                (plus:DI (reg:DI 152 [ _71 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 152 [ _71 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 177 176 178 2 (parallel [
            (set (reg:DI 154 [ _73 ])
                (ashift:DI (reg:DI 153 [ _72 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 153 [ _72 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 178 177 179 2 (parallel [
            (set (reg/f:DI 155 [ _74 ])
                (plus:DI (reg/f:DI 150 [ _69 ])
                    (reg:DI 154 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":192:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 154 [ _73 ])
        (expr_list:REG_DEAD (reg/f:DI 150 [ _69 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 179 178 180 2 (set (mem:SI (reg/f:DI 155 [ _74 ]) [2 *_74+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":192:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 155 [ _74 ])
        (nil)))
(insn 180 179 183 2 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":193:10 75 {*movsi_internal}
     (nil))
(insn 183 180 184 2 (parallel [
            (set (reg:SI 255)
                (lshiftrt:SI (reg:SI 254)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 184 183 185 2 (parallel [
            (set (reg:SI 256)
                (plus:SI (reg:SI 255)
                    (reg:SI 254)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 255)
        (expr_list:REG_DEAD (reg:SI 254)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 185 184 186 2 (parallel [
            (set (reg:SI 257)
                (ashiftrt:SI (reg:SI 256)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 256)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 186 185 187 2 (set (reg:SI 156 [ _75 ])
        (reg:SI 257)) "game_of_life.c":193:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 257)
        (nil)))
(insn 187 186 188 2 (set (reg:DI 157 [ _76 ])
        (sign_extend:DI (reg:SI 156 [ _75 ]))) "game_of_life.c":193:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 156 [ _75 ])
        (nil)))
(insn 188 187 189 2 (parallel [
            (set (reg:DI 158 [ _77 ])
                (plus:DI (reg:DI 157 [ _76 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 157 [ _76 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 189 188 190 2 (parallel [
            (set (reg:DI 159 [ _78 ])
                (ashift:DI (reg:DI 158 [ _77 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 158 [ _77 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 190 189 191 2 (set (reg/f:DI 258)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":193:6 74 {*movdi_internal}
     (nil))
(insn 191 190 192 2 (parallel [
            (set (reg/f:DI 160 [ _79 ])
                (plus:DI (reg:DI 159 [ _78 ])
                    (reg/f:DI 258)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 258)
        (expr_list:REG_DEAD (reg:DI 159 [ _78 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 159 [ _78 ]))
                    (nil))))))
(insn 192 191 193 2 (set (reg/f:DI 161 [ _80 ])
        (mem/f:DI (reg/f:DI 160 [ _79 ]) [4 *_79+0 S8 A64])) "game_of_life.c":193:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ _79 ])
        (nil)))
(insn 193 192 196 2 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":193:23 75 {*movsi_internal}
     (nil))
(insn 196 193 197 2 (parallel [
            (set (reg:SI 260)
                (lshiftrt:SI (reg:SI 259)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 197 196 198 2 (parallel [
            (set (reg:SI 261)
                (plus:SI (reg:SI 260)
                    (reg:SI 259)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 260)
        (expr_list:REG_DEAD (reg:SI 259)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 198 197 199 2 (parallel [
            (set (reg:SI 262)
                (ashiftrt:SI (reg:SI 261)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 261)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 199 198 200 2 (set (reg:SI 162 [ _81 ])
        (reg:SI 262)) "game_of_life.c":193:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
(insn 200 199 201 2 (set (reg:DI 163 [ _82 ])
        (sign_extend:DI (reg:SI 162 [ _81 ]))) "game_of_life.c":193:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 162 [ _81 ])
        (nil)))
(insn 201 200 202 2 (parallel [
            (set (reg:DI 164 [ _83 ])
                (plus:DI (reg:DI 163 [ _82 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 163 [ _82 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 202 201 203 2 (parallel [
            (set (reg:DI 165 [ _84 ])
                (ashift:DI (reg:DI 164 [ _83 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 164 [ _83 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 203 202 204 2 (parallel [
            (set (reg/f:DI 166 [ _85 ])
                (plus:DI (reg/f:DI 161 [ _80 ])
                    (reg:DI 165 [ _84 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":193:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 165 [ _84 ])
        (expr_list:REG_DEAD (reg/f:DI 161 [ _80 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 204 203 205 2 (set (mem:SI (reg/f:DI 166 [ _85 ]) [2 *_85+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":193:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 166 [ _85 ])
        (nil)))
(insn 205 204 208 2 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":194:10 75 {*movsi_internal}
     (nil))
(insn 208 205 209 2 (parallel [
            (set (reg:SI 264)
                (lshiftrt:SI (reg:SI 263)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 209 208 210 2 (parallel [
            (set (reg:SI 265)
                (plus:SI (reg:SI 264)
                    (reg:SI 263)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 264)
        (expr_list:REG_DEAD (reg:SI 263)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 210 209 211 2 (parallel [
            (set (reg:SI 266)
                (ashiftrt:SI (reg:SI 265)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 265)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 211 210 212 2 (set (reg:SI 167 [ _86 ])
        (reg:SI 266)) "game_of_life.c":194:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 266)
        (nil)))
(insn 212 211 213 2 (set (reg:DI 168 [ _87 ])
        (sign_extend:DI (reg:SI 167 [ _86 ]))) "game_of_life.c":194:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 167 [ _86 ])
        (nil)))
(insn 213 212 214 2 (parallel [
            (set (reg:DI 169 [ _88 ])
                (plus:DI (reg:DI 168 [ _87 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 168 [ _87 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 214 213 215 2 (parallel [
            (set (reg:DI 170 [ _89 ])
                (ashift:DI (reg:DI 169 [ _88 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 169 [ _88 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 215 214 216 2 (set (reg/f:DI 267)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":194:6 74 {*movdi_internal}
     (nil))
(insn 216 215 217 2 (parallel [
            (set (reg/f:DI 171 [ _90 ])
                (plus:DI (reg:DI 170 [ _89 ])
                    (reg/f:DI 267)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 267)
        (expr_list:REG_DEAD (reg:DI 170 [ _89 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 170 [ _89 ]))
                    (nil))))))
(insn 217 216 218 2 (set (reg/f:DI 172 [ _91 ])
        (mem/f:DI (reg/f:DI 171 [ _90 ]) [4 *_90+0 S8 A64])) "game_of_life.c":194:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171 [ _90 ])
        (nil)))
(insn 218 217 221 2 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":194:23 75 {*movsi_internal}
     (nil))
(insn 221 218 222 2 (parallel [
            (set (reg:SI 269)
                (lshiftrt:SI (reg:SI 268)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 222 221 223 2 (parallel [
            (set (reg:SI 270)
                (plus:SI (reg:SI 269)
                    (reg:SI 268)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 269)
        (expr_list:REG_DEAD (reg:SI 268)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 223 222 224 2 (parallel [
            (set (reg:SI 271)
                (ashiftrt:SI (reg:SI 270)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 270)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 224 223 225 2 (set (reg:SI 173 [ _92 ])
        (reg:SI 271)) "game_of_life.c":194:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 271)
        (nil)))
(insn 225 224 226 2 (set (reg:DI 174 [ _93 ])
        (sign_extend:DI (reg:SI 173 [ _92 ]))) "game_of_life.c":194:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 173 [ _92 ])
        (nil)))
(insn 226 225 227 2 (parallel [
            (set (reg:DI 175 [ _94 ])
                (plus:DI (reg:DI 174 [ _93 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 174 [ _93 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 227 226 228 2 (parallel [
            (set (reg:DI 176 [ _95 ])
                (ashift:DI (reg:DI 175 [ _94 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 175 [ _94 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 228 227 229 2 (parallel [
            (set (reg/f:DI 177 [ _96 ])
                (plus:DI (reg/f:DI 172 [ _91 ])
                    (reg:DI 176 [ _95 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":194:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 176 [ _95 ])
        (expr_list:REG_DEAD (reg/f:DI 172 [ _91 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 229 228 230 2 (set (mem:SI (reg/f:DI 177 [ _96 ]) [2 *_96+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":194:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 177 [ _96 ])
        (nil)))
(insn 230 229 233 2 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 N+0 S4 A32])) "game_of_life.c":195:10 75 {*movsi_internal}
     (nil))
(insn 233 230 234 2 (parallel [
            (set (reg:SI 273)
                (lshiftrt:SI (reg:SI 272)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:10 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 234 233 235 2 (parallel [
            (set (reg:SI 274)
                (plus:SI (reg:SI 273)
                    (reg:SI 272)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:10 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 273)
        (expr_list:REG_DEAD (reg:SI 272)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 235 234 236 2 (parallel [
            (set (reg:SI 275)
                (ashiftrt:SI (reg:SI 274)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:10 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 274)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 236 235 237 2 (set (reg:SI 178 [ _97 ])
        (reg:SI 275)) "game_of_life.c":195:10 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 275)
        (nil)))
(insn 237 236 238 2 (set (reg:DI 179 [ _98 ])
        (sign_extend:DI (reg:SI 178 [ _97 ]))) "game_of_life.c":195:6 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 178 [ _97 ])
        (nil)))
(insn 238 237 239 2 (parallel [
            (set (reg:DI 180 [ _99 ])
                (plus:DI (reg:DI 179 [ _98 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 179 [ _98 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 239 238 240 2 (parallel [
            (set (reg:DI 181 [ _100 ])
                (ashift:DI (reg:DI 180 [ _99 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:6 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 180 [ _99 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 240 239 241 2 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":195:6 74 {*movdi_internal}
     (nil))
(insn 241 240 242 2 (parallel [
            (set (reg/f:DI 182 [ _101 ])
                (plus:DI (reg:DI 181 [ _100 ])
                    (reg/f:DI 276)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:6 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (expr_list:REG_DEAD (reg:DI 181 [ _100 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 181 [ _100 ]))
                    (nil))))))
(insn 242 241 243 2 (set (reg/f:DI 183 [ _102 ])
        (mem/f:DI (reg/f:DI 182 [ _101 ]) [4 *_101+0 S8 A64])) "game_of_life.c":195:6 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 182 [ _101 ])
        (nil)))
(insn 243 242 246 2 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 M+0 S4 A32])) "game_of_life.c":195:23 75 {*movsi_internal}
     (nil))
(insn 246 243 247 2 (parallel [
            (set (reg:SI 278)
                (lshiftrt:SI (reg:SI 277)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:23 701 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 247 246 248 2 (parallel [
            (set (reg:SI 279)
                (plus:SI (reg:SI 278)
                    (reg:SI 277)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:23 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 278)
        (expr_list:REG_DEAD (reg:SI 277)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 248 247 249 2 (parallel [
            (set (reg:SI 280)
                (ashiftrt:SI (reg:SI 279)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:23 702 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 279)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 248 250 2 (set (reg:SI 184 [ _103 ])
        (reg:SI 280)) "game_of_life.c":195:23 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 280)
        (nil)))
(insn 250 249 251 2 (set (reg:DI 185 [ _104 ])
        (sign_extend:DI (reg:SI 184 [ _103 ]))) "game_of_life.c":195:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 184 [ _103 ])
        (nil)))
(insn 251 250 252 2 (parallel [
            (set (reg:DI 186 [ _105 ])
                (plus:DI (reg:DI 185 [ _104 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 185 [ _104 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 252 251 253 2 (parallel [
            (set (reg:DI 187 [ _106 ])
                (ashift:DI (reg:DI 186 [ _105 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:19 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 186 [ _105 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 253 252 254 2 (parallel [
            (set (reg/f:DI 188 [ _107 ])
                (plus:DI (reg/f:DI 183 [ _102 ])
                    (reg:DI 187 [ _106 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":195:19 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 187 [ _106 ])
        (expr_list:REG_DEAD (reg/f:DI 183 [ _102 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 254 253 255 2 (set (mem:SI (reg/f:DI 188 [ _107 ]) [2 *_107+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":195:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 188 [ _107 ])
        (nil)))
(insn 255 254 258 2 (set (reg/f:DI 189 [ _122 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":197:12 74 {*movdi_internal}
     (nil))
(insn 258 255 262 2 (set (reg/f:DI 190 [ <retval> ])
        (reg/f:DI 189 [ _122 ])) "game_of_life.c":197:12 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 189 [ _122 ])
        (nil)))
(insn 262 258 263 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 190 [ <retval> ])) "game_of_life.c":198:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 190 [ <retval> ])
        (nil)))
(insn 263 262 0 2 (use (reg/i:DI 0 ax)) "game_of_life.c":198:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function dynamic_array_move_life (dynamic_array_move_life, funcdef_no=16, decl_uid=4960, cgraph_uid=17, symbol_order=16)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 39 n_edges 55 count 39 (    1)
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
;;
;; Loop 2
;;  header 37, latch 36
;;  depth 1, outer 0
;;  nodes: 37 36 35 34 9 31 32 33 30 29 27 28 26 24 25 22 23 20 21 18 19 16 17 14 15 12 13 10 11
;;
;; Loop 3
;;  header 35, latch 34
;;  depth 2, outer 2
;;  nodes: 35 34 31 32 33 30 29 27 28 26 24 25 22 23 20 21 18 19 16 17 14 15 12 13 10 11
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 5 4 3
;;
;; Loop 4
;;  header 5, latch 4
;;  depth 2, outer 1
;;  nodes: 5 4
;; 2 succs { 7 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 37 }
;; 9 succs { 35 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 26 }
;; 26 succs { 27 30 }
;; 27 succs { 29 28 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 34 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 }
;; 35 succs { 10 36 }
;; 36 succs { 37 }
;; 37 succs { 9 38 }
;; 38 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 86.
verify found no changes in insn with uid = 103.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 131.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 160.
verify found no changes in insn with uid = 172.
verify found no changes in insn with uid = 189.
verify found no changes in insn with uid = 200.
verify found no changes in insn with uid = 217.
verify found no changes in insn with uid = 229.
verify found no changes in insn with uid = 245.
verify found no changes in insn with uid = 257.
verify found no changes in insn with uid = 274.
verify found no changes in insn with uid = 286.
verify found no changes in insn with uid = 397.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r297: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r297,l0) best DIREG, allocno GENERAL_REGS
    r296: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r296,l0) best SIREG, allocno GENERAL_REGS
    r295: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r295,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r294: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r294,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r293: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r293,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r292: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r292,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r290: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r290,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r289,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r287,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r286: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r286,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r284: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r284,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r283: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r283,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r281: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r281,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r280,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r278: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a65 (r278,l0) best SIREG, allocno GENERAL_REGS
    r277: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r277,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a73 (r275,l0) best SIREG, allocno GENERAL_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r274,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r273: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a82 (r273,l0) best SIREG, allocno GENERAL_REGS
    r272: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r272,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r271: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r271,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a89 (r270,l0) best DIREG, allocno GENERAL_REGS
    r269: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a90 (r269,l0) best SIREG, allocno GENERAL_REGS
    r268: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a98 (r268,l0) best SIREG, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r266: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r266,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r265: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a106 (r265,l0) best SIREG, allocno GENERAL_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a107 (r264,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r263: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a114 (r263,l0) best DIREG, allocno GENERAL_REGS
    r262: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a115 (r262,l0) best SIREG, allocno GENERAL_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a117 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r260: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a122 (r260,l0) best SIREG, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a123 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r258: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a131 (r258,l0) best SIREG, allocno GENERAL_REGS
    r257: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a132 (r257,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a134 (r256,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a139 (r255,l0) best SIREG, allocno GENERAL_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a140 (r254,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a148 (r253,l0) best SIREG, allocno GENERAL_REGS
    r252: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a149 (r252,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a151 (r251,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a155 (r250,l0) best DIREG, allocno GENERAL_REGS
    r249: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a156 (r249,l0) best SIREG, allocno GENERAL_REGS
    r248: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a164 (r248,l0) best SIREG, allocno GENERAL_REGS
    r247: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a165 (r247,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a167 (r246,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a172 (r245,l0) best SIREG, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a173 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r243: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a180 (r243,l0) best DIREG, allocno GENERAL_REGS
    r242: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a181 (r242,l0) best SIREG, allocno GENERAL_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a183 (r241,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a188 (r240,l0) best SIREG, allocno GENERAL_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a189 (r239,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a190 (r238,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a191 (r237,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a198 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a200 (r235,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a203 (r234,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a207 (r233,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a209 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a212 (r231,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a213 (r230,l0) best AREG, allocno GENERAL_REGS
    r229: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a214 (r229,l0) best DIREG, allocno GENERAL_REGS
    r228: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a215 (r228,l0) best SIREG, allocno GENERAL_REGS
    r227: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r227,l0) best AREG, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r226,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r225,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r223,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r222,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r221,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r219,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r218,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r217,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r215,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r214,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r213,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r212,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r211,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r210,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r209,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r208,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r207,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r206,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r205,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r192,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r188,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r187,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a63 (r184,l0) best AREG, allocno GENERAL_REGS
    r183: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a64 (r183,l0) best DIREG, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a71 (r178,l0) best AREG, allocno GENERAL_REGS
    r177: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a72 (r177,l0) best DIREG, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a80 (r172,l0) best AREG, allocno GENERAL_REGS
    r171: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a81 (r171,l0) best DIREG, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a88 (r166,l0) best AREG, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a96 (r161,l0) best AREG, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a97 (r160,l0) best DIREG, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a104 (r155,l0) best AREG, allocno GENERAL_REGS
    r154: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a105 (r154,l0) best DIREG, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a108 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a109 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a110 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a112 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a113 (r149,l0) best AREG, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a111 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a116 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a118 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a119 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a120 (r144,l0) best AREG, allocno GENERAL_REGS
    r143: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a121 (r143,l0) best DIREG, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a124 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a125 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a126 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a128 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r138,l0) best AREG, allocno GENERAL_REGS
    r137: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a130 (r137,l0) best DIREG, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a127 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a133 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a135 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a136 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a137 (r132,l0) best AREG, allocno GENERAL_REGS
    r131: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a138 (r131,l0) best DIREG, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a141 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a142 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a143 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a145 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a146 (r126,l0) best AREG, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a147 (r125,l0) best DIREG, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a144 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a150 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a152 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a153 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a154 (r120,l0) best AREG, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a157 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a158 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a159 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a161 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a162 (r115,l0) best AREG, allocno GENERAL_REGS
    r114: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a163 (r114,l0) best DIREG, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a160 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a166 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a168 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a169 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a170 (r109,l0) best AREG, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a171 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a174 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a175 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a176 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a178 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a179 (r103,l0) best AREG, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a177 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a182 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a184 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a185 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a186 (r98,l0) best AREG, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a187 (r97,l0) best DIREG, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a193 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a192 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a195 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a197 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a196 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a199 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a201 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a202 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a194 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a204 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a206 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a205 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a208 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a210 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a211 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r227,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r226,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r297,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r296,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r295,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r294,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r225,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a7(r224,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a8(r222,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a9(r223,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a10(r293,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a11(r221,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a12(r292,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a13(r220,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a14(r219,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a15(r291,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a16(r218,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a17(r217,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a18(r216,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a19(r214,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a20(r215,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a21(r290,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a22(r213,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a23(r289,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a24(r212,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a25(r211,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a26(r288,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a27(r210,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a28(r209,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a29(r207,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a30(r208,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a31(r287,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a32(r206,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a33(r286,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a34(r205,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a35(r204,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a36(r285,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a37(r203,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a38(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a39(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a40(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a41(r284,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a42(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a43(r283,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a44(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a45(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a46(r282,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a47(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a48(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a49(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a50(r192,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a51(r193,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a52(r281,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a53(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a54(r280,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a55(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a56(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a57(r279,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a58(r188,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a59(r187,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a60(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a61(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a62(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a63(r184,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a64(r183,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a65(r278,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a66(r277,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a67(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a68(r276,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a69(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a70(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a71(r178,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a72(r177,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a73(r275,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a74(r274,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a75(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a76(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a77(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a78(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a79(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a80(r172,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a81(r171,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a82(r273,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a83(r272,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a84(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a85(r271,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a86(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a87(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a88(r166,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a89(r270,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a90(r269,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a91(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a92(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a93(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a94(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a95(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a96(r161,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a97(r160,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a98(r268,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a99(r267,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a100(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a101(r266,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a102(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a103(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a104(r155,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a105(r154,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a106(r265,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a107(r264,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a108(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a109(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a110(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a111(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a112(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a113(r149,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a114(r263,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a115(r262,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a116(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a117(r261,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a118(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a119(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a120(r144,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a121(r143,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a122(r260,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a123(r259,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a124(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a125(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a126(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a127(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a128(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a129(r138,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a130(r137,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a131(r258,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a132(r257,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a133(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a134(r256,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a135(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a136(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a137(r132,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a138(r131,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a139(r255,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a140(r254,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a141(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a142(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a143(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a144(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a145(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a146(r126,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a147(r125,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a148(r253,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a149(r252,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a150(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a151(r251,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a152(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a153(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a154(r120,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a155(r250,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a156(r249,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a157(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a158(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a159(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a160(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a161(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a162(r115,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a163(r114,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a164(r248,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a165(r247,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a166(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a167(r246,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a168(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a169(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a170(r109,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a171(r108,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a172(r245,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a173(r244,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a174(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a175(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a176(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a177(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a178(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a179(r103,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a180(r243,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a181(r242,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a182(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a183(r241,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a184(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a185(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a186(r98,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a187(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a188(r240,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a189(r239,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:22000 INT_SSE_REGS:22000 ALL_REGS:210000 MEM:11000
  a190(r238,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a191(r237,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a192(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a193(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a194(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a195(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a196(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a197(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a198(r236,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a199(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a200(r235,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a201(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a202(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a203(r234,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a204(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a205(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a206(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a207(r233,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a208(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a209(r232,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a210(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a211(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a212(r231,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a213(r230,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a214(r229,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a215(r228,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 406(l0): point = 0
   Insn 405(l0): point = 2
   Insn 401(l0): point = 4
   Insn 398(l0): point = 6
   Insn 397(l0): point = 8
   Insn 396(l0): point = 10
   Insn 395(l0): point = 12
   Insn 394(l0): point = 14
   Insn 393(l0): point = 16
   Insn 414(l0): point = 19
   Insn 65(l0): point = 21
   Insn 391(l0): point = 24
   Insn 390(l0): point = 26
   Insn 389(l0): point = 28
   Insn 385(l0): point = 31
   Insn 383(l0): point = 34
   Insn 382(l0): point = 36
   Insn 381(l0): point = 38
   Insn 377(l0): point = 41
   Insn 359(l0): point = 44
   Insn 358(l0): point = 46
   Insn 357(l0): point = 48
   Insn 356(l0): point = 50
   Insn 355(l0): point = 52
   Insn 354(l0): point = 54
   Insn 353(l0): point = 56
   Insn 352(l0): point = 58
   Insn 351(l0): point = 60
   Insn 350(l0): point = 62
   Insn 349(l0): point = 64
   Insn 348(l0): point = 66
   Insn 347(l0): point = 68
   Insn 344(l0): point = 71
   Insn 343(l0): point = 73
   Insn 342(l0): point = 75
   Insn 341(l0): point = 77
   Insn 340(l0): point = 79
   Insn 339(l0): point = 81
   Insn 338(l0): point = 83
   Insn 337(l0): point = 85
   Insn 336(l0): point = 87
   Insn 335(l0): point = 89
   Insn 334(l0): point = 91
   Insn 416(l0): point = 94
   Insn 329(l0): point = 96
   Insn 328(l0): point = 98
   Insn 327(l0): point = 100
   Insn 326(l0): point = 102
   Insn 325(l0): point = 104
   Insn 324(l0): point = 106
   Insn 323(l0): point = 108
   Insn 322(l0): point = 110
   Insn 321(l0): point = 112
   Insn 320(l0): point = 114
   Insn 319(l0): point = 116
   Insn 313(l0): point = 119
   Insn 312(l0): point = 121
   Insn 310(l0): point = 124
   Insn 309(l0): point = 126
   Insn 308(l0): point = 128
   Insn 307(l0): point = 130
   Insn 306(l0): point = 132
   Insn 305(l0): point = 134
   Insn 304(l0): point = 136
   Insn 303(l0): point = 138
   Insn 302(l0): point = 140
   Insn 301(l0): point = 142
   Insn 300(l0): point = 144
   Insn 299(l0): point = 146
   Insn 298(l0): point = 148
   Insn 293(l0): point = 151
   Insn 292(l0): point = 153
   Insn 291(l0): point = 155
   Insn 290(l0): point = 157
   Insn 289(l0): point = 159
   Insn 288(l0): point = 161
   Insn 287(l0): point = 163
   Insn 286(l0): point = 165
   Insn 285(l0): point = 167
   Insn 284(l0): point = 169
   Insn 283(l0): point = 171
   Insn 282(l0): point = 173
   Insn 281(l0): point = 175
   Insn 280(l0): point = 177
   Insn 279(l0): point = 179
   Insn 278(l0): point = 181
   Insn 277(l0): point = 183
   Insn 276(l0): point = 185
   Insn 275(l0): point = 187
   Insn 274(l0): point = 189
   Insn 273(l0): point = 191
   Insn 272(l0): point = 193
   Insn 271(l0): point = 195
   Insn 270(l0): point = 197
   Insn 269(l0): point = 199
   Insn 264(l0): point = 202
   Insn 263(l0): point = 204
   Insn 262(l0): point = 206
   Insn 261(l0): point = 208
   Insn 260(l0): point = 210
   Insn 259(l0): point = 212
   Insn 258(l0): point = 214
   Insn 257(l0): point = 216
   Insn 256(l0): point = 218
   Insn 255(l0): point = 220
   Insn 254(l0): point = 222
   Insn 253(l0): point = 224
   Insn 252(l0): point = 226
   Insn 251(l0): point = 228
   Insn 250(l0): point = 230
   Insn 249(l0): point = 232
   Insn 248(l0): point = 234
   Insn 247(l0): point = 236
   Insn 246(l0): point = 238
   Insn 245(l0): point = 240
   Insn 244(l0): point = 242
   Insn 243(l0): point = 244
   Insn 242(l0): point = 246
   Insn 241(l0): point = 248
   Insn 236(l0): point = 251
   Insn 235(l0): point = 253
   Insn 234(l0): point = 255
   Insn 233(l0): point = 257
   Insn 232(l0): point = 259
   Insn 231(l0): point = 261
   Insn 230(l0): point = 263
   Insn 229(l0): point = 265
   Insn 228(l0): point = 267
   Insn 227(l0): point = 269
   Insn 226(l0): point = 271
   Insn 225(l0): point = 273
   Insn 224(l0): point = 275
   Insn 223(l0): point = 277
   Insn 222(l0): point = 279
   Insn 221(l0): point = 281
   Insn 220(l0): point = 283
   Insn 219(l0): point = 285
   Insn 218(l0): point = 287
   Insn 217(l0): point = 289
   Insn 216(l0): point = 291
   Insn 215(l0): point = 293
   Insn 214(l0): point = 295
   Insn 213(l0): point = 297
   Insn 212(l0): point = 299
   Insn 207(l0): point = 302
   Insn 206(l0): point = 304
   Insn 205(l0): point = 306
   Insn 204(l0): point = 308
   Insn 203(l0): point = 310
   Insn 202(l0): point = 312
   Insn 201(l0): point = 314
   Insn 200(l0): point = 316
   Insn 199(l0): point = 318
   Insn 198(l0): point = 320
   Insn 197(l0): point = 322
   Insn 196(l0): point = 324
   Insn 195(l0): point = 326
   Insn 194(l0): point = 328
   Insn 193(l0): point = 330
   Insn 192(l0): point = 332
   Insn 191(l0): point = 334
   Insn 190(l0): point = 336
   Insn 189(l0): point = 338
   Insn 188(l0): point = 340
   Insn 187(l0): point = 342
   Insn 186(l0): point = 344
   Insn 185(l0): point = 346
   Insn 184(l0): point = 348
   Insn 179(l0): point = 351
   Insn 178(l0): point = 353
   Insn 177(l0): point = 355
   Insn 176(l0): point = 357
   Insn 175(l0): point = 359
   Insn 174(l0): point = 361
   Insn 173(l0): point = 363
   Insn 172(l0): point = 365
   Insn 171(l0): point = 367
   Insn 170(l0): point = 369
   Insn 169(l0): point = 371
   Insn 168(l0): point = 373
   Insn 167(l0): point = 375
   Insn 166(l0): point = 377
   Insn 165(l0): point = 379
   Insn 164(l0): point = 381
   Insn 163(l0): point = 383
   Insn 162(l0): point = 385
   Insn 161(l0): point = 387
   Insn 160(l0): point = 389
   Insn 159(l0): point = 391
   Insn 158(l0): point = 393
   Insn 157(l0): point = 395
   Insn 156(l0): point = 397
   Insn 155(l0): point = 399
   Insn 150(l0): point = 402
   Insn 149(l0): point = 404
   Insn 148(l0): point = 406
   Insn 147(l0): point = 408
   Insn 146(l0): point = 410
   Insn 145(l0): point = 412
   Insn 144(l0): point = 414
   Insn 143(l0): point = 416
   Insn 142(l0): point = 418
   Insn 141(l0): point = 420
   Insn 140(l0): point = 422
   Insn 139(l0): point = 424
   Insn 138(l0): point = 426
   Insn 137(l0): point = 428
   Insn 136(l0): point = 430
   Insn 135(l0): point = 432
   Insn 134(l0): point = 434
   Insn 133(l0): point = 436
   Insn 132(l0): point = 438
   Insn 131(l0): point = 440
   Insn 130(l0): point = 442
   Insn 129(l0): point = 444
   Insn 128(l0): point = 446
   Insn 127(l0): point = 448
   Insn 122(l0): point = 451
   Insn 121(l0): point = 453
   Insn 120(l0): point = 455
   Insn 119(l0): point = 457
   Insn 118(l0): point = 459
   Insn 117(l0): point = 461
   Insn 116(l0): point = 463
   Insn 115(l0): point = 465
   Insn 114(l0): point = 467
   Insn 113(l0): point = 469
   Insn 112(l0): point = 471
   Insn 111(l0): point = 473
   Insn 110(l0): point = 475
   Insn 109(l0): point = 477
   Insn 108(l0): point = 479
   Insn 107(l0): point = 481
   Insn 106(l0): point = 483
   Insn 105(l0): point = 485
   Insn 104(l0): point = 487
   Insn 103(l0): point = 489
   Insn 102(l0): point = 491
   Insn 101(l0): point = 493
   Insn 100(l0): point = 495
   Insn 99(l0): point = 497
   Insn 98(l0): point = 499
   Insn 93(l0): point = 502
   Insn 92(l0): point = 504
   Insn 91(l0): point = 506
   Insn 90(l0): point = 508
   Insn 89(l0): point = 510
   Insn 88(l0): point = 512
   Insn 87(l0): point = 514
   Insn 86(l0): point = 516
   Insn 85(l0): point = 518
   Insn 84(l0): point = 520
   Insn 83(l0): point = 522
   Insn 82(l0): point = 524
   Insn 81(l0): point = 526
   Insn 80(l0): point = 528
   Insn 79(l0): point = 530
   Insn 78(l0): point = 532
   Insn 77(l0): point = 534
   Insn 76(l0): point = 536
   Insn 75(l0): point = 538
   Insn 74(l0): point = 540
   Insn 73(l0): point = 542
   Insn 72(l0): point = 544
   Insn 71(l0): point = 546
   Insn 70(l0): point = 548
   Insn 69(l0): point = 550
   Insn 95(l0): point = 553
   Insn 124(l0): point = 556
   Insn 152(l0): point = 559
   Insn 181(l0): point = 562
   Insn 209(l0): point = 565
   Insn 238(l0): point = 568
   Insn 266(l0): point = 571
   Insn 295(l0): point = 574
   Insn 316(l0): point = 577
   Insn 315(l0): point = 579
   Insn 362(l0): point = 582
   Insn 361(l0): point = 584
   Insn 374(l0): point = 587
   Insn 373(l0): point = 589
   Insn 372(l0): point = 591
   Insn 371(l0): point = 593
   Insn 370(l0): point = 595
   Insn 369(l0): point = 597
   Insn 368(l0): point = 599
   Insn 367(l0): point = 601
   Insn 366(l0): point = 603
   Insn 365(l0): point = 605
   Insn 364(l0): point = 607
   Insn 412(l0): point = 610
   Insn 61(l0): point = 612
   Insn 410(l0): point = 615
   Insn 19(l0): point = 617
   Insn 59(l0): point = 620
   Insn 58(l0): point = 622
   Insn 57(l0): point = 624
   Insn 53(l0): point = 627
   Insn 51(l0): point = 630
   Insn 50(l0): point = 632
   Insn 49(l0): point = 634
   Insn 45(l0): point = 637
   Insn 44(l0): point = 639
   Insn 43(l0): point = 641
   Insn 42(l0): point = 643
   Insn 41(l0): point = 645
   Insn 40(l0): point = 647
   Insn 39(l0): point = 649
   Insn 38(l0): point = 651
   Insn 37(l0): point = 653
   Insn 36(l0): point = 655
   Insn 35(l0): point = 657
   Insn 34(l0): point = 659
   Insn 33(l0): point = 661
   Insn 32(l0): point = 663
   Insn 31(l0): point = 665
   Insn 30(l0): point = 667
   Insn 29(l0): point = 669
   Insn 28(l0): point = 671
   Insn 27(l0): point = 673
   Insn 26(l0): point = 675
   Insn 25(l0): point = 677
   Insn 24(l0): point = 679
   Insn 23(l0): point = 681
   Insn 408(l0): point = 684
   Insn 15(l0): point = 686
   Insn 14(l0): point = 688
   Insn 13(l0): point = 690
   Insn 12(l0): point = 692
   Insn 11(l0): point = 694
   Insn 10(l0): point = 696
   Insn 9(l0): point = 698
   Insn 8(l0): point = 700
   Insn 4(l0): point = 702
   Insn 3(l0): point = 704
   Insn 2(l0): point = 706
 a0(r227): [3..4]
 a1(r226): [5..6]
 a2(r297): [11..14]
 a3(r296): [13..16]
 a4(r295): [27..28]
 a5(r294): [37..38]
 a6(r225): [588..589]
 a7(r224): [590..591]
 a8(r222): [590..597]
 a9(r223): [592..593]
 a10(r293): [594..595]
 a11(r221): [598..599]
 a12(r292): [600..601]
 a13(r220): [600..603]
 a14(r219): [604..605]
 a15(r291): [606..607]
 a16(r218): [47..48]
 a17(r217): [49..50]
 a18(r216): [51..52]
 a19(r214): [51..58]
 a20(r215): [53..54]
 a21(r290): [55..56]
 a22(r213): [59..60]
 a23(r289): [61..62]
 a24(r212): [61..64]
 a25(r211): [65..66]
 a26(r288): [67..68]
 a27(r210): [72..73]
 a28(r209): [74..75]
 a29(r207): [74..81]
 a30(r208): [76..77]
 a31(r287): [78..79]
 a32(r206): [82..83]
 a33(r286): [84..85]
 a34(r205): [84..87]
 a35(r204): [88..89]
 a36(r285): [90..91]
 a37(r203): [97..98]
 a38(r202): [99..100]
 a39(r200): [99..106]
 a40(r201): [101..102]
 a41(r284): [103..104]
 a42(r199): [107..108]
 a43(r283): [109..110]
 a44(r198): [109..112]
 a45(r197): [113..114]
 a46(r282): [115..116]
 a47(r196): [127..128]
 a48(r195): [129..130]
 a49(r194): [131..132]
 a50(r192): [131..138]
 a51(r193): [133..134]
 a52(r281): [135..136]
 a53(r191): [139..140]
 a54(r280): [141..142]
 a55(r190): [141..144]
 a56(r189): [145..146]
 a57(r279): [147..148]
 a58(r188): [154..155]
 a59(r187): [156..157]
 a60(r186): [158..159]
 a61(r182): [158..177]
 a62(r185): [160..161]
 a63(r184): [162..163]
 a64(r183): [168..173]
 a65(r278): [170..171]
 a66(r277): [174..175]
 a67(r181): [178..179]
 a68(r276): [180..181]
 a69(r180): [180..183]
 a70(r179): [184..185]
 a71(r178): [186..187]
 a72(r177): [192..197]
 a73(r275): [194..195]
 a74(r274): [198..199]
 a75(r176): [205..206]
 a76(r175): [207..208]
 a77(r174): [209..210]
 a78(r170): [209..228]
 a79(r173): [211..212]
 a80(r172): [213..214]
 a81(r171): [219..224]
 a82(r273): [221..222]
 a83(r272): [225..226]
 a84(r169): [229..230]
 a85(r271): [231..232]
 a86(r168): [231..234]
 a87(r167): [235..236]
 a88(r166): [237..238]
 a89(r270): [243..246]
 a90(r269): [245..248]
 a91(r165): [254..255]
 a92(r164): [256..257]
 a93(r163): [258..259]
 a94(r159): [258..277]
 a95(r162): [260..261]
 a96(r161): [262..263]
 a97(r160): [268..273]
 a98(r268): [270..271]
 a99(r267): [274..275]
 a100(r158): [278..279]
 a101(r266): [280..281]
 a102(r157): [280..283]
 a103(r156): [284..285]
 a104(r155): [286..287]
 a105(r154): [292..297]
 a106(r265): [294..295]
 a107(r264): [298..299]
 a108(r153): [305..306]
 a109(r152): [307..308]
 a110(r151): [309..310]
 a111(r148): [309..326]
 a112(r150): [311..312]
 a113(r149): [313..314]
 a114(r263): [319..322]
 a115(r262): [321..324]
 a116(r147): [327..328]
 a117(r261): [329..330]
 a118(r146): [329..332]
 a119(r145): [333..334]
 a120(r144): [335..336]
 a121(r143): [341..346]
 a122(r260): [343..344]
 a123(r259): [347..348]
 a124(r142): [354..355]
 a125(r141): [356..357]
 a126(r140): [358..359]
 a127(r136): [358..377]
 a128(r139): [360..361]
 a129(r138): [362..363]
 a130(r137): [368..373]
 a131(r258): [370..371]
 a132(r257): [374..375]
 a133(r135): [378..379]
 a134(r256): [380..381]
 a135(r134): [380..383]
 a136(r133): [384..385]
 a137(r132): [386..387]
 a138(r131): [392..397]
 a139(r255): [394..395]
 a140(r254): [398..399]
 a141(r130): [405..406]
 a142(r129): [407..408]
 a143(r128): [409..410]
 a144(r124): [409..428]
 a145(r127): [411..412]
 a146(r126): [413..414]
 a147(r125): [419..424]
 a148(r253): [421..422]
 a149(r252): [425..426]
 a150(r123): [429..430]
 a151(r251): [431..432]
 a152(r122): [431..434]
 a153(r121): [435..436]
 a154(r120): [437..438]
 a155(r250): [443..446]
 a156(r249): [445..448]
 a157(r119): [454..455]
 a158(r118): [456..457]
 a159(r117): [458..459]
 a160(r113): [458..477]
 a161(r116): [460..461]
 a162(r115): [462..463]
 a163(r114): [468..473]
 a164(r248): [470..471]
 a165(r247): [474..475]
 a166(r112): [478..479]
 a167(r246): [480..481]
 a168(r111): [480..483]
 a169(r110): [484..485]
 a170(r109): [486..487]
 a171(r108): [492..497]
 a172(r245): [494..495]
 a173(r244): [498..499]
 a174(r107): [505..506]
 a175(r106): [507..508]
 a176(r105): [509..510]
 a177(r102): [509..526]
 a178(r104): [511..512]
 a179(r103): [513..514]
 a180(r243): [519..522]
 a181(r242): [521..524]
 a182(r101): [527..528]
 a183(r241): [529..530]
 a184(r100): [529..532]
 a185(r99): [533..534]
 a186(r98): [535..536]
 a187(r97): [541..546]
 a188(r240): [543..544]
 a189(r239): [547..548]
 a190(r238): [623..624]
 a191(r237): [633..634]
 a192(r95): [640..643]
 a193(r96): [640..641]
 a194(r88): [642..663]
 a195(r94): [644..645]
 a196(r92): [644..651]
 a197(r93): [646..647]
 a198(r236): [648..649]
 a199(r91): [652..653]
 a200(r235): [654..655]
 a201(r90): [654..657]
 a202(r89): [658..659]
 a203(r234): [660..661]
 a204(r87): [664..665]
 a205(r85): [664..671]
 a206(r86): [666..667]
 a207(r233): [668..669]
 a208(r84): [672..673]
 a209(r232): [674..675]
 a210(r83): [674..677]
 a211(r82): [678..679]
 a212(r231): [680..681]
 a213(r230): [689..690]
 a214(r229): [695..698]
 a215(r228): [697..700]
Compressing live ranges: from 709 to 334 - 47%
Ranges after the compression:
 a0(r227): [0..1]
 a1(r226): [2..3]
 a2(r297): [4..5]
 a3(r296): [4..5]
 a4(r295): [6..7]
 a5(r294): [8..9]
 a6(r225): [278..279]
 a7(r224): [280..281]
 a8(r222): [280..285]
 a9(r223): [282..283]
 a10(r293): [284..285]
 a11(r221): [286..287]
 a12(r292): [288..289]
 a13(r220): [288..289]
 a14(r219): [290..291]
 a15(r291): [292..293]
 a16(r218): [10..11]
 a17(r217): [12..13]
 a18(r216): [14..15]
 a19(r214): [14..19]
 a20(r215): [16..17]
 a21(r290): [18..19]
 a22(r213): [20..21]
 a23(r289): [22..23]
 a24(r212): [22..23]
 a25(r211): [24..25]
 a26(r288): [26..27]
 a27(r210): [28..29]
 a28(r209): [30..31]
 a29(r207): [30..35]
 a30(r208): [32..33]
 a31(r287): [34..35]
 a32(r206): [36..37]
 a33(r286): [38..39]
 a34(r205): [38..39]
 a35(r204): [40..41]
 a36(r285): [42..43]
 a37(r203): [44..45]
 a38(r202): [46..47]
 a39(r200): [46..51]
 a40(r201): [48..49]
 a41(r284): [50..51]
 a42(r199): [52..53]
 a43(r283): [54..55]
 a44(r198): [54..55]
 a45(r197): [56..57]
 a46(r282): [58..59]
 a47(r196): [60..61]
 a48(r195): [62..63]
 a49(r194): [64..65]
 a50(r192): [64..69]
 a51(r193): [66..67]
 a52(r281): [68..69]
 a53(r191): [70..71]
 a54(r280): [72..73]
 a55(r190): [72..73]
 a56(r189): [74..75]
 a57(r279): [76..77]
 a58(r188): [78..79]
 a59(r187): [80..81]
 a60(r186): [82..83]
 a61(r182): [82..91]
 a62(r185): [84..85]
 a63(r184): [86..87]
 a64(r183): [88..89]
 a65(r278): [88..89]
 a66(r277): [90..91]
 a67(r181): [92..93]
 a68(r276): [94..95]
 a69(r180): [94..95]
 a70(r179): [96..97]
 a71(r178): [98..99]
 a72(r177): [100..101]
 a73(r275): [100..101]
 a74(r274): [102..103]
 a75(r176): [104..105]
 a76(r175): [106..107]
 a77(r174): [108..109]
 a78(r170): [108..117]
 a79(r173): [110..111]
 a80(r172): [112..113]
 a81(r171): [114..115]
 a82(r273): [114..115]
 a83(r272): [116..117]
 a84(r169): [118..119]
 a85(r271): [120..121]
 a86(r168): [120..121]
 a87(r167): [122..123]
 a88(r166): [124..125]
 a89(r270): [126..127]
 a90(r269): [126..127]
 a91(r165): [128..129]
 a92(r164): [130..131]
 a93(r163): [132..133]
 a94(r159): [132..141]
 a95(r162): [134..135]
 a96(r161): [136..137]
 a97(r160): [138..139]
 a98(r268): [138..139]
 a99(r267): [140..141]
 a100(r158): [142..143]
 a101(r266): [144..145]
 a102(r157): [144..145]
 a103(r156): [146..147]
 a104(r155): [148..149]
 a105(r154): [150..151]
 a106(r265): [150..151]
 a107(r264): [152..153]
 a108(r153): [154..155]
 a109(r152): [156..157]
 a110(r151): [158..159]
 a111(r148): [158..165]
 a112(r150): [160..161]
 a113(r149): [162..163]
 a114(r263): [164..165]
 a115(r262): [164..165]
 a116(r147): [166..167]
 a117(r261): [168..169]
 a118(r146): [168..169]
 a119(r145): [170..171]
 a120(r144): [172..173]
 a121(r143): [174..175]
 a122(r260): [174..175]
 a123(r259): [176..177]
 a124(r142): [178..179]
 a125(r141): [180..181]
 a126(r140): [182..183]
 a127(r136): [182..191]
 a128(r139): [184..185]
 a129(r138): [186..187]
 a130(r137): [188..189]
 a131(r258): [188..189]
 a132(r257): [190..191]
 a133(r135): [192..193]
 a134(r256): [194..195]
 a135(r134): [194..195]
 a136(r133): [196..197]
 a137(r132): [198..199]
 a138(r131): [200..201]
 a139(r255): [200..201]
 a140(r254): [202..203]
 a141(r130): [204..205]
 a142(r129): [206..207]
 a143(r128): [208..209]
 a144(r124): [208..217]
 a145(r127): [210..211]
 a146(r126): [212..213]
 a147(r125): [214..215]
 a148(r253): [214..215]
 a149(r252): [216..217]
 a150(r123): [218..219]
 a151(r251): [220..221]
 a152(r122): [220..221]
 a153(r121): [222..223]
 a154(r120): [224..225]
 a155(r250): [226..227]
 a156(r249): [226..227]
 a157(r119): [228..229]
 a158(r118): [230..231]
 a159(r117): [232..233]
 a160(r113): [232..241]
 a161(r116): [234..235]
 a162(r115): [236..237]
 a163(r114): [238..239]
 a164(r248): [238..239]
 a165(r247): [240..241]
 a166(r112): [242..243]
 a167(r246): [244..245]
 a168(r111): [244..245]
 a169(r110): [246..247]
 a170(r109): [248..249]
 a171(r108): [250..251]
 a172(r245): [250..251]
 a173(r244): [252..253]
 a174(r107): [254..255]
 a175(r106): [256..257]
 a176(r105): [258..259]
 a177(r102): [258..265]
 a178(r104): [260..261]
 a179(r103): [262..263]
 a180(r243): [264..265]
 a181(r242): [264..265]
 a182(r101): [266..267]
 a183(r241): [268..269]
 a184(r100): [268..269]
 a185(r99): [270..271]
 a186(r98): [272..273]
 a187(r97): [274..275]
 a188(r240): [274..275]
 a189(r239): [276..277]
 a190(r238): [294..295]
 a191(r237): [296..297]
 a192(r95): [298..301]
 a193(r96): [298..299]
 a194(r88): [300..315]
 a195(r94): [302..303]
 a196(r92): [302..307]
 a197(r93): [304..305]
 a198(r236): [306..307]
 a199(r91): [308..309]
 a200(r235): [310..311]
 a201(r90): [310..311]
 a202(r89): [312..313]
 a203(r234): [314..315]
 a204(r87): [316..317]
 a205(r85): [316..321]
 a206(r86): [318..319]
 a207(r233): [320..321]
 a208(r84): [322..323]
 a209(r232): [324..325]
 a210(r83): [324..325]
 a211(r82): [326..327]
 a212(r231): [328..329]
 a213(r230): [330..331]
 a214(r229): [332..333]
 a215(r228): [332..333]
  pref0:a2(r297)<-hr5@1500
  pref1:a3(r296)<-hr4@1500
  pref2:a65(r278)<-hr4@1500
  pref3:a73(r275)<-hr4@1500
  pref4:a82(r273)<-hr4@1500
  pref5:a89(r270)<-hr5@1500
  pref6:a90(r269)<-hr4@1500
  pref7:a98(r268)<-hr4@1500
  pref8:a106(r265)<-hr4@1500
  pref9:a114(r263)<-hr5@1500
  pref10:a115(r262)<-hr4@1500
  pref11:a122(r260)<-hr4@1500
  pref12:a131(r258)<-hr4@1500
  pref13:a139(r255)<-hr4@1500
  pref14:a148(r253)<-hr4@1500
  pref15:a155(r250)<-hr5@1500
  pref16:a156(r249)<-hr4@1500
  pref17:a164(r248)<-hr4@1500
  pref18:a172(r245)<-hr4@1500
  pref19:a180(r243)<-hr5@1500
  pref20:a181(r242)<-hr4@1500
  pref21:a188(r240)<-hr4@1500
  pref22:a213(r230)<-hr0@1500
  pref23:a214(r229)<-hr5@1500
  pref24:a215(r228)<-hr4@1500
  pref25:a0(r227)<-hr0@1500
  pref26:a63(r184)<-hr0@1500
  pref27:a64(r183)<-hr5@1500
  pref28:a71(r178)<-hr0@1500
  pref29:a72(r177)<-hr5@1500
  pref30:a80(r172)<-hr0@1500
  pref31:a81(r171)<-hr5@1500
  pref32:a88(r166)<-hr0@1500
  pref33:a96(r161)<-hr0@1500
  pref34:a97(r160)<-hr5@1500
  pref35:a104(r155)<-hr0@1500
  pref36:a105(r154)<-hr5@1500
  pref37:a113(r149)<-hr0@1500
  pref38:a120(r144)<-hr0@1500
  pref39:a121(r143)<-hr5@1500
  pref40:a129(r138)<-hr0@1500
  pref41:a130(r137)<-hr5@1500
  pref42:a137(r132)<-hr0@1500
  pref43:a138(r131)<-hr5@1500
  pref44:a146(r126)<-hr0@1500
  pref45:a147(r125)<-hr5@1500
  pref46:a154(r120)<-hr0@1500
  pref47:a162(r115)<-hr0@1500
  pref48:a163(r114)<-hr5@1500
  pref49:a170(r109)<-hr0@1500
  pref50:a171(r108)<-hr5@1500
  pref51:a179(r103)<-hr0@1500
  pref52:a186(r98)<-hr0@1500
  pref53:a187(r97)<-hr5@1500
  regions=1, blocks=39, points=334
    allocnos=216 (big 0), copies=0, conflicts=0, ranges=216
Disposition:
  211:r82  l0     0  210:r83  l0     1  208:r84  l0     0  205:r85  l0     1
  206:r86  l0     0  204:r87  l0     0  194:r88  l0     0  202:r89  l0     1
  201:r90  l0     2  199:r91  l0     1  196:r92  l0     2  197:r93  l0     1
  195:r94  l0     1  192:r95  l0     1  193:r96  l0     0  187:r97  l0     1
  186:r98  l0     0  185:r99  l0     0  184:r100 l0     1  182:r101 l0     0
  177:r102 l0     3  179:r103 l0     0  178:r104 l0     0  176:r105 l0     0
  175:r106 l0     0  174:r107 l0     0  171:r108 l0     1  170:r109 l0     0
  169:r110 l0     0  168:r111 l0     1  166:r112 l0     0  160:r113 l0     3
  163:r114 l0     1  162:r115 l0     0  161:r116 l0     0  159:r117 l0     0
  158:r118 l0     0  157:r119 l0     0  154:r120 l0     0  153:r121 l0     0
  152:r122 l0     1  150:r123 l0     0  144:r124 l0     3  147:r125 l0     1
  146:r126 l0     0  145:r127 l0     0  143:r128 l0     0  142:r129 l0     0
  141:r130 l0     0  138:r131 l0     1  137:r132 l0     0  136:r133 l0     0
  135:r134 l0     1  133:r135 l0     0  127:r136 l0     3  130:r137 l0     1
  129:r138 l0     0  128:r139 l0     0  126:r140 l0     0  125:r141 l0     0
  124:r142 l0     0  121:r143 l0     1  120:r144 l0     0  119:r145 l0     0
  118:r146 l0     1  116:r147 l0     0  111:r148 l0     3  113:r149 l0     0
  112:r150 l0     0  110:r151 l0     0  109:r152 l0     0  108:r153 l0     0
  105:r154 l0     1  104:r155 l0     0  103:r156 l0     0  102:r157 l0     1
  100:r158 l0     0   94:r159 l0     3   97:r160 l0     1   96:r161 l0     0
   95:r162 l0     0   93:r163 l0     0   92:r164 l0     0   91:r165 l0     0
   88:r166 l0     0   87:r167 l0     0   86:r168 l0     1   84:r169 l0     0
   78:r170 l0     3   81:r171 l0     1   80:r172 l0     0   79:r173 l0     0
   77:r174 l0     0   76:r175 l0     0   75:r176 l0     0   72:r177 l0     1
   71:r178 l0     0   70:r179 l0     0   69:r180 l0     1   67:r181 l0     0
   61:r182 l0     3   64:r183 l0     1   63:r184 l0     0   62:r185 l0     0
   60:r186 l0     0   59:r187 l0     0   58:r188 l0     0   56:r189 l0     0
   55:r190 l0     1   53:r191 l0     0   50:r192 l0     1   51:r193 l0     0
   49:r194 l0     0   48:r195 l0     0   47:r196 l0     0   45:r197 l0     0
   44:r198 l0     1   42:r199 l0     0   39:r200 l0     1   40:r201 l0     0
   38:r202 l0     0   37:r203 l0     0   35:r204 l0     0   34:r205 l0     1
   32:r206 l0     0   29:r207 l0     1   30:r208 l0     0   28:r209 l0     0
   27:r210 l0     0   25:r211 l0     0   24:r212 l0     1   22:r213 l0     0
   19:r214 l0     1   20:r215 l0     0   18:r216 l0     0   17:r217 l0     0
   16:r218 l0     0   14:r219 l0     0   13:r220 l0     1   11:r221 l0     0
    8:r222 l0     1    9:r223 l0     0    7:r224 l0     0    6:r225 l0     0
    1:r226 l0     0    0:r227 l0     0  215:r228 l0     1  214:r229 l0     0
  213:r230 l0     0  212:r231 l0     0  209:r232 l0     0  207:r233 l0     0
  203:r234 l0     1  200:r235 l0     1  198:r236 l0     1  191:r237 l0     0
  190:r238 l0     0  189:r239 l0     0  188:r240 l0     0  183:r241 l0     0
  181:r242 l0     1  180:r243 l0     0  173:r244 l0     0  172:r245 l0     0
  167:r246 l0     0  165:r247 l0     0  164:r248 l0     0  156:r249 l0     1
  155:r250 l0     0  151:r251 l0     0  149:r252 l0     0  148:r253 l0     0
  140:r254 l0     0  139:r255 l0     0  134:r256 l0     0  132:r257 l0     0
  131:r258 l0     0  123:r259 l0     0  122:r260 l0     0  117:r261 l0     0
  115:r262 l0     1  114:r263 l0     0  107:r264 l0     0  106:r265 l0     0
  101:r266 l0     0   99:r267 l0     0   98:r268 l0     0   90:r269 l0     1
   89:r270 l0     0   85:r271 l0     0   83:r272 l0     0   82:r273 l0     0
   74:r274 l0     0   73:r275 l0     0   68:r276 l0     0   66:r277 l0     0
   65:r278 l0     0   57:r279 l0     0   54:r280 l0     0   52:r281 l0     0
   46:r282 l0     0   43:r283 l0     0   41:r284 l0     0   36:r285 l0     0
   33:r286 l0     0   31:r287 l0     0   26:r288 l0     0   23:r289 l0     0
   21:r290 l0     0   15:r291 l0     0   12:r292 l0     0   10:r293 l0     0
    5:r294 l0     0    4:r295 l0     0    3:r296 l0     1    2:r297 l0     0
+++Costs: overall -54000, reg -54000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


dynamic_array_move_life

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={20d,19u} r1={19d,1u} r2={19d} r4={37d,19u} r5={37d,19u} r6={1d,38u} r7={1d,56u} r8={18d} r9={18d} r10={18d} r11={18d} r12={18d} r13={18d} r14={18d} r15={18d} r16={1d,37u} r17={119d,17u} r18={18d} r19={1d,148u,27e} r20={19d} r21={19d} r22={19d} r23={19d} r24={19d} r25={19d} r26={19d} r27={19d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={19d} r37={19d} r38={18d} r39={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r82={1d,1u} r83={1d,1u,1e} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u,1e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u,1e} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u,1e} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u,1e} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u,1e} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u,1e} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u,1e} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u,1e} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u,1e} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u,1e} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u,1e} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u,1e} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u,1e} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} 
;;    total ref usage 2191{1579d,570u,42e} in 336{318 regular + 18 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 228 229 230
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])
        (reg:DI 5 di [ B ])) "game_of_life.c":200:54 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ B ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":200:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(insn 4 3 5 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])
        (reg:SI 1 dx [ M ])) "game_of_life.c":200:54 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ M ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 228)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":202:15 75 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 229)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":202:15 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (reg:SI 228)) "game_of_life.c":202:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 228)
        (nil)))
(insn 11 10 12 2 (set (reg:SI 5 di)
        (reg:SI 229)) "game_of_life.c":202:15 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 229)
        (nil)))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("dynamic_array_alloc") [flags 0x3]  <function_decl 0x7fd3e8e07d00 dynamic_array_alloc>) [0 dynamic_array_alloc S1 A8])
            (const_int 0 [0]))) "game_of_life.c":202:15 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 230)
        (reg:DI 0 ax)) "game_of_life.c":202:15 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
        (reg:DI 230)) "game_of_life.c":202:15 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 230)
        (nil)))
(insn 15 14 408 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A64])
        (const_int 0 [0])) "game_of_life.c":204:14 75 {*movsi_internal}
     (nil))
(jump_insn 408 15 409 2 (set (pc)
        (label_ref 54)) "game_of_life.c":204:5 807 {jump}
     (nil)
 -> 54)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 409 408 56)
;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       7
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 56 409 18 3 49 (nil) [1 uses])
(note 18 56 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 410 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 j+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":205:18 75 {*movsi_internal}
     (nil))
(jump_insn 410 19 411 3 (set (pc)
        (label_ref 46)) "game_of_life.c":205:9 807 {jump}
     (nil)
 -> 46)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 411 410 48)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       5
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 231 232 233 234 235 236
(code_label 48 411 22 4 48 (nil) [1 uses])
(note 22 48 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (reg:SI 231)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A64])) "game_of_life.c":205:48 75 {*movsi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 82 [ _1 ])
        (sign_extend:DI (reg:SI 231))) "game_of_life.c":205:48 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 231)
        (nil)))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 83 [ _2 ])
                (ashift:DI (reg:DI 82 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:48 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 82 [ _1 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 4 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])) "game_of_life.c":205:48 74 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 84 [ _3 ])
                (plus:DI (reg:DI 83 [ _2 ])
                    (reg/f:DI 232)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:48 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 232)
        (expr_list:REG_DEAD (reg:DI 83 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])
                        (reg:DI 83 [ _2 ]))
                    (nil))))))
(insn 28 27 29 4 (set (reg/f:DI 85 [ _4 ])
        (mem/f:DI (reg/f:DI 84 [ _3 ]) [4 *_3+0 S8 A64])) "game_of_life.c":205:48 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ _3 ])
        (nil)))
(insn 29 28 30 4 (set (reg:SI 233)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 j+0 S4 A32])) "game_of_life.c":205:51 75 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 86 [ _5 ])
        (sign_extend:DI (reg:SI 233))) "game_of_life.c":205:51 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 233)
        (nil)))
(insn 31 30 32 4 (parallel [
            (set (reg:DI 87 [ _6 ])
                (ashift:DI (reg:DI 86 [ _5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:51 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 86 [ _5 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 4 (parallel [
            (set (reg/f:DI 88 [ _7 ])
                (plus:DI (reg/f:DI 85 [ _4 ])
                    (reg:DI 87 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:51 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 87 [ _6 ])
        (expr_list:REG_DEAD (reg/f:DI 85 [ _4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 33 32 34 4 (set (reg:SI 234)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A64])) "game_of_life.c":205:38 75 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 89 [ _8 ])
        (sign_extend:DI (reg:SI 234))) "game_of_life.c":205:38 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 234)
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg:DI 90 [ _9 ])
                (ashift:DI (reg:DI 89 [ _8 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:38 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 89 [ _8 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 4 (set (reg/f:DI 235)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":205:38 74 {*movdi_internal}
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg/f:DI 91 [ _10 ])
                (plus:DI (reg:DI 90 [ _9 ])
                    (reg/f:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:38 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 235)
        (expr_list:REG_DEAD (reg:DI 90 [ _9 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 90 [ _9 ]))
                    (nil))))))
(insn 38 37 39 4 (set (reg/f:DI 92 [ _11 ])
        (mem/f:DI (reg/f:DI 91 [ _10 ]) [4 *_10+0 S8 A64])) "game_of_life.c":205:38 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _10 ])
        (nil)))
(insn 39 38 40 4 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 j+0 S4 A32])) "game_of_life.c":205:41 75 {*movsi_internal}
     (nil))
(insn 40 39 41 4 (set (reg:DI 93 [ _12 ])
        (sign_extend:DI (reg:SI 236))) "game_of_life.c":205:41 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 236)
        (nil)))
(insn 41 40 42 4 (parallel [
            (set (reg:DI 94 [ _13 ])
                (ashift:DI (reg:DI 93 [ _12 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:41 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 93 [ _12 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 42 41 43 4 (parallel [
            (set (reg/f:DI 95 [ _14 ])
                (plus:DI (reg/f:DI 92 [ _11 ])
                    (reg:DI 94 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:41 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 94 [ _13 ])
        (expr_list:REG_DEAD (reg/f:DI 92 [ _11 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 43 42 44 4 (set (reg:SI 96 [ _15 ])
        (mem:SI (reg/f:DI 88 [ _7 ]) [2 *_7+0 S4 A32])) "game_of_life.c":205:51 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ _7 ])
        (nil)))
(insn 44 43 45 4 (set (mem:SI (reg/f:DI 95 [ _14 ]) [2 *_14+0 S4 A32])
        (reg:SI 96 [ _15 ])) "game_of_life.c":205:45 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ _15 ])
        (expr_list:REG_DEAD (reg/f:DI 95 [ _14 ])
            (nil))))
(insn 45 44 46 4 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":205:33 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       5 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU,DFS_BACK)
;;              3 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 237
(code_label 46 45 47 5 47 (nil) [1 uses])
(note 47 46 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 47 50 5 (set (reg:SI 237)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 j+0 S4 A32])) "game_of_life.c":205:27 75 {*movsi_internal}
     (nil))
(insn 50 49 51 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 237)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32]))) "game_of_life.c":205:27 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 237)
        (nil)))
(jump_insn 51 50 52 5 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) "game_of_life.c":205:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 48)
;;  succ:       4
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":204:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       7 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU,DFS_BACK)
;;              2 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 238
(code_label 54 53 55 7 46 (nil) [1 uses])
(note 55 54 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 58 7 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A64])) "game_of_life.c":204:23 75 {*movsi_internal}
     (nil))
(insn 58 57 59 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 238)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32]))) "game_of_life.c":204:23 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 238)
        (nil)))
(jump_insn 59 58 60 7 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) "game_of_life.c":204:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 56)
;;  succ:       3
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 412 8 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
        (const_int 0 [0])) "game_of_life.c":207:14 75 {*movsi_internal}
     (nil))
(jump_insn 412 61 413 8 (set (pc)
        (label_ref 386)) "game_of_life.c":207:5 807 {jump}
     (nil)
 -> 386)
;;  succ:       37 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 413 412 388)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       37
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	
(code_label 388 413 64 9 65 (nil) [1 uses])
(note 64 388 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 414 9 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":208:18 75 {*movsi_internal}
     (nil))
(jump_insn 414 65 415 9 (set (pc)
        (label_ref 378)) "game_of_life.c":208:9 807 {jump}
     (nil)
 -> 378)
;;  succ:       35 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 415 414 380)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       35
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 97 98 99 100 101 102 103 104 105 106 107 239 240 241 242 243
(code_label 380 415 68 10 64 (nil) [1 uses])
(note 68 380 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 10 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":209:21 75 {*movsi_internal}
     (nil))
(insn 70 69 71 10 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":211:19 75 {*movsi_internal}
     (nil))
(insn 71 70 72 10 (parallel [
            (set (reg:SI 97 [ _16 ])
                (plus:SI (reg:SI 239)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":211:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 239)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 72 71 73 10 (set (reg:SI 240)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":211:19 75 {*movsi_internal}
     (nil))
(insn 73 72 74 10 (set (reg:SI 4 si)
        (reg:SI 240)) "game_of_life.c":211:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 240)
        (nil)))
(insn 74 73 75 10 (set (reg:SI 5 di)
        (reg:SI 97 [ _16 ])) "game_of_life.c":211:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97 [ _16 ])
        (nil)))
(call_insn 75 74 76 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_y") [flags 0x3]  <function_decl 0x7fd3e8e0d700 check_y>) [0 check_y S1 A8])
            (const_int 0 [0]))) "game_of_life.c":211:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 76 75 77 10 (set (reg:SI 98 [ _17 ])
        (reg:SI 0 ax)) "game_of_life.c":211:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 77 76 78 10 (set (reg:DI 99 [ _18 ])
        (sign_extend:DI (reg:SI 98 [ _17 ]))) "game_of_life.c":211:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 98 [ _17 ])
        (nil)))
(insn 78 77 79 10 (parallel [
            (set (reg:DI 100 [ _19 ])
                (ashift:DI (reg:DI 99 [ _18 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":211:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 99 [ _18 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 79 78 80 10 (set (reg/f:DI 241)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":211:18 74 {*movdi_internal}
     (nil))
(insn 80 79 81 10 (parallel [
            (set (reg/f:DI 101 [ _20 ])
                (plus:DI (reg:DI 100 [ _19 ])
                    (reg/f:DI 241)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":211:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 241)
        (expr_list:REG_DEAD (reg:DI 100 [ _19 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 100 [ _19 ]))
                    (nil))))))
(insn 81 80 82 10 (set (reg/f:DI 102 [ _21 ])
        (mem/f:DI (reg/f:DI 101 [ _20 ]) [4 *_20+0 S8 A64])) "game_of_life.c":211:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _20 ])
        (nil)))
(insn 82 81 83 10 (set (reg:SI 242)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":211:38 75 {*movsi_internal}
     (nil))
(insn 83 82 84 10 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":211:38 75 {*movsi_internal}
     (nil))
(insn 84 83 85 10 (set (reg:SI 4 si)
        (reg:SI 242)) "game_of_life.c":211:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 242)
        (nil)))
(insn 85 84 86 10 (set (reg:SI 5 di)
        (reg:SI 243)) "game_of_life.c":211:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 243)
        (nil)))
(call_insn 86 85 87 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_x") [flags 0x3]  <function_decl 0x7fd3e8e0d600 check_x>) [0 check_x S1 A8])
            (const_int 0 [0]))) "game_of_life.c":211:38 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 87 86 88 10 (set (reg:SI 103 [ _22 ])
        (reg:SI 0 ax)) "game_of_life.c":211:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 88 87 89 10 (set (reg:DI 104 [ _23 ])
        (sign_extend:DI (reg:SI 103 [ _22 ]))) "game_of_life.c":211:38 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 103 [ _22 ])
        (nil)))
(insn 89 88 90 10 (parallel [
            (set (reg:DI 105 [ _24 ])
                (ashift:DI (reg:DI 104 [ _23 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":211:37 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 104 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 90 89 91 10 (parallel [
            (set (reg/f:DI 106 [ _25 ])
                (plus:DI (reg/f:DI 102 [ _21 ])
                    (reg:DI 105 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":211:37 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _24 ])
        (expr_list:REG_DEAD (reg/f:DI 102 [ _21 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 91 90 92 10 (set (reg:SI 107 [ _26 ])
        (mem:SI (reg/f:DI 106 [ _25 ]) [2 *_25+0 S4 A32])) "game_of_life.c":211:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ _25 ])
        (nil)))
(insn 92 91 93 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ _26 ])
            (const_int 1 [0x1]))) "game_of_life.c":211:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 107 [ _26 ])
        (nil)))
(jump_insn 93 92 94 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "game_of_life.c":211:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 96)
;;  succ:       11 (FALLTHRU)
;;              12
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 94 93 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":211:66 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       10
;;              11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 108 109 110 111 112 113 114 115 116 117 118 119 244 245 246 247 248
(code_label 96 95 97 12 52 (nil) [1 uses])
(note 97 96 98 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 12 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":212:19 75 {*movsi_internal}
     (nil))
(insn 99 98 100 12 (parallel [
            (set (reg:SI 108 [ _27 ])
                (plus:SI (reg:SI 244)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":212:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 244)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 100 99 101 12 (set (reg:SI 245)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":212:19 75 {*movsi_internal}
     (nil))
(insn 101 100 102 12 (set (reg:SI 4 si)
        (reg:SI 245)) "game_of_life.c":212:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 245)
        (nil)))
(insn 102 101 103 12 (set (reg:SI 5 di)
        (reg:SI 108 [ _27 ])) "game_of_life.c":212:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 108 [ _27 ])
        (nil)))
(call_insn 103 102 104 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_y") [flags 0x3]  <function_decl 0x7fd3e8e0d700 check_y>) [0 check_y S1 A8])
            (const_int 0 [0]))) "game_of_life.c":212:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 104 103 105 12 (set (reg:SI 109 [ _28 ])
        (reg:SI 0 ax)) "game_of_life.c":212:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 105 104 106 12 (set (reg:DI 110 [ _29 ])
        (sign_extend:DI (reg:SI 109 [ _28 ]))) "game_of_life.c":212:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 109 [ _28 ])
        (nil)))
(insn 106 105 107 12 (parallel [
            (set (reg:DI 111 [ _30 ])
                (ashift:DI (reg:DI 110 [ _29 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":212:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _29 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 107 106 108 12 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":212:18 74 {*movdi_internal}
     (nil))
(insn 108 107 109 12 (parallel [
            (set (reg/f:DI 112 [ _31 ])
                (plus:DI (reg:DI 111 [ _30 ])
                    (reg/f:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":212:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 246)
        (expr_list:REG_DEAD (reg:DI 111 [ _30 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 111 [ _30 ]))
                    (nil))))))
(insn 109 108 110 12 (set (reg/f:DI 113 [ _32 ])
        (mem/f:DI (reg/f:DI 112 [ _31 ]) [4 *_31+0 S8 A64])) "game_of_life.c":212:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ _31 ])
        (nil)))
(insn 110 109 111 12 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":212:38 75 {*movsi_internal}
     (nil))
(insn 111 110 112 12 (parallel [
            (set (reg:SI 114 [ _33 ])
                (plus:SI (reg:SI 247)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":212:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 247)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 112 111 113 12 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":212:38 75 {*movsi_internal}
     (nil))
(insn 113 112 114 12 (set (reg:SI 4 si)
        (reg:SI 248)) "game_of_life.c":212:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 248)
        (nil)))
(insn 114 113 115 12 (set (reg:SI 5 di)
        (reg:SI 114 [ _33 ])) "game_of_life.c":212:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 114 [ _33 ])
        (nil)))
(call_insn 115 114 116 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_x") [flags 0x3]  <function_decl 0x7fd3e8e0d600 check_x>) [0 check_x S1 A8])
            (const_int 0 [0]))) "game_of_life.c":212:38 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 116 115 117 12 (set (reg:SI 115 [ _34 ])
        (reg:SI 0 ax)) "game_of_life.c":212:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 117 116 118 12 (set (reg:DI 116 [ _35 ])
        (sign_extend:DI (reg:SI 115 [ _34 ]))) "game_of_life.c":212:38 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 115 [ _34 ])
        (nil)))
(insn 118 117 119 12 (parallel [
            (set (reg:DI 117 [ _36 ])
                (ashift:DI (reg:DI 116 [ _35 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":212:37 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 116 [ _35 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 12 (parallel [
            (set (reg/f:DI 118 [ _37 ])
                (plus:DI (reg/f:DI 113 [ _32 ])
                    (reg:DI 117 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":212:37 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 117 [ _36 ])
        (expr_list:REG_DEAD (reg/f:DI 113 [ _32 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 120 119 121 12 (set (reg:SI 119 [ _38 ])
        (mem:SI (reg/f:DI 118 [ _37 ]) [2 *_37+0 S4 A32])) "game_of_life.c":212:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ _37 ])
        (nil)))
(insn 121 120 122 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 119 [ _38 ])
            (const_int 1 [0x1]))) "game_of_life.c":212:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 119 [ _38 ])
        (nil)))
(jump_insn 122 121 123 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "game_of_life.c":212:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 125)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 123 122 124 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":212:70 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 120 121 122 123 124 125 126 127 128 129 130 249 250 251 252 253
(code_label 125 124 126 14 53 (nil) [1 uses])
(note 126 125 127 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 14 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":213:19 75 {*movsi_internal}
     (nil))
(insn 128 127 129 14 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":213:19 75 {*movsi_internal}
     (nil))
(insn 129 128 130 14 (set (reg:SI 4 si)
        (reg:SI 249)) "game_of_life.c":213:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 249)
        (nil)))
(insn 130 129 131 14 (set (reg:SI 5 di)
        (reg:SI 250)) "game_of_life.c":213:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 250)
        (nil)))
(call_insn 131 130 132 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_y") [flags 0x3]  <function_decl 0x7fd3e8e0d700 check_y>) [0 check_y S1 A8])
            (const_int 0 [0]))) "game_of_life.c":213:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 132 131 133 14 (set (reg:SI 120 [ _39 ])
        (reg:SI 0 ax)) "game_of_life.c":213:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 133 132 134 14 (set (reg:DI 121 [ _40 ])
        (sign_extend:DI (reg:SI 120 [ _39 ]))) "game_of_life.c":213:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 120 [ _39 ])
        (nil)))
(insn 134 133 135 14 (parallel [
            (set (reg:DI 122 [ _41 ])
                (ashift:DI (reg:DI 121 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":213:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 121 [ _40 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 135 134 136 14 (set (reg/f:DI 251)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":213:18 74 {*movdi_internal}
     (nil))
(insn 136 135 137 14 (parallel [
            (set (reg/f:DI 123 [ _42 ])
                (plus:DI (reg:DI 122 [ _41 ])
                    (reg/f:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":213:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 251)
        (expr_list:REG_DEAD (reg:DI 122 [ _41 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 122 [ _41 ]))
                    (nil))))))
(insn 137 136 138 14 (set (reg/f:DI 124 [ _43 ])
        (mem/f:DI (reg/f:DI 123 [ _42 ]) [4 *_42+0 S8 A64])) "game_of_life.c":213:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ _42 ])
        (nil)))
(insn 138 137 139 14 (set (reg:SI 252)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":213:34 75 {*movsi_internal}
     (nil))
(insn 139 138 140 14 (parallel [
            (set (reg:SI 125 [ _44 ])
                (plus:SI (reg:SI 252)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":213:34 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 252)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 140 139 141 14 (set (reg:SI 253)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":213:34 75 {*movsi_internal}
     (nil))
(insn 141 140 142 14 (set (reg:SI 4 si)
        (reg:SI 253)) "game_of_life.c":213:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 253)
        (nil)))
(insn 142 141 143 14 (set (reg:SI 5 di)
        (reg:SI 125 [ _44 ])) "game_of_life.c":213:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 125 [ _44 ])
        (nil)))
(call_insn 143 142 144 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_x") [flags 0x3]  <function_decl 0x7fd3e8e0d600 check_x>) [0 check_x S1 A8])
            (const_int 0 [0]))) "game_of_life.c":213:34 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 144 143 145 14 (set (reg:SI 126 [ _45 ])
        (reg:SI 0 ax)) "game_of_life.c":213:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 145 144 146 14 (set (reg:DI 127 [ _46 ])
        (sign_extend:DI (reg:SI 126 [ _45 ]))) "game_of_life.c":213:34 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 126 [ _45 ])
        (nil)))
(insn 146 145 147 14 (parallel [
            (set (reg:DI 128 [ _47 ])
                (ashift:DI (reg:DI 127 [ _46 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":213:33 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 127 [ _46 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 147 146 148 14 (parallel [
            (set (reg/f:DI 129 [ _48 ])
                (plus:DI (reg/f:DI 124 [ _43 ])
                    (reg:DI 128 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":213:33 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 128 [ _47 ])
        (expr_list:REG_DEAD (reg/f:DI 124 [ _43 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 148 147 149 14 (set (reg:SI 130 [ _49 ])
        (mem:SI (reg/f:DI 129 [ _48 ]) [2 *_48+0 S4 A32])) "game_of_life.c":213:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ _48 ])
        (nil)))
(insn 149 148 150 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ _49 ])
            (const_int 1 [0x1]))) "game_of_life.c":213:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 130 [ _49 ])
        (nil)))
(jump_insn 150 149 151 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) "game_of_life.c":213:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 153)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 151 150 152 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":213:66 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 131 132 133 134 135 136 137 138 139 140 141 142 254 255 256 257 258
(code_label 153 152 154 16 54 (nil) [1 uses])
(note 154 153 155 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 16 (set (reg:SI 254)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":214:19 75 {*movsi_internal}
     (nil))
(insn 156 155 157 16 (parallel [
            (set (reg:SI 131 [ _50 ])
                (plus:SI (reg:SI 254)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":214:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 254)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 157 156 158 16 (set (reg:SI 255)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":214:19 75 {*movsi_internal}
     (nil))
(insn 158 157 159 16 (set (reg:SI 4 si)
        (reg:SI 255)) "game_of_life.c":214:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 255)
        (nil)))
(insn 159 158 160 16 (set (reg:SI 5 di)
        (reg:SI 131 [ _50 ])) "game_of_life.c":214:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 131 [ _50 ])
        (nil)))
(call_insn 160 159 161 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_y") [flags 0x3]  <function_decl 0x7fd3e8e0d700 check_y>) [0 check_y S1 A8])
            (const_int 0 [0]))) "game_of_life.c":214:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 161 160 162 16 (set (reg:SI 132 [ _51 ])
        (reg:SI 0 ax)) "game_of_life.c":214:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 162 161 163 16 (set (reg:DI 133 [ _52 ])
        (sign_extend:DI (reg:SI 132 [ _51 ]))) "game_of_life.c":214:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 132 [ _51 ])
        (nil)))
(insn 163 162 164 16 (parallel [
            (set (reg:DI 134 [ _53 ])
                (ashift:DI (reg:DI 133 [ _52 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":214:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 133 [ _52 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 16 (set (reg/f:DI 256)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":214:18 74 {*movdi_internal}
     (nil))
(insn 165 164 166 16 (parallel [
            (set (reg/f:DI 135 [ _54 ])
                (plus:DI (reg:DI 134 [ _53 ])
                    (reg/f:DI 256)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":214:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 256)
        (expr_list:REG_DEAD (reg:DI 134 [ _53 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 134 [ _53 ]))
                    (nil))))))
(insn 166 165 167 16 (set (reg/f:DI 136 [ _55 ])
        (mem/f:DI (reg/f:DI 135 [ _54 ]) [4 *_54+0 S8 A64])) "game_of_life.c":214:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ _54 ])
        (nil)))
(insn 167 166 168 16 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":214:38 75 {*movsi_internal}
     (nil))
(insn 168 167 169 16 (parallel [
            (set (reg:SI 137 [ _56 ])
                (plus:SI (reg:SI 257)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":214:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 257)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 169 168 170 16 (set (reg:SI 258)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":214:38 75 {*movsi_internal}
     (nil))
(insn 170 169 171 16 (set (reg:SI 4 si)
        (reg:SI 258)) "game_of_life.c":214:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 258)
        (nil)))
(insn 171 170 172 16 (set (reg:SI 5 di)
        (reg:SI 137 [ _56 ])) "game_of_life.c":214:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 137 [ _56 ])
        (nil)))
(call_insn 172 171 173 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_x") [flags 0x3]  <function_decl 0x7fd3e8e0d600 check_x>) [0 check_x S1 A8])
            (const_int 0 [0]))) "game_of_life.c":214:38 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 173 172 174 16 (set (reg:SI 138 [ _57 ])
        (reg:SI 0 ax)) "game_of_life.c":214:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 174 173 175 16 (set (reg:DI 139 [ _58 ])
        (sign_extend:DI (reg:SI 138 [ _57 ]))) "game_of_life.c":214:38 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 138 [ _57 ])
        (nil)))
(insn 175 174 176 16 (parallel [
            (set (reg:DI 140 [ _59 ])
                (ashift:DI (reg:DI 139 [ _58 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":214:37 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 139 [ _58 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 176 175 177 16 (parallel [
            (set (reg/f:DI 141 [ _60 ])
                (plus:DI (reg/f:DI 136 [ _55 ])
                    (reg:DI 140 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":214:37 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 140 [ _59 ])
        (expr_list:REG_DEAD (reg/f:DI 136 [ _55 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 177 176 178 16 (set (reg:SI 142 [ _61 ])
        (mem:SI (reg/f:DI 141 [ _60 ]) [2 *_60+0 S4 A32])) "game_of_life.c":214:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141 [ _60 ])
        (nil)))
(insn 178 177 179 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 142 [ _61 ])
            (const_int 1 [0x1]))) "game_of_life.c":214:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 142 [ _61 ])
        (nil)))
(jump_insn 179 178 180 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 182)
            (pc))) "game_of_life.c":214:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 182)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 180 179 181 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":214:70 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 143 144 145 146 147 148 149 150 151 152 153 259 260 261 262 263
(code_label 182 181 183 18 55 (nil) [1 uses])
(note 183 182 184 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 184 183 185 18 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":215:19 75 {*movsi_internal}
     (nil))
(insn 185 184 186 18 (parallel [
            (set (reg:SI 143 [ _62 ])
                (plus:SI (reg:SI 259)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":215:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 259)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 186 185 187 18 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":215:19 75 {*movsi_internal}
     (nil))
(insn 187 186 188 18 (set (reg:SI 4 si)
        (reg:SI 260)) "game_of_life.c":215:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 260)
        (nil)))
(insn 188 187 189 18 (set (reg:SI 5 di)
        (reg:SI 143 [ _62 ])) "game_of_life.c":215:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 143 [ _62 ])
        (nil)))
(call_insn 189 188 190 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_y") [flags 0x3]  <function_decl 0x7fd3e8e0d700 check_y>) [0 check_y S1 A8])
            (const_int 0 [0]))) "game_of_life.c":215:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 190 189 191 18 (set (reg:SI 144 [ _63 ])
        (reg:SI 0 ax)) "game_of_life.c":215:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 191 190 192 18 (set (reg:DI 145 [ _64 ])
        (sign_extend:DI (reg:SI 144 [ _63 ]))) "game_of_life.c":215:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 144 [ _63 ])
        (nil)))
(insn 192 191 193 18 (parallel [
            (set (reg:DI 146 [ _65 ])
                (ashift:DI (reg:DI 145 [ _64 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":215:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 145 [ _64 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 193 192 194 18 (set (reg/f:DI 261)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":215:18 74 {*movdi_internal}
     (nil))
(insn 194 193 195 18 (parallel [
            (set (reg/f:DI 147 [ _66 ])
                (plus:DI (reg:DI 146 [ _65 ])
                    (reg/f:DI 261)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":215:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 261)
        (expr_list:REG_DEAD (reg:DI 146 [ _65 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 146 [ _65 ]))
                    (nil))))))
(insn 195 194 196 18 (set (reg/f:DI 148 [ _67 ])
        (mem/f:DI (reg/f:DI 147 [ _66 ]) [4 *_66+0 S8 A64])) "game_of_life.c":215:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147 [ _66 ])
        (nil)))
(insn 196 195 197 18 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":215:38 75 {*movsi_internal}
     (nil))
(insn 197 196 198 18 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":215:38 75 {*movsi_internal}
     (nil))
(insn 198 197 199 18 (set (reg:SI 4 si)
        (reg:SI 262)) "game_of_life.c":215:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
(insn 199 198 200 18 (set (reg:SI 5 di)
        (reg:SI 263)) "game_of_life.c":215:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 263)
        (nil)))
(call_insn 200 199 201 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_x") [flags 0x3]  <function_decl 0x7fd3e8e0d600 check_x>) [0 check_x S1 A8])
            (const_int 0 [0]))) "game_of_life.c":215:38 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 201 200 202 18 (set (reg:SI 149 [ _68 ])
        (reg:SI 0 ax)) "game_of_life.c":215:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 202 201 203 18 (set (reg:DI 150 [ _69 ])
        (sign_extend:DI (reg:SI 149 [ _68 ]))) "game_of_life.c":215:38 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 149 [ _68 ])
        (nil)))
(insn 203 202 204 18 (parallel [
            (set (reg:DI 151 [ _70 ])
                (ashift:DI (reg:DI 150 [ _69 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":215:37 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 150 [ _69 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 204 203 205 18 (parallel [
            (set (reg/f:DI 152 [ _71 ])
                (plus:DI (reg/f:DI 148 [ _67 ])
                    (reg:DI 151 [ _70 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":215:37 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 151 [ _70 ])
        (expr_list:REG_DEAD (reg/f:DI 148 [ _67 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 205 204 206 18 (set (reg:SI 153 [ _72 ])
        (mem:SI (reg/f:DI 152 [ _71 ]) [2 *_71+0 S4 A32])) "game_of_life.c":215:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 152 [ _71 ])
        (nil)))
(insn 206 205 207 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ _72 ])
            (const_int 1 [0x1]))) "game_of_life.c":215:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 153 [ _72 ])
        (nil)))
(jump_insn 207 206 208 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 210)
            (pc))) "game_of_life.c":215:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 210)
;;  succ:       19 (FALLTHRU)
;;              20
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 208 207 209 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 210 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":215:66 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       18
;;              19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 154 155 156 157 158 159 160 161 162 163 164 165 264 265 266 267 268
(code_label 210 209 211 20 56 (nil) [1 uses])
(note 211 210 212 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 212 211 213 20 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":216:19 75 {*movsi_internal}
     (nil))
(insn 213 212 214 20 (parallel [
            (set (reg:SI 154 [ _73 ])
                (plus:SI (reg:SI 264)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":216:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 264)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 214 213 215 20 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":216:19 75 {*movsi_internal}
     (nil))
(insn 215 214 216 20 (set (reg:SI 4 si)
        (reg:SI 265)) "game_of_life.c":216:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 265)
        (nil)))
(insn 216 215 217 20 (set (reg:SI 5 di)
        (reg:SI 154 [ _73 ])) "game_of_life.c":216:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 154 [ _73 ])
        (nil)))
(call_insn 217 216 218 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_y") [flags 0x3]  <function_decl 0x7fd3e8e0d700 check_y>) [0 check_y S1 A8])
            (const_int 0 [0]))) "game_of_life.c":216:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 218 217 219 20 (set (reg:SI 155 [ _74 ])
        (reg:SI 0 ax)) "game_of_life.c":216:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 219 218 220 20 (set (reg:DI 156 [ _75 ])
        (sign_extend:DI (reg:SI 155 [ _74 ]))) "game_of_life.c":216:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 155 [ _74 ])
        (nil)))
(insn 220 219 221 20 (parallel [
            (set (reg:DI 157 [ _76 ])
                (ashift:DI (reg:DI 156 [ _75 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":216:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 156 [ _75 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 221 220 222 20 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":216:18 74 {*movdi_internal}
     (nil))
(insn 222 221 223 20 (parallel [
            (set (reg/f:DI 158 [ _77 ])
                (plus:DI (reg:DI 157 [ _76 ])
                    (reg/f:DI 266)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":216:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 266)
        (expr_list:REG_DEAD (reg:DI 157 [ _76 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 157 [ _76 ]))
                    (nil))))))
(insn 223 222 224 20 (set (reg/f:DI 159 [ _78 ])
        (mem/f:DI (reg/f:DI 158 [ _77 ]) [4 *_77+0 S8 A64])) "game_of_life.c":216:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ _77 ])
        (nil)))
(insn 224 223 225 20 (set (reg:SI 267)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":216:38 75 {*movsi_internal}
     (nil))
(insn 225 224 226 20 (parallel [
            (set (reg:SI 160 [ _79 ])
                (plus:SI (reg:SI 267)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":216:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 267)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 226 225 227 20 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":216:38 75 {*movsi_internal}
     (nil))
(insn 227 226 228 20 (set (reg:SI 4 si)
        (reg:SI 268)) "game_of_life.c":216:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 268)
        (nil)))
(insn 228 227 229 20 (set (reg:SI 5 di)
        (reg:SI 160 [ _79 ])) "game_of_life.c":216:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 160 [ _79 ])
        (nil)))
(call_insn 229 228 230 20 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_x") [flags 0x3]  <function_decl 0x7fd3e8e0d600 check_x>) [0 check_x S1 A8])
            (const_int 0 [0]))) "game_of_life.c":216:38 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 230 229 231 20 (set (reg:SI 161 [ _80 ])
        (reg:SI 0 ax)) "game_of_life.c":216:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 231 230 232 20 (set (reg:DI 162 [ _81 ])
        (sign_extend:DI (reg:SI 161 [ _80 ]))) "game_of_life.c":216:38 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 161 [ _80 ])
        (nil)))
(insn 232 231 233 20 (parallel [
            (set (reg:DI 163 [ _82 ])
                (ashift:DI (reg:DI 162 [ _81 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":216:37 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 162 [ _81 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 233 232 234 20 (parallel [
            (set (reg/f:DI 164 [ _83 ])
                (plus:DI (reg/f:DI 159 [ _78 ])
                    (reg:DI 163 [ _82 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":216:37 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 163 [ _82 ])
        (expr_list:REG_DEAD (reg/f:DI 159 [ _78 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 234 233 235 20 (set (reg:SI 165 [ _84 ])
        (mem:SI (reg/f:DI 164 [ _83 ]) [2 *_83+0 S4 A32])) "game_of_life.c":216:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 164 [ _83 ])
        (nil)))
(insn 235 234 236 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 165 [ _84 ])
            (const_int 1 [0x1]))) "game_of_life.c":216:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 165 [ _84 ])
        (nil)))
(jump_insn 236 235 237 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 239)
            (pc))) "game_of_life.c":216:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 239)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 237 236 238 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":216:70 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20
;;              21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 166 167 168 169 170 171 172 173 174 175 176 269 270 271 272 273
(code_label 239 238 240 22 57 (nil) [1 uses])
(note 240 239 241 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 22 (set (reg:SI 269)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":217:19 75 {*movsi_internal}
     (nil))
(insn 242 241 243 22 (set (reg:SI 270)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":217:19 75 {*movsi_internal}
     (nil))
(insn 243 242 244 22 (set (reg:SI 4 si)
        (reg:SI 269)) "game_of_life.c":217:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 269)
        (nil)))
(insn 244 243 245 22 (set (reg:SI 5 di)
        (reg:SI 270)) "game_of_life.c":217:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 270)
        (nil)))
(call_insn 245 244 246 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_y") [flags 0x3]  <function_decl 0x7fd3e8e0d700 check_y>) [0 check_y S1 A8])
            (const_int 0 [0]))) "game_of_life.c":217:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 246 245 247 22 (set (reg:SI 166 [ _85 ])
        (reg:SI 0 ax)) "game_of_life.c":217:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 247 246 248 22 (set (reg:DI 167 [ _86 ])
        (sign_extend:DI (reg:SI 166 [ _85 ]))) "game_of_life.c":217:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 166 [ _85 ])
        (nil)))
(insn 248 247 249 22 (parallel [
            (set (reg:DI 168 [ _87 ])
                (ashift:DI (reg:DI 167 [ _86 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":217:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 167 [ _86 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 249 248 250 22 (set (reg/f:DI 271)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":217:18 74 {*movdi_internal}
     (nil))
(insn 250 249 251 22 (parallel [
            (set (reg/f:DI 169 [ _88 ])
                (plus:DI (reg:DI 168 [ _87 ])
                    (reg/f:DI 271)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":217:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 271)
        (expr_list:REG_DEAD (reg:DI 168 [ _87 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 168 [ _87 ]))
                    (nil))))))
(insn 251 250 252 22 (set (reg/f:DI 170 [ _89 ])
        (mem/f:DI (reg/f:DI 169 [ _88 ]) [4 *_88+0 S8 A64])) "game_of_life.c":217:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169 [ _88 ])
        (nil)))
(insn 252 251 253 22 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":217:34 75 {*movsi_internal}
     (nil))
(insn 253 252 254 22 (parallel [
            (set (reg:SI 171 [ _90 ])
                (plus:SI (reg:SI 272)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":217:34 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 272)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 254 253 255 22 (set (reg:SI 273)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":217:34 75 {*movsi_internal}
     (nil))
(insn 255 254 256 22 (set (reg:SI 4 si)
        (reg:SI 273)) "game_of_life.c":217:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 273)
        (nil)))
(insn 256 255 257 22 (set (reg:SI 5 di)
        (reg:SI 171 [ _90 ])) "game_of_life.c":217:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 171 [ _90 ])
        (nil)))
(call_insn 257 256 258 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_x") [flags 0x3]  <function_decl 0x7fd3e8e0d600 check_x>) [0 check_x S1 A8])
            (const_int 0 [0]))) "game_of_life.c":217:34 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 258 257 259 22 (set (reg:SI 172 [ _91 ])
        (reg:SI 0 ax)) "game_of_life.c":217:34 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 259 258 260 22 (set (reg:DI 173 [ _92 ])
        (sign_extend:DI (reg:SI 172 [ _91 ]))) "game_of_life.c":217:34 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 172 [ _91 ])
        (nil)))
(insn 260 259 261 22 (parallel [
            (set (reg:DI 174 [ _93 ])
                (ashift:DI (reg:DI 173 [ _92 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":217:33 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 173 [ _92 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 261 260 262 22 (parallel [
            (set (reg/f:DI 175 [ _94 ])
                (plus:DI (reg/f:DI 170 [ _89 ])
                    (reg:DI 174 [ _93 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":217:33 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 174 [ _93 ])
        (expr_list:REG_DEAD (reg/f:DI 170 [ _89 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 262 261 263 22 (set (reg:SI 176 [ _95 ])
        (mem:SI (reg/f:DI 175 [ _94 ]) [2 *_94+0 S4 A32])) "game_of_life.c":217:33 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 175 [ _94 ])
        (nil)))
(insn 263 262 264 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 176 [ _95 ])
            (const_int 1 [0x1]))) "game_of_life.c":217:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 176 [ _95 ])
        (nil)))
(jump_insn 264 263 265 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 267)
            (pc))) "game_of_life.c":217:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 267)
;;  succ:       23 (FALLTHRU)
;;              24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 265 264 266 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":217:66 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       22
;;              23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 177 178 179 180 181 182 183 184 185 186 187 188 274 275 276 277 278
(code_label 267 266 268 24 58 (nil) [1 uses])
(note 268 267 269 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 24 (set (reg:SI 274)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":218:19 75 {*movsi_internal}
     (nil))
(insn 270 269 271 24 (parallel [
            (set (reg:SI 177 [ _96 ])
                (plus:SI (reg:SI 274)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":218:19 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 274)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 271 270 272 24 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":218:19 75 {*movsi_internal}
     (nil))
(insn 272 271 273 24 (set (reg:SI 4 si)
        (reg:SI 275)) "game_of_life.c":218:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 275)
        (nil)))
(insn 273 272 274 24 (set (reg:SI 5 di)
        (reg:SI 177 [ _96 ])) "game_of_life.c":218:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 177 [ _96 ])
        (nil)))
(call_insn 274 273 275 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_y") [flags 0x3]  <function_decl 0x7fd3e8e0d700 check_y>) [0 check_y S1 A8])
            (const_int 0 [0]))) "game_of_life.c":218:19 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 275 274 276 24 (set (reg:SI 178 [ _97 ])
        (reg:SI 0 ax)) "game_of_life.c":218:19 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 276 275 277 24 (set (reg:DI 179 [ _98 ])
        (sign_extend:DI (reg:SI 178 [ _97 ]))) "game_of_life.c":218:19 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 178 [ _97 ])
        (nil)))
(insn 277 276 278 24 (parallel [
            (set (reg:DI 180 [ _99 ])
                (ashift:DI (reg:DI 179 [ _98 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":218:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 179 [ _98 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 278 277 279 24 (set (reg/f:DI 276)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":218:18 74 {*movdi_internal}
     (nil))
(insn 279 278 280 24 (parallel [
            (set (reg/f:DI 181 [ _100 ])
                (plus:DI (reg:DI 180 [ _99 ])
                    (reg/f:DI 276)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":218:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 276)
        (expr_list:REG_DEAD (reg:DI 180 [ _99 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 180 [ _99 ]))
                    (nil))))))
(insn 280 279 281 24 (set (reg/f:DI 182 [ _101 ])
        (mem/f:DI (reg/f:DI 181 [ _100 ]) [4 *_100+0 S8 A64])) "game_of_life.c":218:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 181 [ _100 ])
        (nil)))
(insn 281 280 282 24 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":218:38 75 {*movsi_internal}
     (nil))
(insn 282 281 283 24 (parallel [
            (set (reg:SI 183 [ _102 ])
                (plus:SI (reg:SI 277)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":218:38 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 277)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 283 282 284 24 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32])) "game_of_life.c":218:38 75 {*movsi_internal}
     (nil))
(insn 284 283 285 24 (set (reg:SI 4 si)
        (reg:SI 278)) "game_of_life.c":218:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 278)
        (nil)))
(insn 285 284 286 24 (set (reg:SI 5 di)
        (reg:SI 183 [ _102 ])) "game_of_life.c":218:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 183 [ _102 ])
        (nil)))
(call_insn 286 285 287 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("check_x") [flags 0x3]  <function_decl 0x7fd3e8e0d600 check_x>) [0 check_x S1 A8])
            (const_int 0 [0]))) "game_of_life.c":218:38 824 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 287 286 288 24 (set (reg:SI 184 [ _103 ])
        (reg:SI 0 ax)) "game_of_life.c":218:38 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 288 287 289 24 (set (reg:DI 185 [ _104 ])
        (sign_extend:DI (reg:SI 184 [ _103 ]))) "game_of_life.c":218:38 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 184 [ _103 ])
        (nil)))
(insn 289 288 290 24 (parallel [
            (set (reg:DI 186 [ _105 ])
                (ashift:DI (reg:DI 185 [ _104 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":218:37 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 185 [ _104 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 290 289 291 24 (parallel [
            (set (reg/f:DI 187 [ _106 ])
                (plus:DI (reg/f:DI 182 [ _101 ])
                    (reg:DI 186 [ _105 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":218:37 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 186 [ _105 ])
        (expr_list:REG_DEAD (reg/f:DI 182 [ _101 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 291 290 292 24 (set (reg:SI 188 [ _107 ])
        (mem:SI (reg/f:DI 187 [ _106 ]) [2 *_106+0 S4 A32])) "game_of_life.c":218:37 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ _106 ])
        (nil)))
(insn 292 291 293 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 188 [ _107 ])
            (const_int 1 [0x1]))) "game_of_life.c":218:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 188 [ _107 ])
        (nil)))
(jump_insn 293 292 294 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) "game_of_life.c":218:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 296)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 294 293 295 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":218:70 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       24
;;              25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 189 190 191 192 193 194 195 196 279 280 281
(code_label 296 295 297 26 59 (nil) [1 uses])
(note 297 296 298 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 26 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":220:18 75 {*movsi_internal}
     (nil))
(insn 299 298 300 26 (set (reg:DI 189 [ _108 ])
        (sign_extend:DI (reg:SI 279))) "game_of_life.c":220:18 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 279)
        (nil)))
(insn 300 299 301 26 (parallel [
            (set (reg:DI 190 [ _109 ])
                (ashift:DI (reg:DI 189 [ _108 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":220:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 189 [ _108 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 301 300 302 26 (set (reg/f:DI 280)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":220:18 74 {*movdi_internal}
     (nil))
(insn 302 301 303 26 (parallel [
            (set (reg/f:DI 191 [ _110 ])
                (plus:DI (reg:DI 190 [ _109 ])
                    (reg/f:DI 280)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":220:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 280)
        (expr_list:REG_DEAD (reg:DI 190 [ _109 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 190 [ _109 ]))
                    (nil))))))
(insn 303 302 304 26 (set (reg/f:DI 192 [ _111 ])
        (mem/f:DI (reg/f:DI 191 [ _110 ]) [4 *_110+0 S8 A64])) "game_of_life.c":220:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 191 [ _110 ])
        (nil)))
(insn 304 303 305 26 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":220:21 75 {*movsi_internal}
     (nil))
(insn 305 304 306 26 (set (reg:DI 193 [ _112 ])
        (sign_extend:DI (reg:SI 281))) "game_of_life.c":220:21 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 281)
        (nil)))
(insn 306 305 307 26 (parallel [
            (set (reg:DI 194 [ _113 ])
                (ashift:DI (reg:DI 193 [ _112 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":220:21 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 193 [ _112 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 307 306 308 26 (parallel [
            (set (reg/f:DI 195 [ _114 ])
                (plus:DI (reg/f:DI 192 [ _111 ])
                    (reg:DI 194 [ _113 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":220:21 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 194 [ _113 ])
        (expr_list:REG_DEAD (reg/f:DI 192 [ _111 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 308 307 309 26 (set (reg:SI 196 [ _115 ])
        (mem:SI (reg/f:DI 195 [ _114 ]) [2 *_114+0 S4 A32])) "game_of_life.c":220:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195 [ _114 ])
        (nil)))
(insn 309 308 310 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 196 [ _115 ])
            (const_int 1 [0x1]))) "game_of_life.c":220:16 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 196 [ _115 ])
        (nil)))
(jump_insn 310 309 311 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) "game_of_life.c":220:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 332)
;;  succ:       27 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 311 310 312 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 312 311 313 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
            (const_int 3 [0x3]))) "game_of_life.c":220:30 11 {*cmpsi_1}
     (nil))
(jump_insn 313 312 314 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 317)
            (pc))) "game_of_life.c":220:30 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 317)
;;  succ:       29
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 314 313 315 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
            (const_int 2 [0x2]))) "game_of_life.c":220:47 11 {*cmpsi_1}
     (nil))
(jump_insn 316 315 317 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 332)
            (pc))) "game_of_life.c":220:47 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 332)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       27
;;              28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 197 198 199 200 201 202 203 282 283 284
(code_label 317 316 318 29 61 (nil) [1 uses])
(note 318 317 319 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 29 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":221:18 75 {*movsi_internal}
     (nil))
(insn 320 319 321 29 (set (reg:DI 197 [ _116 ])
        (sign_extend:DI (reg:SI 282))) "game_of_life.c":221:18 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 282)
        (nil)))
(insn 321 320 322 29 (parallel [
            (set (reg:DI 198 [ _117 ])
                (ashift:DI (reg:DI 197 [ _116 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":221:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 197 [ _116 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 322 321 323 29 (set (reg/f:DI 283)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])) "game_of_life.c":221:18 74 {*movdi_internal}
     (nil))
(insn 323 322 324 29 (parallel [
            (set (reg/f:DI 199 [ _118 ])
                (plus:DI (reg:DI 198 [ _117 ])
                    (reg/f:DI 283)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":221:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 283)
        (expr_list:REG_DEAD (reg:DI 198 [ _117 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])
                        (reg:DI 198 [ _117 ]))
                    (nil))))))
(insn 324 323 325 29 (set (reg/f:DI 200 [ _119 ])
        (mem/f:DI (reg/f:DI 199 [ _118 ]) [4 *_118+0 S8 A64])) "game_of_life.c":221:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 199 [ _118 ])
        (nil)))
(insn 325 324 326 29 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":221:21 75 {*movsi_internal}
     (nil))
(insn 326 325 327 29 (set (reg:DI 201 [ _120 ])
        (sign_extend:DI (reg:SI 284))) "game_of_life.c":221:21 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 284)
        (nil)))
(insn 327 326 328 29 (parallel [
            (set (reg:DI 202 [ _121 ])
                (ashift:DI (reg:DI 201 [ _120 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":221:21 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 201 [ _120 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 328 327 329 29 (parallel [
            (set (reg/f:DI 203 [ _122 ])
                (plus:DI (reg/f:DI 200 [ _119 ])
                    (reg:DI 202 [ _121 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":221:21 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 202 [ _121 ])
        (expr_list:REG_DEAD (reg/f:DI 200 [ _119 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 329 328 416 29 (set (mem:SI (reg/f:DI 203 [ _122 ]) [2 *_122+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":221:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 203 [ _122 ])
        (nil)))
(jump_insn 416 329 417 29 (set (pc)
        (label_ref 345)) "game_of_life.c":221:25 807 {jump}
     (nil)
 -> 345)
;;  succ:       31 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

(barrier 417 416 332)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       26
;;              28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 204 205 206 207 208 209 210 285 286 287
(code_label 332 417 333 30 60 (nil) [2 uses])
(note 333 332 334 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 30 (set (reg:SI 285)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":223:18 75 {*movsi_internal}
     (nil))
(insn 335 334 336 30 (set (reg:DI 204 [ _123 ])
        (sign_extend:DI (reg:SI 285))) "game_of_life.c":223:18 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 285)
        (nil)))
(insn 336 335 337 30 (parallel [
            (set (reg:DI 205 [ _124 ])
                (ashift:DI (reg:DI 204 [ _123 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":223:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 204 [ _123 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 337 336 338 30 (set (reg/f:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])) "game_of_life.c":223:18 74 {*movdi_internal}
     (nil))
(insn 338 337 339 30 (parallel [
            (set (reg/f:DI 206 [ _125 ])
                (plus:DI (reg:DI 205 [ _124 ])
                    (reg/f:DI 286)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":223:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 286)
        (expr_list:REG_DEAD (reg:DI 205 [ _124 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])
                        (reg:DI 205 [ _124 ]))
                    (nil))))))
(insn 339 338 340 30 (set (reg/f:DI 207 [ _126 ])
        (mem/f:DI (reg/f:DI 206 [ _125 ]) [4 *_125+0 S8 A64])) "game_of_life.c":223:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 206 [ _125 ])
        (nil)))
(insn 340 339 341 30 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":223:21 75 {*movsi_internal}
     (nil))
(insn 341 340 342 30 (set (reg:DI 208 [ _127 ])
        (sign_extend:DI (reg:SI 287))) "game_of_life.c":223:21 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 287)
        (nil)))
(insn 342 341 343 30 (parallel [
            (set (reg:DI 209 [ _128 ])
                (ashift:DI (reg:DI 208 [ _127 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":223:21 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 208 [ _127 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 343 342 344 30 (parallel [
            (set (reg/f:DI 210 [ _129 ])
                (plus:DI (reg/f:DI 207 [ _126 ])
                    (reg:DI 209 [ _128 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":223:21 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 209 [ _128 ])
        (expr_list:REG_DEAD (reg/f:DI 207 [ _126 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 344 343 345 30 (set (mem:SI (reg/f:DI 210 [ _129 ]) [2 *_129+0 S4 A32])
        (const_int 0 [0])) "game_of_life.c":223:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 210 [ _129 ])
        (nil)))
;;  succ:       31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 (FALLTHRU)
;;              29 [always] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 211 212 213 214 215 216 217 218 288 289 290
(code_label 345 344 346 31 62 (nil) [1 uses])
(note 346 345 347 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 31 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":225:18 75 {*movsi_internal}
     (nil))
(insn 348 347 349 31 (set (reg:DI 211 [ _130 ])
        (sign_extend:DI (reg:SI 288))) "game_of_life.c":225:18 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 288)
        (nil)))
(insn 349 348 350 31 (parallel [
            (set (reg:DI 212 [ _131 ])
                (ashift:DI (reg:DI 211 [ _130 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":225:18 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 211 [ _130 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 350 349 351 31 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":225:18 74 {*movdi_internal}
     (nil))
(insn 351 350 352 31 (parallel [
            (set (reg/f:DI 213 [ _132 ])
                (plus:DI (reg:DI 212 [ _131 ])
                    (reg/f:DI 289)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":225:18 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 289)
        (expr_list:REG_DEAD (reg:DI 212 [ _131 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])
                        (reg:DI 212 [ _131 ]))
                    (nil))))))
(insn 352 351 353 31 (set (reg/f:DI 214 [ _133 ])
        (mem/f:DI (reg/f:DI 213 [ _132 ]) [4 *_132+0 S8 A64])) "game_of_life.c":225:18 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213 [ _132 ])
        (nil)))
(insn 353 352 354 31 (set (reg:SI 290)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":225:21 75 {*movsi_internal}
     (nil))
(insn 354 353 355 31 (set (reg:DI 215 [ _134 ])
        (sign_extend:DI (reg:SI 290))) "game_of_life.c":225:21 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 290)
        (nil)))
(insn 355 354 356 31 (parallel [
            (set (reg:DI 216 [ _135 ])
                (ashift:DI (reg:DI 215 [ _134 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":225:21 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 215 [ _134 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 356 355 357 31 (parallel [
            (set (reg/f:DI 217 [ _136 ])
                (plus:DI (reg/f:DI 214 [ _133 ])
                    (reg:DI 216 [ _135 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":225:21 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 216 [ _135 ])
        (expr_list:REG_DEAD (reg/f:DI 214 [ _133 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 357 356 358 31 (set (reg:SI 218 [ _137 ])
        (mem:SI (reg/f:DI 217 [ _136 ]) [2 *_136+0 S4 A32])) "game_of_life.c":225:21 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 217 [ _136 ])
        (nil)))
(insn 358 357 359 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 218 [ _137 ])
            (const_int 0 [0]))) "game_of_life.c":225:16 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 218 [ _137 ])
        (nil)))
(jump_insn 359 358 360 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) "game_of_life.c":225:16 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 375)
;;  succ:       32 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 360 359 361 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 361 360 362 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 counter+0 S4 A32])
            (const_int 3 [0x3]))) "game_of_life.c":225:30 11 {*cmpsi_1}
     (nil))
(jump_insn 362 361 363 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 375)
            (pc))) "game_of_life.c":225:30 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 375)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 219 220 221 222 223 224 225 291 292 293
(note 363 362 364 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 364 363 365 33 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":225:50 75 {*movsi_internal}
     (nil))
(insn 365 364 366 33 (set (reg:DI 219 [ _138 ])
        (sign_extend:DI (reg:SI 291))) "game_of_life.c":225:50 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 291)
        (nil)))
(insn 366 365 367 33 (parallel [
            (set (reg:DI 220 [ _139 ])
                (ashift:DI (reg:DI 219 [ _138 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":225:50 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 219 [ _138 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 367 366 368 33 (set (reg/f:DI 292)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])) "game_of_life.c":225:50 74 {*movdi_internal}
     (nil))
(insn 368 367 369 33 (parallel [
            (set (reg/f:DI 221 [ _140 ])
                (plus:DI (reg:DI 220 [ _139 ])
                    (reg/f:DI 292)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":225:50 210 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 292)
        (expr_list:REG_DEAD (reg:DI 220 [ _139 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])
                        (reg:DI 220 [ _139 ]))
                    (nil))))))
(insn 369 368 370 33 (set (reg/f:DI 222 [ _141 ])
        (mem/f:DI (reg/f:DI 221 [ _140 ]) [4 *_140+0 S8 A64])) "game_of_life.c":225:50 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 221 [ _140 ])
        (nil)))
(insn 370 369 371 33 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":225:53 75 {*movsi_internal}
     (nil))
(insn 371 370 372 33 (set (reg:DI 223 [ _142 ])
        (sign_extend:DI (reg:SI 293))) "game_of_life.c":225:53 147 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 293)
        (nil)))
(insn 372 371 373 33 (parallel [
            (set (reg:DI 224 [ _143 ])
                (ashift:DI (reg:DI 223 [ _142 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":225:53 656 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 223 [ _142 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 373 372 374 33 (parallel [
            (set (reg/f:DI 225 [ _144 ])
                (plus:DI (reg/f:DI 222 [ _141 ])
                    (reg:DI 224 [ _143 ])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":225:53 210 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 224 [ _143 ])
        (expr_list:REG_DEAD (reg/f:DI 222 [ _141 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 374 373 375 33 (set (mem:SI (reg/f:DI 225 [ _144 ]) [2 *_144+0 S4 A32])
        (const_int 1 [0x1])) "game_of_life.c":225:57 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 225 [ _144 ])
        (nil)))
;;  succ:       34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL)
;;  pred:       31
;;              32
;;              33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 375 374 376 34 63 (nil) [2 uses])
(note 376 375 377 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":208:33 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       35 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL)
;;  pred:       34 (FALLTHRU,DFS_BACK)
;;              9 [always] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 294
(code_label 378 377 379 35 51 (nil) [1 uses])
(note 379 378 381 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 381 379 382 35 (set (reg:SI 294)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 j+0 S4 A32])) "game_of_life.c":208:27 75 {*movsi_internal}
     (nil))
(insn 382 381 383 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 294)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -48 [0xffffffffffffffd0])) [2 M+0 S4 A32]))) "game_of_life.c":208:27 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 294)
        (nil)))
(jump_insn 383 382 384 35 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 380)
            (pc))) "game_of_life.c":208:27 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 380)
;;  succ:       10
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(note 384 383 385 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 386 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":207:29 209 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       37 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL)
;;  pred:       36 (FALLTHRU,DFS_BACK)
;;              8 [always] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 295
(code_label 386 385 387 37 50 (nil) [1 uses])
(note 387 386 389 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 389 387 390 37 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A64])) "game_of_life.c":207:23 75 {*movsi_internal}
     (nil))
(insn 390 389 391 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 295)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32]))) "game_of_life.c":207:23 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 295)
        (nil)))
(jump_insn 391 390 392 37 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 388)
            (pc))) "game_of_life.c":207:23 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 388)
;;  succ:       9
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 1, flags: (RTL)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 226 227 296 297
(note 392 391 393 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 394 38 (set (reg:SI 296)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 N+0 S4 A32])) "game_of_life.c":229:5 75 {*movsi_internal}
     (nil))
(insn 394 393 395 38 (set (reg:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 A+0 S8 A64])) "game_of_life.c":229:5 74 {*movdi_internal}
     (nil))
(insn 395 394 396 38 (set (reg:SI 4 si)
        (reg:SI 296)) "game_of_life.c":229:5 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 296)
        (nil)))
(insn 396 395 397 38 (set (reg:DI 5 di)
        (reg:DI 297)) "game_of_life.c":229:5 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 297)
        (nil)))
(call_insn 397 396 398 38 (call (mem:QI (symbol_ref:DI ("dynamic_array_free") [flags 0x3]  <function_decl 0x7fd3e8e07e00 dynamic_array_free>) [0 dynamic_array_free S1 A8])
        (const_int 0 [0])) "game_of_life.c":229:5 813 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 398 397 401 38 (set (reg/f:DI 226 [ _172 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 19 frame)
                (const_int -40 [0xffffffffffffffd8])) [1 B+0 S8 A64])) "game_of_life.c":230:12 74 {*movdi_internal}
     (nil))
(insn 401 398 405 38 (set (reg/f:DI 227 [ <retval> ])
        (reg/f:DI 226 [ _172 ])) "game_of_life.c":230:12 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 226 [ _172 ])
        (nil)))
(insn 405 401 406 38 (set (reg/i:DI 0 ax)
        (reg/f:DI 227 [ <retval> ])) "game_of_life.c":231:1 74 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 227 [ <retval> ])
        (nil)))
(insn 406 405 0 38 (use (reg/i:DI 0 ax)) "game_of_life.c":231:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function check_x (check_x, funcdef_no=17, decl_uid=4963, cgraph_uid=18, symbol_order=17)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 44(l0): point = 0
   Insn 43(l0): point = 2
   Insn 39(l0): point = 4
   Insn 36(l0): point = 6
   Insn 33(l0): point = 9
   Insn 32(l0): point = 11
   Insn 31(l0): point = 13
   Insn 30(l0): point = 15
   Insn 24(l0): point = 18
   Insn 23(l0): point = 20
   Insn 18(l0): point = 23
   Insn 17(l0): point = 25
   Insn 16(l0): point = 27
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 7(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r83): [3..4]
 a1(r82): [5..6]
 a2(r93): [10..11]
 a3(r95): [12..13]
 a4(r94): [12..15]
 a5(r88): [24..25]
 a6(r89): [26..27]
 a7(r85): [33..34]
 a8(r84): [37..38]
Compressing live ranges: from 45 to 16 - 35%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
 a2(r93): [4..5]
 a3(r95): [6..7]
 a4(r94): [6..7]
 a5(r88): [8..9]
 a6(r89): [10..11]
 a7(r85): [12..13]
 a8(r84): [14..15]
  pref0:a0(r83)<-hr0@1500
  regions=1, blocks=7, points=16
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    1:r82  l0     0    0:r83  l0     0    8:r84  l0     0    7:r85  l0     0
    5:r88  l0     0    6:r89  l0     0    2:r93  l0     0    4:r94  l0     1
    3:r95  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


check_x

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={4d,2u} r19={1d,20u,4e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r88={1d,1u} r89={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 89{33d,52u,4e} in 20{20 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 85
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 x+0 S4 A32])
        (reg:SI 5 di [ x ])) "game_of_life.c":233:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ x ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 M+0 S4 A32])
        (reg:SI 4 si [ M ])) "game_of_life.c":233:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ M ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 x+0 S4 A32])) "game_of_life.c":234:9 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 result_x+0 S4 A32])
        (reg:SI 84)) "game_of_life.c":234:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 x+0 S4 A32])) "game_of_life.c":235:8 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 85)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 M+0 S4 A32]))) "game_of_life.c":235:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "game_of_life.c":235:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 88 89
(note 12 11 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 12 17 3 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 x+0 S4 A32])) "game_of_life.c":235:26 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:SI 88)
                (minus:SI (reg:SI 89)
                    (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 M+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":235:26 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 x+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 M+0 S4 A32]))
                (nil)))))
(insn 18 17 19 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 result_x+0 S4 A32])
        (reg:SI 88)) "game_of_life.c":235:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 19 18 20 4 68 (nil) [1 uses])
(note 20 19 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 20 24 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 x+0 S4 A32])
            (const_int 0 [0]))) "game_of_life.c":236:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "game_of_life.c":236:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 34)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 93 94 95
(note 25 24 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 25 31 5 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 x+0 S4 A32])) "game_of_life.c":236:25 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 M+0 S4 A32])) "game_of_life.c":236:25 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg:SI 94)
                    (reg:SI 95)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":236:25 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_DEAD (reg:SI 94)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                                (const_int -20 [0xffffffffffffffec])) [2 x+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                                (const_int -24 [0xffffffffffffffe8])) [2 M+0 S4 A32]))
                    (nil))))))
(insn 33 32 34 5 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 result_x+0 S4 A32])
        (reg:SI 93)) "game_of_life.c":236:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 82 83
(code_label 34 33 35 6 69 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 39 6 (set (reg:SI 82 [ _8 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 result_x+0 S4 A32])) "game_of_life.c":237:12 75 {*movsi_internal}
     (nil))
(insn 39 36 43 6 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _8 ])) "game_of_life.c":237:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ _8 ])
        (nil)))
(insn 43 39 44 6 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "game_of_life.c":238:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ <retval> ])
        (nil)))
(insn 44 43 0 6 (use (reg/i:SI 0 ax)) "game_of_life.c":238:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]


;; Function check_y (check_y, funcdef_no=18, decl_uid=4966, cgraph_uid=19, symbol_order=18)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 7 n_edges 8 count 7 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a3(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a4(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:18000 INT_SSE_REGS:18000 ALL_REGS:206000 MEM:7000
  a5(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a6(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:12000 NO_REX_SSE_REGS:12000 SSE_REGS:12000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 44(l0): point = 0
   Insn 43(l0): point = 2
   Insn 39(l0): point = 4
   Insn 36(l0): point = 6
   Insn 33(l0): point = 9
   Insn 32(l0): point = 11
   Insn 31(l0): point = 13
   Insn 30(l0): point = 15
   Insn 24(l0): point = 18
   Insn 23(l0): point = 20
   Insn 18(l0): point = 23
   Insn 17(l0): point = 25
   Insn 16(l0): point = 27
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 8(l0): point = 36
   Insn 7(l0): point = 38
   Insn 3(l0): point = 40
   Insn 2(l0): point = 42
 a0(r83): [3..4]
 a1(r82): [5..6]
 a2(r93): [10..11]
 a3(r95): [12..13]
 a4(r94): [12..15]
 a5(r88): [24..25]
 a6(r89): [26..27]
 a7(r85): [33..34]
 a8(r84): [37..38]
Compressing live ranges: from 45 to 16 - 35%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
 a2(r93): [4..5]
 a3(r95): [6..7]
 a4(r94): [6..7]
 a5(r88): [8..9]
 a6(r89): [10..11]
 a7(r85): [12..13]
 a8(r84): [14..15]
  pref0:a0(r83)<-hr0@1500
  regions=1, blocks=7, points=16
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=9
Disposition:
    1:r82  l0     0    0:r83  l0     0    8:r84  l0     0    7:r85  l0     0
    5:r88  l0     0    6:r89  l0     0    2:r93  l0     0    4:r94  l0     1
    3:r95  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


check_y

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={4d,2u} r19={1d,20u,4e} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r88={1d,1u} r89={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 89{33d,52u,4e} in 20{20 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 84 85
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 y+0 S4 A32])
        (reg:SI 5 di [ y ])) "game_of_life.c":240:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ y ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 N+0 S4 A32])
        (reg:SI 4 si [ N ])) "game_of_life.c":240:27 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ N ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 y+0 S4 A32])) "game_of_life.c":241:9 75 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 result_y+0 S4 A32])
        (reg:SI 84)) "game_of_life.c":241:9 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(insn 9 8 10 2 (set (reg:SI 85)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 y+0 S4 A32])) "game_of_life.c":242:8 75 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 85)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 N+0 S4 A32]))) "game_of_life.c":242:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "game_of_life.c":242:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 88 89
(note 12 11 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 12 17 3 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 y+0 S4 A32])) "game_of_life.c":242:26 75 {*movsi_internal}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:SI 88)
                (minus:SI (reg:SI 89)
                    (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 N+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":242:26 282 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 y+0 S4 A32])
                    (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 N+0 S4 A32]))
                (nil)))))
(insn 18 17 19 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 result_y+0 S4 A32])
        (reg:SI 88)) "game_of_life.c":242:26 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       2
;;              3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags]
(code_label 19 18 20 4 72 (nil) [1 uses])
(note 20 19 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 20 24 4 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 y+0 S4 A32])
            (const_int 0 [0]))) "game_of_life.c":243:8 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) "game_of_life.c":243:8 806 {*jcc}
     (expr_list:REG_DEAD (reg:CCGOC 17 flags)
        (nil))
 -> 34)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 17 [flags] 93 94 95
(note 25 24 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 25 31 5 (set (reg:SI 94)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 y+0 S4 A32])) "game_of_life.c":243:25 75 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:SI 95)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 N+0 S4 A32])) "game_of_life.c":243:25 75 {*movsi_internal}
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:SI 93)
                (plus:SI (reg:SI 94)
                    (reg:SI 95)))
            (clobber (reg:CC 17 flags))
        ]) "game_of_life.c":243:25 209 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 95)
        (expr_list:REG_DEAD (reg:SI 94)
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                                (const_int -20 [0xffffffffffffffec])) [2 y+0 S4 A32])
                        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                                (const_int -24 [0xffffffffffffffe8])) [2 N+0 S4 A32]))
                    (nil))))))
(insn 33 32 34 5 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 result_y+0 S4 A32])
        (reg:SI 93)) "game_of_life.c":243:25 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93)
        (nil)))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (RTL)
;;  pred:       4
;;              5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 82 83
(code_label 34 33 35 6 73 (nil) [1 uses])
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 39 6 (set (reg:SI 82 [ _8 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [2 result_y+0 S4 A32])) "game_of_life.c":244:12 75 {*movsi_internal}
     (nil))
(insn 39 36 43 6 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _8 ])) "game_of_life.c":244:12 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ _8 ])
        (nil)))
(insn 43 39 44 6 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "game_of_life.c":245:1 75 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ <retval> ])
        (nil)))
(insn 44 43 0 6 (use (reg/i:SI 0 ax)) "game_of_life.c":245:1 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

